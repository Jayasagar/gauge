// Code generated by protoc-gen-go.
// source: spec.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	spec.proto

It has these top-level messages:
	ProtoSpec
	ProtoItem
	ProtoScenario
	ProtoTableDrivenScenario
	ProtoStep
	ProtoConcept
	ProtoTags
	Fragment
	Parameter
	Argument
	ProtoComment
	ProtoTable
	ProtoTableRow
	ProtoStepExecutionResult
	ProtoExecutionResult
	ProtoHookFailure
	ProtoSuiteResult
	ProtoSpecResult
*/
package main

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ProtoItem_ItemType int32

const (
	ProtoItem_Step                ProtoItem_ItemType = 1
	ProtoItem_Comment             ProtoItem_ItemType = 2
	ProtoItem_Concept             ProtoItem_ItemType = 3
	ProtoItem_Scenario            ProtoItem_ItemType = 4
	ProtoItem_TableDrivenScenario ProtoItem_ItemType = 5
	ProtoItem_Context             ProtoItem_ItemType = 6
	ProtoItem_Table               ProtoItem_ItemType = 7
)

var ProtoItem_ItemType_name = map[int32]string{
	1: "Step",
	2: "Comment",
	3: "Concept",
	4: "Scenario",
	5: "TableDrivenScenario",
	6: "Context",
	7: "Table",
}
var ProtoItem_ItemType_value = map[string]int32{
	"Step":                1,
	"Comment":             2,
	"Concept":             3,
	"Scenario":            4,
	"TableDrivenScenario": 5,
	"Context":             6,
	"Table":               7,
}

func (x ProtoItem_ItemType) Enum() *ProtoItem_ItemType {
	p := new(ProtoItem_ItemType)
	*p = x
	return p
}
func (x ProtoItem_ItemType) String() string {
	return proto.EnumName(ProtoItem_ItemType_name, int32(x))
}
func (x *ProtoItem_ItemType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtoItem_ItemType_value, data, "ProtoItem_ItemType")
	if err != nil {
		return err
	}
	*x = ProtoItem_ItemType(value)
	return nil
}

type Fragment_FragmentType int32

const (
	Fragment_Text      Fragment_FragmentType = 1
	Fragment_Parameter Fragment_FragmentType = 2
)

var Fragment_FragmentType_name = map[int32]string{
	1: "Text",
	2: "Parameter",
}
var Fragment_FragmentType_value = map[string]int32{
	"Text":      1,
	"Parameter": 2,
}

func (x Fragment_FragmentType) Enum() *Fragment_FragmentType {
	p := new(Fragment_FragmentType)
	*p = x
	return p
}
func (x Fragment_FragmentType) String() string {
	return proto.EnumName(Fragment_FragmentType_name, int32(x))
}
func (x *Fragment_FragmentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Fragment_FragmentType_value, data, "Fragment_FragmentType")
	if err != nil {
		return err
	}
	*x = Fragment_FragmentType(value)
	return nil
}

type Parameter_ParameterType int32

const (
	Parameter_Static  Parameter_ParameterType = 1
	Parameter_Dynamic Parameter_ParameterType = 2
	Parameter_Special Parameter_ParameterType = 3
	Parameter_Table   Parameter_ParameterType = 4
)

var Parameter_ParameterType_name = map[int32]string{
	1: "Static",
	2: "Dynamic",
	3: "Special",
	4: "Table",
}
var Parameter_ParameterType_value = map[string]int32{
	"Static":  1,
	"Dynamic": 2,
	"Special": 3,
	"Table":   4,
}

func (x Parameter_ParameterType) Enum() *Parameter_ParameterType {
	p := new(Parameter_ParameterType)
	*p = x
	return p
}
func (x Parameter_ParameterType) String() string {
	return proto.EnumName(Parameter_ParameterType_name, int32(x))
}
func (x *Parameter_ParameterType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Parameter_ParameterType_value, data, "Parameter_ParameterType")
	if err != nil {
		return err
	}
	*x = Parameter_ParameterType(value)
	return nil
}

type ProtoSpec struct {
	SpecHeading      *string           `protobuf:"bytes,1,req,name=specHeading" json:"specHeading,omitempty"`
	Items            []*ProtoItem      `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	IsTableDriven    *bool             `protobuf:"varint,3,req,name=isTableDriven" json:"isTableDriven,omitempty"`
	PreHookFailure   *ProtoHookFailure `protobuf:"bytes,4,opt,name=preHookFailure" json:"preHookFailure,omitempty"`
	PostHookFailure  *ProtoHookFailure `protobuf:"bytes,5,opt,name=postHookFailure" json:"postHookFailure,omitempty"`
	FileName         *string           `protobuf:"bytes,6,req,name=fileName" json:"fileName,omitempty"`
	Tags             []string          `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ProtoSpec) Reset()         { *m = ProtoSpec{} }
func (m *ProtoSpec) String() string { return proto.CompactTextString(m) }
func (*ProtoSpec) ProtoMessage()    {}

func (m *ProtoSpec) GetSpecHeading() string {
	if m != nil && m.SpecHeading != nil {
		return *m.SpecHeading
	}
	return ""
}

func (m *ProtoSpec) GetItems() []*ProtoItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ProtoSpec) GetIsTableDriven() bool {
	if m != nil && m.IsTableDriven != nil {
		return *m.IsTableDriven
	}
	return false
}

func (m *ProtoSpec) GetPreHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PreHookFailure
	}
	return nil
}

func (m *ProtoSpec) GetPostHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PostHookFailure
	}
	return nil
}

func (m *ProtoSpec) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *ProtoSpec) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ProtoItem struct {
	ItemType            *ProtoItem_ItemType       `protobuf:"varint,1,req,name=itemType,enum=main.ProtoItem_ItemType" json:"itemType,omitempty"`
	Step                *ProtoStep                `protobuf:"bytes,2,opt,name=step" json:"step,omitempty"`
	Concept             *ProtoConcept             `protobuf:"bytes,3,opt,name=concept" json:"concept,omitempty"`
	Scenario            *ProtoScenario            `protobuf:"bytes,4,opt,name=scenario" json:"scenario,omitempty"`
	TableDrivenScenario *ProtoTableDrivenScenario `protobuf:"bytes,5,opt,name=tableDrivenScenario" json:"tableDrivenScenario,omitempty"`
	Comment             *ProtoComment             `protobuf:"bytes,6,opt,name=comment" json:"comment,omitempty"`
	Table               *ProtoTable               `protobuf:"bytes,7,opt,name=table" json:"table,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *ProtoItem) Reset()         { *m = ProtoItem{} }
func (m *ProtoItem) String() string { return proto.CompactTextString(m) }
func (*ProtoItem) ProtoMessage()    {}

func (m *ProtoItem) GetItemType() ProtoItem_ItemType {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return ProtoItem_Step
}

func (m *ProtoItem) GetStep() *ProtoStep {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *ProtoItem) GetConcept() *ProtoConcept {
	if m != nil {
		return m.Concept
	}
	return nil
}

func (m *ProtoItem) GetScenario() *ProtoScenario {
	if m != nil {
		return m.Scenario
	}
	return nil
}

func (m *ProtoItem) GetTableDrivenScenario() *ProtoTableDrivenScenario {
	if m != nil {
		return m.TableDrivenScenario
	}
	return nil
}

func (m *ProtoItem) GetComment() *ProtoComment {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *ProtoItem) GetTable() *ProtoTable {
	if m != nil {
		return m.Table
	}
	return nil
}

type ProtoScenario struct {
	ScenarioHeading  *string           `protobuf:"bytes,1,req,name=scenarioHeading" json:"scenarioHeading,omitempty"`
	Failed           *bool             `protobuf:"varint,2,req,name=failed" json:"failed,omitempty"`
	ScenarioItems    []*ProtoItem      `protobuf:"bytes,3,rep,name=scenarioItems" json:"scenarioItems,omitempty"`
	PreHookFailure   *ProtoHookFailure `protobuf:"bytes,4,opt,name=preHookFailure" json:"preHookFailure,omitempty"`
	PostHookFailure  *ProtoHookFailure `protobuf:"bytes,5,opt,name=postHookFailure" json:"postHookFailure,omitempty"`
	Tags             []string          `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ProtoScenario) Reset()         { *m = ProtoScenario{} }
func (m *ProtoScenario) String() string { return proto.CompactTextString(m) }
func (*ProtoScenario) ProtoMessage()    {}

func (m *ProtoScenario) GetScenarioHeading() string {
	if m != nil && m.ScenarioHeading != nil {
		return *m.ScenarioHeading
	}
	return ""
}

func (m *ProtoScenario) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

func (m *ProtoScenario) GetScenarioItems() []*ProtoItem {
	if m != nil {
		return m.ScenarioItems
	}
	return nil
}

func (m *ProtoScenario) GetPreHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PreHookFailure
	}
	return nil
}

func (m *ProtoScenario) GetPostHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PostHookFailure
	}
	return nil
}

func (m *ProtoScenario) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ProtoTableDrivenScenario struct {
	Scenarios        []*ProtoScenario `protobuf:"bytes,1,rep,name=scenarios" json:"scenarios,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ProtoTableDrivenScenario) Reset()         { *m = ProtoTableDrivenScenario{} }
func (m *ProtoTableDrivenScenario) String() string { return proto.CompactTextString(m) }
func (*ProtoTableDrivenScenario) ProtoMessage()    {}

func (m *ProtoTableDrivenScenario) GetScenarios() []*ProtoScenario {
	if m != nil {
		return m.Scenarios
	}
	return nil
}

type ProtoStep struct {
	ActualText          *string                   `protobuf:"bytes,1,req,name=actualText" json:"actualText,omitempty"`
	ParsedText          *string                   `protobuf:"bytes,2,req,name=parsedText" json:"parsedText,omitempty"`
	Fragments           []*Fragment               `protobuf:"bytes,3,rep,name=fragments" json:"fragments,omitempty"`
	StepExecutionResult *ProtoStepExecutionResult `protobuf:"bytes,4,opt,name=stepExecutionResult" json:"stepExecutionResult,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *ProtoStep) Reset()         { *m = ProtoStep{} }
func (m *ProtoStep) String() string { return proto.CompactTextString(m) }
func (*ProtoStep) ProtoMessage()    {}

func (m *ProtoStep) GetActualText() string {
	if m != nil && m.ActualText != nil {
		return *m.ActualText
	}
	return ""
}

func (m *ProtoStep) GetParsedText() string {
	if m != nil && m.ParsedText != nil {
		return *m.ParsedText
	}
	return ""
}

func (m *ProtoStep) GetFragments() []*Fragment {
	if m != nil {
		return m.Fragments
	}
	return nil
}

func (m *ProtoStep) GetStepExecutionResult() *ProtoStepExecutionResult {
	if m != nil {
		return m.StepExecutionResult
	}
	return nil
}

type ProtoConcept struct {
	ConceptStep            *ProtoStep                `protobuf:"bytes,1,req,name=conceptStep" json:"conceptStep,omitempty"`
	Steps                  []*ProtoStep              `protobuf:"bytes,2,rep,name=steps" json:"steps,omitempty"`
	Failed                 *bool                     `protobuf:"varint,3,req,name=failed" json:"failed,omitempty"`
	ConceptExecutionResult *ProtoStepExecutionResult `protobuf:"bytes,4,opt,name=conceptExecutionResult" json:"conceptExecutionResult,omitempty"`
	XXX_unrecognized       []byte                    `json:"-"`
}

func (m *ProtoConcept) Reset()         { *m = ProtoConcept{} }
func (m *ProtoConcept) String() string { return proto.CompactTextString(m) }
func (*ProtoConcept) ProtoMessage()    {}

func (m *ProtoConcept) GetConceptStep() *ProtoStep {
	if m != nil {
		return m.ConceptStep
	}
	return nil
}

func (m *ProtoConcept) GetSteps() []*ProtoStep {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *ProtoConcept) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

func (m *ProtoConcept) GetConceptExecutionResult() *ProtoStepExecutionResult {
	if m != nil {
		return m.ConceptExecutionResult
	}
	return nil
}

type ProtoTags struct {
	Tags             []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtoTags) Reset()         { *m = ProtoTags{} }
func (m *ProtoTags) String() string { return proto.CompactTextString(m) }
func (*ProtoTags) ProtoMessage()    {}

func (m *ProtoTags) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Fragment struct {
	FragmentType     *Fragment_FragmentType `protobuf:"varint,1,req,name=fragmentType,enum=main.Fragment_FragmentType" json:"fragmentType,omitempty"`
	Text             *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Parameter        *Parameter             `protobuf:"bytes,3,opt,name=parameter" json:"parameter,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Fragment) Reset()         { *m = Fragment{} }
func (m *Fragment) String() string { return proto.CompactTextString(m) }
func (*Fragment) ProtoMessage()    {}

func (m *Fragment) GetFragmentType() Fragment_FragmentType {
	if m != nil && m.FragmentType != nil {
		return *m.FragmentType
	}
	return Fragment_Text
}

func (m *Fragment) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *Fragment) GetParameter() *Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

type Parameter struct {
	ParameterType    *Parameter_ParameterType `protobuf:"varint,1,req,name=parameterType,enum=main.Parameter_ParameterType" json:"parameterType,omitempty"`
	Value            *string                  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Table            *ProtoTable              `protobuf:"bytes,3,opt,name=table" json:"table,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}

func (m *Parameter) GetParameterType() Parameter_ParameterType {
	if m != nil && m.ParameterType != nil {
		return *m.ParameterType
	}
	return Parameter_Static
}

func (m *Parameter) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Parameter) GetTable() *ProtoTable {
	if m != nil {
		return m.Table
	}
	return nil
}

type Argument struct {
	Type             *string     `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Value            *string     `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Table            *ProtoTable `protobuf:"bytes,3,opt,name=table" json:"table,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *Argument) Reset()         { *m = Argument{} }
func (m *Argument) String() string { return proto.CompactTextString(m) }
func (*Argument) ProtoMessage()    {}

func (m *Argument) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Argument) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Argument) GetTable() *ProtoTable {
	if m != nil {
		return m.Table
	}
	return nil
}

type ProtoComment struct {
	Text             *string `protobuf:"bytes,1,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoComment) Reset()         { *m = ProtoComment{} }
func (m *ProtoComment) String() string { return proto.CompactTextString(m) }
func (*ProtoComment) ProtoMessage()    {}

func (m *ProtoComment) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type ProtoTable struct {
	Headers          *ProtoTableRow   `protobuf:"bytes,1,req,name=headers" json:"headers,omitempty"`
	Rows             []*ProtoTableRow `protobuf:"bytes,2,rep,name=rows" json:"rows,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ProtoTable) Reset()         { *m = ProtoTable{} }
func (m *ProtoTable) String() string { return proto.CompactTextString(m) }
func (*ProtoTable) ProtoMessage()    {}

func (m *ProtoTable) GetHeaders() *ProtoTableRow {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *ProtoTable) GetRows() []*ProtoTableRow {
	if m != nil {
		return m.Rows
	}
	return nil
}

type ProtoTableRow struct {
	Cells            []string `protobuf:"bytes,1,rep,name=cells" json:"cells,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProtoTableRow) Reset()         { *m = ProtoTableRow{} }
func (m *ProtoTableRow) String() string { return proto.CompactTextString(m) }
func (*ProtoTableRow) ProtoMessage()    {}

func (m *ProtoTableRow) GetCells() []string {
	if m != nil {
		return m.Cells
	}
	return nil
}

type ProtoStepExecutionResult struct {
	ExecutionResult  *ProtoExecutionResult `protobuf:"bytes,1,req,name=executionResult" json:"executionResult,omitempty"`
	PreHookFailure   *ProtoHookFailure     `protobuf:"bytes,2,opt,name=preHookFailure" json:"preHookFailure,omitempty"`
	PostHookFailure  *ProtoHookFailure     `protobuf:"bytes,3,opt,name=postHookFailure" json:"postHookFailure,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ProtoStepExecutionResult) Reset()         { *m = ProtoStepExecutionResult{} }
func (m *ProtoStepExecutionResult) String() string { return proto.CompactTextString(m) }
func (*ProtoStepExecutionResult) ProtoMessage()    {}

func (m *ProtoStepExecutionResult) GetExecutionResult() *ProtoExecutionResult {
	if m != nil {
		return m.ExecutionResult
	}
	return nil
}

func (m *ProtoStepExecutionResult) GetPreHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PreHookFailure
	}
	return nil
}

func (m *ProtoStepExecutionResult) GetPostHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PostHookFailure
	}
	return nil
}

type ProtoExecutionResult struct {
	Failed           *bool   `protobuf:"varint,1,req,name=failed" json:"failed,omitempty"`
	RecoverableError *bool   `protobuf:"varint,2,opt,name=recoverableError" json:"recoverableError,omitempty"`
	ErrorMessage     *string `protobuf:"bytes,3,opt,name=errorMessage" json:"errorMessage,omitempty"`
	StackTrace       *string `protobuf:"bytes,4,opt,name=stackTrace" json:"stackTrace,omitempty"`
	ScreenShot       []byte  `protobuf:"bytes,5,opt,name=screenShot" json:"screenShot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoExecutionResult) Reset()         { *m = ProtoExecutionResult{} }
func (m *ProtoExecutionResult) String() string { return proto.CompactTextString(m) }
func (*ProtoExecutionResult) ProtoMessage()    {}

func (m *ProtoExecutionResult) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

func (m *ProtoExecutionResult) GetRecoverableError() bool {
	if m != nil && m.RecoverableError != nil {
		return *m.RecoverableError
	}
	return false
}

func (m *ProtoExecutionResult) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *ProtoExecutionResult) GetStackTrace() string {
	if m != nil && m.StackTrace != nil {
		return *m.StackTrace
	}
	return ""
}

func (m *ProtoExecutionResult) GetScreenShot() []byte {
	if m != nil {
		return m.ScreenShot
	}
	return nil
}

type ProtoHookFailure struct {
	StackTrace       *string `protobuf:"bytes,1,req,name=stackTrace" json:"stackTrace,omitempty"`
	ErrorMessage     *string `protobuf:"bytes,2,req,name=errorMessage" json:"errorMessage,omitempty"`
	ScreenShot       []byte  `protobuf:"bytes,3,opt,name=screenShot" json:"screenShot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoHookFailure) Reset()         { *m = ProtoHookFailure{} }
func (m *ProtoHookFailure) String() string { return proto.CompactTextString(m) }
func (*ProtoHookFailure) ProtoMessage()    {}

func (m *ProtoHookFailure) GetStackTrace() string {
	if m != nil && m.StackTrace != nil {
		return *m.StackTrace
	}
	return ""
}

func (m *ProtoHookFailure) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *ProtoHookFailure) GetScreenShot() []byte {
	if m != nil {
		return m.ScreenShot
	}
	return nil
}

type ProtoSuiteResult struct {
	SpecResults      []*ProtoSpecResult `protobuf:"bytes,1,rep,name=specResults" json:"specResults,omitempty"`
	PreHookFailure   *ProtoHookFailure  `protobuf:"bytes,2,opt,name=preHookFailure" json:"preHookFailure,omitempty"`
	PostHookFailure  *ProtoHookFailure  `protobuf:"bytes,3,opt,name=postHookFailure" json:"postHookFailure,omitempty"`
	Failed           *bool              `protobuf:"varint,4,req,name=failed" json:"failed,omitempty"`
	SpecsFailedCount *int32             `protobuf:"varint,5,req,name=specsFailedCount" json:"specsFailedCount,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ProtoSuiteResult) Reset()         { *m = ProtoSuiteResult{} }
func (m *ProtoSuiteResult) String() string { return proto.CompactTextString(m) }
func (*ProtoSuiteResult) ProtoMessage()    {}

func (m *ProtoSuiteResult) GetSpecResults() []*ProtoSpecResult {
	if m != nil {
		return m.SpecResults
	}
	return nil
}

func (m *ProtoSuiteResult) GetPreHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PreHookFailure
	}
	return nil
}

func (m *ProtoSuiteResult) GetPostHookFailure() *ProtoHookFailure {
	if m != nil {
		return m.PostHookFailure
	}
	return nil
}

func (m *ProtoSuiteResult) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

func (m *ProtoSuiteResult) GetSpecsFailedCount() int32 {
	if m != nil && m.SpecsFailedCount != nil {
		return *m.SpecsFailedCount
	}
	return 0
}

type ProtoSpecResult struct {
	ProtoSpec           *ProtoSpec `protobuf:"bytes,1,req,name=protoSpec" json:"protoSpec,omitempty"`
	ScenarioCount       *int32     `protobuf:"varint,2,req,name=scenarioCount" json:"scenarioCount,omitempty"`
	ScenarioFailedCount *int32     `protobuf:"varint,3,req,name=scenarioFailedCount" json:"scenarioFailedCount,omitempty"`
	Failed              *bool      `protobuf:"varint,4,req,name=failed" json:"failed,omitempty"`
	FailedDataTableRows []int32    `protobuf:"varint,5,rep,name=failedDataTableRows" json:"failedDataTableRows,omitempty"`
	XXX_unrecognized    []byte     `json:"-"`
}

func (m *ProtoSpecResult) Reset()         { *m = ProtoSpecResult{} }
func (m *ProtoSpecResult) String() string { return proto.CompactTextString(m) }
func (*ProtoSpecResult) ProtoMessage()    {}

func (m *ProtoSpecResult) GetProtoSpec() *ProtoSpec {
	if m != nil {
		return m.ProtoSpec
	}
	return nil
}

func (m *ProtoSpecResult) GetScenarioCount() int32 {
	if m != nil && m.ScenarioCount != nil {
		return *m.ScenarioCount
	}
	return 0
}

func (m *ProtoSpecResult) GetScenarioFailedCount() int32 {
	if m != nil && m.ScenarioFailedCount != nil {
		return *m.ScenarioFailedCount
	}
	return 0
}

func (m *ProtoSpecResult) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

func (m *ProtoSpecResult) GetFailedDataTableRows() []int32 {
	if m != nil {
		return m.FailedDataTableRows
	}
	return nil
}

func init() {
	proto.RegisterEnum("main.ProtoItem_ItemType", ProtoItem_ItemType_name, ProtoItem_ItemType_value)
	proto.RegisterEnum("main.Fragment_FragmentType", Fragment_FragmentType_name, Fragment_FragmentType_value)
	proto.RegisterEnum("main.Parameter_ParameterType", Parameter_ParameterType_name, Parameter_ParameterType_value)
}
