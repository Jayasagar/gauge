// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace main {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Api {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_main_GetProjectRootRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetProjectRootRequest, global::main.GetProjectRootRequest.Builder> internal__static_main_GetProjectRootRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetProjectRootResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetProjectRootResponse, global::main.GetProjectRootResponse.Builder> internal__static_main_GetProjectRootResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetInstallationRootRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetInstallationRootRequest, global::main.GetInstallationRootRequest.Builder> internal__static_main_GetInstallationRootRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetInstallationRootResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetInstallationRootResponse, global::main.GetInstallationRootResponse.Builder> internal__static_main_GetInstallationRootResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetAllStepsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetAllStepsRequest, global::main.GetAllStepsRequest.Builder> internal__static_main_GetAllStepsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetAllStepsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetAllStepsResponse, global::main.GetAllStepsResponse.Builder> internal__static_main_GetAllStepsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetAllSpecsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetAllSpecsRequest, global::main.GetAllSpecsRequest.Builder> internal__static_main_GetAllSpecsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetAllSpecsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetAllSpecsResponse, global::main.GetAllSpecsResponse.Builder> internal__static_main_GetAllSpecsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetStepValueRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetStepValueRequest, global::main.GetStepValueRequest.Builder> internal__static_main_GetStepValueRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetStepValueResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetStepValueResponse, global::main.GetStepValueResponse.Builder> internal__static_main_GetStepValueResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetLanguagePluginLibPathRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetLanguagePluginLibPathRequest, global::main.GetLanguagePluginLibPathRequest.Builder> internal__static_main_GetLanguagePluginLibPathRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_GetLanguagePluginLibPathResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.GetLanguagePluginLibPathResponse, global::main.GetLanguagePluginLibPathResponse.Builder> internal__static_main_GetLanguagePluginLibPathResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ErrorResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ErrorResponse, global::main.ErrorResponse.Builder> internal__static_main_ErrorResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_APIMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.APIMessage, global::main.APIMessage.Builder> internal__static_main_APIMessage__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Api() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CglhcGkucHJvdG8SBG1haW4aCnNwZWMucHJvdG8iFwoVR2V0UHJvamVjdFJv" + 
          "b3RSZXF1ZXN0Ii0KFkdldFByb2plY3RSb290UmVzcG9uc2USEwoLcHJvamVj" + 
          "dFJvb3QYASACKAkiHAoaR2V0SW5zdGFsbGF0aW9uUm9vdFJlcXVlc3QiNwob" + 
          "R2V0SW5zdGFsbGF0aW9uUm9vdFJlc3BvbnNlEhgKEGluc3RhbGxhdGlvblJv" + 
          "b3QYASACKAkiFAoSR2V0QWxsU3RlcHNSZXF1ZXN0Ij0KE0dldEFsbFN0ZXBz" + 
          "UmVzcG9uc2USJgoIYWxsU3RlcHMYASADKAsyFC5tYWluLlByb3RvU3RlcFZh" + 
          "bHVlIhQKEkdldEFsbFNwZWNzUmVxdWVzdCI1ChNHZXRBbGxTcGVjc1Jlc3Bv" + 
          "bnNlEh4KBXNwZWNzGAEgAygLMg8ubWFpbi5Qcm90b1NwZWMiPwoTR2V0U3Rl" + 
          "cFZhbHVlUmVxdWVzdBIQCghzdGVwVGV4dBgBIAIoCRIWCg5oYXNJbmxpbmVU" + 
          "YWJsZRgCIAEoCCI/ChRHZXRTdGVwVmFsdWVSZXNwb25zZRInCglzdGVwVmFs" + 
          "dWUYASACKAsyFC5tYWluLlByb3RvU3RlcFZhbHVlIjMKH0dldExhbmd1YWdl" + 
          "UGx1Z2luTGliUGF0aFJlcXVlc3QSEAoIbGFuZ3VhZ2UYASACKAkiMAogR2V0" + 
          "TGFuZ3VhZ2VQbHVnaW5MaWJQYXRoUmVzcG9uc2USDAoEcGF0aBgBIAIoCSIe" + 
          "Cg1FcnJvclJlc3BvbnNlEg0KBWVycm9yGAEgAigJIq4JCgpBUElNZXNzYWdl" + 
          "EjQKC21lc3NhZ2VUeXBlGAEgAigOMh8ubWFpbi5BUElNZXNzYWdlLkFQSU1l" + 
          "c3NhZ2VUeXBlEhEKCW1lc3NhZ2VJZBgCIAIoAxI3ChJwcm9qZWN0Um9vdFJl" + 
          "cXVlc3QYAyABKAsyGy5tYWluLkdldFByb2plY3RSb290UmVxdWVzdBI5ChNw" + 
          "cm9qZWN0Um9vdFJlc3BvbnNlGAQgASgLMhwubWFpbi5HZXRQcm9qZWN0Um9v" + 
          "dFJlc3BvbnNlEkEKF2luc3RhbGxhdGlvblJvb3RSZXF1ZXN0GAUgASgLMiAu" + 
          "bWFpbi5HZXRJbnN0YWxsYXRpb25Sb290UmVxdWVzdBJDChhpbnN0YWxsYXRp" + 
          "b25Sb290UmVzcG9uc2UYBiABKAsyIS5tYWluLkdldEluc3RhbGxhdGlvblJv" + 
          "b3RSZXNwb25zZRIxCg9hbGxTdGVwc1JlcXVlc3QYByABKAsyGC5tYWluLkdl" + 
          "dEFsbFN0ZXBzUmVxdWVzdBIzChBhbGxTdGVwc1Jlc3BvbnNlGAggASgLMhku" + 
          "bWFpbi5HZXRBbGxTdGVwc1Jlc3BvbnNlEjEKD2FsbFNwZWNzUmVxdWVzdBgJ" + 
          "IAEoCzIYLm1haW4uR2V0QWxsU3BlY3NSZXF1ZXN0EjMKEGFsbFNwZWNzUmVz" + 
          "cG9uc2UYCiABKAsyGS5tYWluLkdldEFsbFNwZWNzUmVzcG9uc2USMwoQc3Rl" + 
          "cFZhbHVlUmVxdWVzdBgLIAEoCzIZLm1haW4uR2V0U3RlcFZhbHVlUmVxdWVz" + 
          "dBI1ChFzdGVwVmFsdWVSZXNwb25zZRgMIAEoCzIaLm1haW4uR2V0U3RlcFZh" + 
          "bHVlUmVzcG9uc2USPQoObGliUGF0aFJlcXVlc3QYDSABKAsyJS5tYWluLkdl" + 
          "dExhbmd1YWdlUGx1Z2luTGliUGF0aFJlcXVlc3QSPwoPbGliUGF0aFJlc3Bv" + 
          "bnNlGA4gASgLMiYubWFpbi5HZXRMYW5ndWFnZVBsdWdpbkxpYlBhdGhSZXNw" + 
          "b25zZRIiCgVlcnJvchgPIAEoCzITLm1haW4uRXJyb3JSZXNwb25zZSL6AgoO" + 
          "QVBJTWVzc2FnZVR5cGUSGQoVR2V0UHJvamVjdFJvb3RSZXF1ZXN0EAESGgoW" + 
          "R2V0UHJvamVjdFJvb3RSZXNwb25zZRACEh4KGkdldEluc3RhbGxhdGlvblJv" + 
          "b3RSZXF1ZXN0EAMSHwobR2V0SW5zdGFsbGF0aW9uUm9vdFJlc3BvbnNlEAQS" + 
          "FgoSR2V0QWxsU3RlcHNSZXF1ZXN0EAUSFgoSR2V0QWxsU3RlcFJlc3BvbnNl" + 
          "EAYSFgoSR2V0QWxsU3BlY3NSZXF1ZXN0EAcSFwoTR2V0QWxsU3BlY3NSZXNw" + 
          "b25zZRAIEhcKE0dldFN0ZXBWYWx1ZVJlcXVlc3QQCRIYChRHZXRTdGVwVmFs" + 
          "dWVSZXNwb25zZRAKEiMKH0dldExhbmd1YWdlUGx1Z2luTGliUGF0aFJlcXVl" + 
          "c3QQCxIkCiBHZXRMYW5ndWFnZVBsdWdpbkxpYlBhdGhSZXNwb25zZRAMEhEK" + 
          "DUVycm9yUmVzcG9uc2UQDQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_main_GetProjectRootRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_main_GetProjectRootRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetProjectRootRequest, global::main.GetProjectRootRequest.Builder>(internal__static_main_GetProjectRootRequest__Descriptor,
                new string[] { });
        internal__static_main_GetProjectRootResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_main_GetProjectRootResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetProjectRootResponse, global::main.GetProjectRootResponse.Builder>(internal__static_main_GetProjectRootResponse__Descriptor,
                new string[] { "ProjectRoot", });
        internal__static_main_GetInstallationRootRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_main_GetInstallationRootRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetInstallationRootRequest, global::main.GetInstallationRootRequest.Builder>(internal__static_main_GetInstallationRootRequest__Descriptor,
                new string[] { });
        internal__static_main_GetInstallationRootResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_main_GetInstallationRootResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetInstallationRootResponse, global::main.GetInstallationRootResponse.Builder>(internal__static_main_GetInstallationRootResponse__Descriptor,
                new string[] { "InstallationRoot", });
        internal__static_main_GetAllStepsRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_main_GetAllStepsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetAllStepsRequest, global::main.GetAllStepsRequest.Builder>(internal__static_main_GetAllStepsRequest__Descriptor,
                new string[] { });
        internal__static_main_GetAllStepsResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_main_GetAllStepsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetAllStepsResponse, global::main.GetAllStepsResponse.Builder>(internal__static_main_GetAllStepsResponse__Descriptor,
                new string[] { "AllSteps", });
        internal__static_main_GetAllSpecsRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_main_GetAllSpecsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetAllSpecsRequest, global::main.GetAllSpecsRequest.Builder>(internal__static_main_GetAllSpecsRequest__Descriptor,
                new string[] { });
        internal__static_main_GetAllSpecsResponse__Descriptor = Descriptor.MessageTypes[7];
        internal__static_main_GetAllSpecsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetAllSpecsResponse, global::main.GetAllSpecsResponse.Builder>(internal__static_main_GetAllSpecsResponse__Descriptor,
                new string[] { "Specs", });
        internal__static_main_GetStepValueRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_main_GetStepValueRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetStepValueRequest, global::main.GetStepValueRequest.Builder>(internal__static_main_GetStepValueRequest__Descriptor,
                new string[] { "StepText", "HasInlineTable", });
        internal__static_main_GetStepValueResponse__Descriptor = Descriptor.MessageTypes[9];
        internal__static_main_GetStepValueResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetStepValueResponse, global::main.GetStepValueResponse.Builder>(internal__static_main_GetStepValueResponse__Descriptor,
                new string[] { "StepValue", });
        internal__static_main_GetLanguagePluginLibPathRequest__Descriptor = Descriptor.MessageTypes[10];
        internal__static_main_GetLanguagePluginLibPathRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetLanguagePluginLibPathRequest, global::main.GetLanguagePluginLibPathRequest.Builder>(internal__static_main_GetLanguagePluginLibPathRequest__Descriptor,
                new string[] { "Language", });
        internal__static_main_GetLanguagePluginLibPathResponse__Descriptor = Descriptor.MessageTypes[11];
        internal__static_main_GetLanguagePluginLibPathResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.GetLanguagePluginLibPathResponse, global::main.GetLanguagePluginLibPathResponse.Builder>(internal__static_main_GetLanguagePluginLibPathResponse__Descriptor,
                new string[] { "Path", });
        internal__static_main_ErrorResponse__Descriptor = Descriptor.MessageTypes[12];
        internal__static_main_ErrorResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ErrorResponse, global::main.ErrorResponse.Builder>(internal__static_main_ErrorResponse__Descriptor,
                new string[] { "Error", });
        internal__static_main_APIMessage__Descriptor = Descriptor.MessageTypes[13];
        internal__static_main_APIMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.APIMessage, global::main.APIMessage.Builder>(internal__static_main_APIMessage__Descriptor,
                new string[] { "MessageType", "MessageId", "ProjectRootRequest", "ProjectRootResponse", "InstallationRootRequest", "InstallationRootResponse", "AllStepsRequest", "AllStepsResponse", "AllSpecsRequest", "AllSpecsResponse", "StepValueRequest", "StepValueResponse", "LibPathRequest", "LibPathResponse", "Error", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::main.Spec.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetProjectRootRequest : pb::GeneratedMessage<GetProjectRootRequest, GetProjectRootRequest.Builder> {
    private GetProjectRootRequest() { }
    private static readonly GetProjectRootRequest defaultInstance = new GetProjectRootRequest().MakeReadOnly();
    private static readonly string[] _getProjectRootRequestFieldNames = new string[] {  };
    private static readonly uint[] _getProjectRootRequestFieldTags = new uint[] {  };
    public static GetProjectRootRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetProjectRootRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetProjectRootRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetProjectRootRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetProjectRootRequest, GetProjectRootRequest.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetProjectRootRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getProjectRootRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetProjectRootRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetProjectRootRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetProjectRootRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetProjectRootRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetProjectRootRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetProjectRootRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetProjectRootRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetProjectRootRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetProjectRootRequest result;
      
      private GetProjectRootRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetProjectRootRequest original = result;
          result = new GetProjectRootRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetProjectRootRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetProjectRootRequest.Descriptor; }
      }
      
      public override GetProjectRootRequest DefaultInstanceForType {
        get { return global::main.GetProjectRootRequest.DefaultInstance; }
      }
      
      public override GetProjectRootRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetProjectRootRequest) {
          return MergeFrom((GetProjectRootRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetProjectRootRequest other) {
        if (other == global::main.GetProjectRootRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getProjectRootRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getProjectRootRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GetProjectRootRequest() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetProjectRootResponse : pb::GeneratedMessage<GetProjectRootResponse, GetProjectRootResponse.Builder> {
    private GetProjectRootResponse() { }
    private static readonly GetProjectRootResponse defaultInstance = new GetProjectRootResponse().MakeReadOnly();
    private static readonly string[] _getProjectRootResponseFieldNames = new string[] { "projectRoot" };
    private static readonly uint[] _getProjectRootResponseFieldTags = new uint[] { 10 };
    public static GetProjectRootResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetProjectRootResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetProjectRootResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetProjectRootResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetProjectRootResponse, GetProjectRootResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetProjectRootResponse__FieldAccessorTable; }
    }
    
    public const int ProjectRootFieldNumber = 1;
    private bool hasProjectRoot;
    private string projectRoot_ = "";
    public bool HasProjectRoot {
      get { return hasProjectRoot; }
    }
    public string ProjectRoot {
      get { return projectRoot_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProjectRoot) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getProjectRootResponseFieldNames;
      if (hasProjectRoot) {
        output.WriteString(1, field_names[0], ProjectRoot);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProjectRoot) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ProjectRoot);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetProjectRootResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetProjectRootResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetProjectRootResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetProjectRootResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetProjectRootResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetProjectRootResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetProjectRootResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetProjectRootResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetProjectRootResponse result;
      
      private GetProjectRootResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetProjectRootResponse original = result;
          result = new GetProjectRootResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetProjectRootResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetProjectRootResponse.Descriptor; }
      }
      
      public override GetProjectRootResponse DefaultInstanceForType {
        get { return global::main.GetProjectRootResponse.DefaultInstance; }
      }
      
      public override GetProjectRootResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetProjectRootResponse) {
          return MergeFrom((GetProjectRootResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetProjectRootResponse other) {
        if (other == global::main.GetProjectRootResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProjectRoot) {
          ProjectRoot = other.ProjectRoot;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getProjectRootResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getProjectRootResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasProjectRoot = input.ReadString(ref result.projectRoot_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProjectRoot {
        get { return result.hasProjectRoot; }
      }
      public string ProjectRoot {
        get { return result.ProjectRoot; }
        set { SetProjectRoot(value); }
      }
      public Builder SetProjectRoot(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProjectRoot = true;
        result.projectRoot_ = value;
        return this;
      }
      public Builder ClearProjectRoot() {
        PrepareBuilder();
        result.hasProjectRoot = false;
        result.projectRoot_ = "";
        return this;
      }
    }
    static GetProjectRootResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetInstallationRootRequest : pb::GeneratedMessage<GetInstallationRootRequest, GetInstallationRootRequest.Builder> {
    private GetInstallationRootRequest() { }
    private static readonly GetInstallationRootRequest defaultInstance = new GetInstallationRootRequest().MakeReadOnly();
    private static readonly string[] _getInstallationRootRequestFieldNames = new string[] {  };
    private static readonly uint[] _getInstallationRootRequestFieldTags = new uint[] {  };
    public static GetInstallationRootRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetInstallationRootRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetInstallationRootRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetInstallationRootRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetInstallationRootRequest, GetInstallationRootRequest.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetInstallationRootRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getInstallationRootRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetInstallationRootRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetInstallationRootRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInstallationRootRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetInstallationRootRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetInstallationRootRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetInstallationRootRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetInstallationRootRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetInstallationRootRequest result;
      
      private GetInstallationRootRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetInstallationRootRequest original = result;
          result = new GetInstallationRootRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetInstallationRootRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetInstallationRootRequest.Descriptor; }
      }
      
      public override GetInstallationRootRequest DefaultInstanceForType {
        get { return global::main.GetInstallationRootRequest.DefaultInstance; }
      }
      
      public override GetInstallationRootRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetInstallationRootRequest) {
          return MergeFrom((GetInstallationRootRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetInstallationRootRequest other) {
        if (other == global::main.GetInstallationRootRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getInstallationRootRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getInstallationRootRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GetInstallationRootRequest() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetInstallationRootResponse : pb::GeneratedMessage<GetInstallationRootResponse, GetInstallationRootResponse.Builder> {
    private GetInstallationRootResponse() { }
    private static readonly GetInstallationRootResponse defaultInstance = new GetInstallationRootResponse().MakeReadOnly();
    private static readonly string[] _getInstallationRootResponseFieldNames = new string[] { "installationRoot" };
    private static readonly uint[] _getInstallationRootResponseFieldTags = new uint[] { 10 };
    public static GetInstallationRootResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetInstallationRootResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetInstallationRootResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetInstallationRootResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetInstallationRootResponse, GetInstallationRootResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetInstallationRootResponse__FieldAccessorTable; }
    }
    
    public const int InstallationRootFieldNumber = 1;
    private bool hasInstallationRoot;
    private string installationRoot_ = "";
    public bool HasInstallationRoot {
      get { return hasInstallationRoot; }
    }
    public string InstallationRoot {
      get { return installationRoot_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInstallationRoot) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getInstallationRootResponseFieldNames;
      if (hasInstallationRoot) {
        output.WriteString(1, field_names[0], InstallationRoot);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInstallationRoot) {
          size += pb::CodedOutputStream.ComputeStringSize(1, InstallationRoot);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetInstallationRootResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetInstallationRootResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetInstallationRootResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetInstallationRootResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetInstallationRootResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetInstallationRootResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetInstallationRootResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetInstallationRootResponse result;
      
      private GetInstallationRootResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetInstallationRootResponse original = result;
          result = new GetInstallationRootResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetInstallationRootResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetInstallationRootResponse.Descriptor; }
      }
      
      public override GetInstallationRootResponse DefaultInstanceForType {
        get { return global::main.GetInstallationRootResponse.DefaultInstance; }
      }
      
      public override GetInstallationRootResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetInstallationRootResponse) {
          return MergeFrom((GetInstallationRootResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetInstallationRootResponse other) {
        if (other == global::main.GetInstallationRootResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInstallationRoot) {
          InstallationRoot = other.InstallationRoot;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getInstallationRootResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getInstallationRootResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasInstallationRoot = input.ReadString(ref result.installationRoot_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInstallationRoot {
        get { return result.hasInstallationRoot; }
      }
      public string InstallationRoot {
        get { return result.InstallationRoot; }
        set { SetInstallationRoot(value); }
      }
      public Builder SetInstallationRoot(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInstallationRoot = true;
        result.installationRoot_ = value;
        return this;
      }
      public Builder ClearInstallationRoot() {
        PrepareBuilder();
        result.hasInstallationRoot = false;
        result.installationRoot_ = "";
        return this;
      }
    }
    static GetInstallationRootResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllStepsRequest : pb::GeneratedMessage<GetAllStepsRequest, GetAllStepsRequest.Builder> {
    private GetAllStepsRequest() { }
    private static readonly GetAllStepsRequest defaultInstance = new GetAllStepsRequest().MakeReadOnly();
    private static readonly string[] _getAllStepsRequestFieldNames = new string[] {  };
    private static readonly uint[] _getAllStepsRequestFieldTags = new uint[] {  };
    public static GetAllStepsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAllStepsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAllStepsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetAllStepsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAllStepsRequest, GetAllStepsRequest.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetAllStepsRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAllStepsRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAllStepsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAllStepsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAllStepsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllStepsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAllStepsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAllStepsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAllStepsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAllStepsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAllStepsRequest result;
      
      private GetAllStepsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAllStepsRequest original = result;
          result = new GetAllStepsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAllStepsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetAllStepsRequest.Descriptor; }
      }
      
      public override GetAllStepsRequest DefaultInstanceForType {
        get { return global::main.GetAllStepsRequest.DefaultInstance; }
      }
      
      public override GetAllStepsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAllStepsRequest) {
          return MergeFrom((GetAllStepsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAllStepsRequest other) {
        if (other == global::main.GetAllStepsRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAllStepsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAllStepsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GetAllStepsRequest() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllStepsResponse : pb::GeneratedMessage<GetAllStepsResponse, GetAllStepsResponse.Builder> {
    private GetAllStepsResponse() { }
    private static readonly GetAllStepsResponse defaultInstance = new GetAllStepsResponse().MakeReadOnly();
    private static readonly string[] _getAllStepsResponseFieldNames = new string[] { "allSteps" };
    private static readonly uint[] _getAllStepsResponseFieldTags = new uint[] { 10 };
    public static GetAllStepsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAllStepsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAllStepsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetAllStepsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAllStepsResponse, GetAllStepsResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetAllStepsResponse__FieldAccessorTable; }
    }
    
    public const int AllStepsFieldNumber = 1;
    private pbc::PopsicleList<global::main.ProtoStepValue> allSteps_ = new pbc::PopsicleList<global::main.ProtoStepValue>();
    public scg::IList<global::main.ProtoStepValue> AllStepsList {
      get { return allSteps_; }
    }
    public int AllStepsCount {
      get { return allSteps_.Count; }
    }
    public global::main.ProtoStepValue GetAllSteps(int index) {
      return allSteps_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::main.ProtoStepValue element in AllStepsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAllStepsResponseFieldNames;
      if (allSteps_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], allSteps_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::main.ProtoStepValue element in AllStepsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAllStepsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAllStepsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAllStepsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllStepsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAllStepsResponse MakeReadOnly() {
      allSteps_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAllStepsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAllStepsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAllStepsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAllStepsResponse result;
      
      private GetAllStepsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAllStepsResponse original = result;
          result = new GetAllStepsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAllStepsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetAllStepsResponse.Descriptor; }
      }
      
      public override GetAllStepsResponse DefaultInstanceForType {
        get { return global::main.GetAllStepsResponse.DefaultInstance; }
      }
      
      public override GetAllStepsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAllStepsResponse) {
          return MergeFrom((GetAllStepsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAllStepsResponse other) {
        if (other == global::main.GetAllStepsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.allSteps_.Count != 0) {
          result.allSteps_.Add(other.allSteps_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAllStepsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAllStepsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.allSteps_, global::main.ProtoStepValue.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::main.ProtoStepValue> AllStepsList {
        get { return PrepareBuilder().allSteps_; }
      }
      public int AllStepsCount {
        get { return result.AllStepsCount; }
      }
      public global::main.ProtoStepValue GetAllSteps(int index) {
        return result.GetAllSteps(index);
      }
      public Builder SetAllSteps(int index, global::main.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allSteps_[index] = value;
        return this;
      }
      public Builder SetAllSteps(int index, global::main.ProtoStepValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.allSteps_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAllSteps(global::main.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.allSteps_.Add(value);
        return this;
      }
      public Builder AddAllSteps(global::main.ProtoStepValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.allSteps_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAllSteps(scg::IEnumerable<global::main.ProtoStepValue> values) {
        PrepareBuilder();
        result.allSteps_.Add(values);
        return this;
      }
      public Builder ClearAllSteps() {
        PrepareBuilder();
        result.allSteps_.Clear();
        return this;
      }
    }
    static GetAllStepsResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllSpecsRequest : pb::GeneratedMessage<GetAllSpecsRequest, GetAllSpecsRequest.Builder> {
    private GetAllSpecsRequest() { }
    private static readonly GetAllSpecsRequest defaultInstance = new GetAllSpecsRequest().MakeReadOnly();
    private static readonly string[] _getAllSpecsRequestFieldNames = new string[] {  };
    private static readonly uint[] _getAllSpecsRequestFieldTags = new uint[] {  };
    public static GetAllSpecsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAllSpecsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAllSpecsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetAllSpecsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAllSpecsRequest, GetAllSpecsRequest.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetAllSpecsRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAllSpecsRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAllSpecsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAllSpecsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllSpecsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAllSpecsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAllSpecsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAllSpecsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAllSpecsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAllSpecsRequest result;
      
      private GetAllSpecsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAllSpecsRequest original = result;
          result = new GetAllSpecsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAllSpecsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetAllSpecsRequest.Descriptor; }
      }
      
      public override GetAllSpecsRequest DefaultInstanceForType {
        get { return global::main.GetAllSpecsRequest.DefaultInstance; }
      }
      
      public override GetAllSpecsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAllSpecsRequest) {
          return MergeFrom((GetAllSpecsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAllSpecsRequest other) {
        if (other == global::main.GetAllSpecsRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAllSpecsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAllSpecsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static GetAllSpecsRequest() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetAllSpecsResponse : pb::GeneratedMessage<GetAllSpecsResponse, GetAllSpecsResponse.Builder> {
    private GetAllSpecsResponse() { }
    private static readonly GetAllSpecsResponse defaultInstance = new GetAllSpecsResponse().MakeReadOnly();
    private static readonly string[] _getAllSpecsResponseFieldNames = new string[] { "specs" };
    private static readonly uint[] _getAllSpecsResponseFieldTags = new uint[] { 10 };
    public static GetAllSpecsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetAllSpecsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetAllSpecsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetAllSpecsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetAllSpecsResponse, GetAllSpecsResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetAllSpecsResponse__FieldAccessorTable; }
    }
    
    public const int SpecsFieldNumber = 1;
    private pbc::PopsicleList<global::main.ProtoSpec> specs_ = new pbc::PopsicleList<global::main.ProtoSpec>();
    public scg::IList<global::main.ProtoSpec> SpecsList {
      get { return specs_; }
    }
    public int SpecsCount {
      get { return specs_.Count; }
    }
    public global::main.ProtoSpec GetSpecs(int index) {
      return specs_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::main.ProtoSpec element in SpecsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getAllSpecsResponseFieldNames;
      if (specs_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], specs_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::main.ProtoSpec element in SpecsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetAllSpecsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetAllSpecsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetAllSpecsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetAllSpecsResponse MakeReadOnly() {
      specs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetAllSpecsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetAllSpecsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetAllSpecsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetAllSpecsResponse result;
      
      private GetAllSpecsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetAllSpecsResponse original = result;
          result = new GetAllSpecsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetAllSpecsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetAllSpecsResponse.Descriptor; }
      }
      
      public override GetAllSpecsResponse DefaultInstanceForType {
        get { return global::main.GetAllSpecsResponse.DefaultInstance; }
      }
      
      public override GetAllSpecsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetAllSpecsResponse) {
          return MergeFrom((GetAllSpecsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetAllSpecsResponse other) {
        if (other == global::main.GetAllSpecsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.specs_.Count != 0) {
          result.specs_.Add(other.specs_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getAllSpecsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getAllSpecsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.specs_, global::main.ProtoSpec.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::main.ProtoSpec> SpecsList {
        get { return PrepareBuilder().specs_; }
      }
      public int SpecsCount {
        get { return result.SpecsCount; }
      }
      public global::main.ProtoSpec GetSpecs(int index) {
        return result.GetSpecs(index);
      }
      public Builder SetSpecs(int index, global::main.ProtoSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.specs_[index] = value;
        return this;
      }
      public Builder SetSpecs(int index, global::main.ProtoSpec.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.specs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSpecs(global::main.ProtoSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.specs_.Add(value);
        return this;
      }
      public Builder AddSpecs(global::main.ProtoSpec.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.specs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSpecs(scg::IEnumerable<global::main.ProtoSpec> values) {
        PrepareBuilder();
        result.specs_.Add(values);
        return this;
      }
      public Builder ClearSpecs() {
        PrepareBuilder();
        result.specs_.Clear();
        return this;
      }
    }
    static GetAllSpecsResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetStepValueRequest : pb::GeneratedMessage<GetStepValueRequest, GetStepValueRequest.Builder> {
    private GetStepValueRequest() { }
    private static readonly GetStepValueRequest defaultInstance = new GetStepValueRequest().MakeReadOnly();
    private static readonly string[] _getStepValueRequestFieldNames = new string[] { "hasInlineTable", "stepText" };
    private static readonly uint[] _getStepValueRequestFieldTags = new uint[] { 16, 10 };
    public static GetStepValueRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStepValueRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStepValueRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetStepValueRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStepValueRequest, GetStepValueRequest.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetStepValueRequest__FieldAccessorTable; }
    }
    
    public const int StepTextFieldNumber = 1;
    private bool hasStepText;
    private string stepText_ = "";
    public bool HasStepText {
      get { return hasStepText; }
    }
    public string StepText {
      get { return stepText_; }
    }
    
    public const int HasInlineTableFieldNumber = 2;
    private bool hasHasInlineTable;
    private bool hasInlineTable_;
    public bool HasHasInlineTable {
      get { return hasHasInlineTable; }
    }
    public bool HasInlineTable {
      get { return hasInlineTable_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStepText) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStepValueRequestFieldNames;
      if (hasStepText) {
        output.WriteString(1, field_names[1], StepText);
      }
      if (hasHasInlineTable) {
        output.WriteBool(2, field_names[0], HasInlineTable);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStepText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StepText);
        }
        if (hasHasInlineTable) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, HasInlineTable);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStepValueRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStepValueRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStepValueRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStepValueRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStepValueRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStepValueRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStepValueRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStepValueRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStepValueRequest result;
      
      private GetStepValueRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStepValueRequest original = result;
          result = new GetStepValueRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStepValueRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetStepValueRequest.Descriptor; }
      }
      
      public override GetStepValueRequest DefaultInstanceForType {
        get { return global::main.GetStepValueRequest.DefaultInstance; }
      }
      
      public override GetStepValueRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStepValueRequest) {
          return MergeFrom((GetStepValueRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStepValueRequest other) {
        if (other == global::main.GetStepValueRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStepText) {
          StepText = other.StepText;
        }
        if (other.HasHasInlineTable) {
          HasInlineTable = other.HasInlineTable;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStepValueRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStepValueRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStepText = input.ReadString(ref result.stepText_);
              break;
            }
            case 16: {
              result.hasHasInlineTable = input.ReadBool(ref result.hasInlineTable_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStepText {
        get { return result.hasStepText; }
      }
      public string StepText {
        get { return result.StepText; }
        set { SetStepText(value); }
      }
      public Builder SetStepText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepText = true;
        result.stepText_ = value;
        return this;
      }
      public Builder ClearStepText() {
        PrepareBuilder();
        result.hasStepText = false;
        result.stepText_ = "";
        return this;
      }
      
      public bool HasHasInlineTable {
        get { return result.hasHasInlineTable; }
      }
      public bool HasInlineTable {
        get { return result.HasInlineTable; }
        set { SetHasInlineTable(value); }
      }
      public Builder SetHasInlineTable(bool value) {
        PrepareBuilder();
        result.hasHasInlineTable = true;
        result.hasInlineTable_ = value;
        return this;
      }
      public Builder ClearHasInlineTable() {
        PrepareBuilder();
        result.hasHasInlineTable = false;
        result.hasInlineTable_ = false;
        return this;
      }
    }
    static GetStepValueRequest() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetStepValueResponse : pb::GeneratedMessage<GetStepValueResponse, GetStepValueResponse.Builder> {
    private GetStepValueResponse() { }
    private static readonly GetStepValueResponse defaultInstance = new GetStepValueResponse().MakeReadOnly();
    private static readonly string[] _getStepValueResponseFieldNames = new string[] { "stepValue" };
    private static readonly uint[] _getStepValueResponseFieldTags = new uint[] { 10 };
    public static GetStepValueResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetStepValueResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetStepValueResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetStepValueResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetStepValueResponse, GetStepValueResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetStepValueResponse__FieldAccessorTable; }
    }
    
    public const int StepValueFieldNumber = 1;
    private bool hasStepValue;
    private global::main.ProtoStepValue stepValue_;
    public bool HasStepValue {
      get { return hasStepValue; }
    }
    public global::main.ProtoStepValue StepValue {
      get { return stepValue_ ?? global::main.ProtoStepValue.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStepValue) return false;
        if (!StepValue.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getStepValueResponseFieldNames;
      if (hasStepValue) {
        output.WriteMessage(1, field_names[0], StepValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStepValue) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, StepValue);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetStepValueResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetStepValueResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetStepValueResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetStepValueResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetStepValueResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetStepValueResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetStepValueResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetStepValueResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetStepValueResponse result;
      
      private GetStepValueResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetStepValueResponse original = result;
          result = new GetStepValueResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetStepValueResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetStepValueResponse.Descriptor; }
      }
      
      public override GetStepValueResponse DefaultInstanceForType {
        get { return global::main.GetStepValueResponse.DefaultInstance; }
      }
      
      public override GetStepValueResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetStepValueResponse) {
          return MergeFrom((GetStepValueResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetStepValueResponse other) {
        if (other == global::main.GetStepValueResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStepValue) {
          MergeStepValue(other.StepValue);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getStepValueResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getStepValueResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::main.ProtoStepValue.Builder subBuilder = global::main.ProtoStepValue.CreateBuilder();
              if (result.hasStepValue) {
                subBuilder.MergeFrom(StepValue);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepValue = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStepValue {
       get { return result.hasStepValue; }
      }
      public global::main.ProtoStepValue StepValue {
        get { return result.StepValue; }
        set { SetStepValue(value); }
      }
      public Builder SetStepValue(global::main.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValue = true;
        result.stepValue_ = value;
        return this;
      }
      public Builder SetStepValue(global::main.ProtoStepValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepValue = true;
        result.stepValue_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepValue(global::main.ProtoStepValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepValue &&
            result.stepValue_ != global::main.ProtoStepValue.DefaultInstance) {
            result.stepValue_ = global::main.ProtoStepValue.CreateBuilder(result.stepValue_).MergeFrom(value).BuildPartial();
        } else {
          result.stepValue_ = value;
        }
        result.hasStepValue = true;
        return this;
      }
      public Builder ClearStepValue() {
        PrepareBuilder();
        result.hasStepValue = false;
        result.stepValue_ = null;
        return this;
      }
    }
    static GetStepValueResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetLanguagePluginLibPathRequest : pb::GeneratedMessage<GetLanguagePluginLibPathRequest, GetLanguagePluginLibPathRequest.Builder> {
    private GetLanguagePluginLibPathRequest() { }
    private static readonly GetLanguagePluginLibPathRequest defaultInstance = new GetLanguagePluginLibPathRequest().MakeReadOnly();
    private static readonly string[] _getLanguagePluginLibPathRequestFieldNames = new string[] { "language" };
    private static readonly uint[] _getLanguagePluginLibPathRequestFieldTags = new uint[] { 10 };
    public static GetLanguagePluginLibPathRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetLanguagePluginLibPathRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetLanguagePluginLibPathRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetLanguagePluginLibPathRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetLanguagePluginLibPathRequest, GetLanguagePluginLibPathRequest.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetLanguagePluginLibPathRequest__FieldAccessorTable; }
    }
    
    public const int LanguageFieldNumber = 1;
    private bool hasLanguage;
    private string language_ = "";
    public bool HasLanguage {
      get { return hasLanguage; }
    }
    public string Language {
      get { return language_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLanguage) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getLanguagePluginLibPathRequestFieldNames;
      if (hasLanguage) {
        output.WriteString(1, field_names[0], Language);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasLanguage) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Language);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetLanguagePluginLibPathRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLanguagePluginLibPathRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetLanguagePluginLibPathRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetLanguagePluginLibPathRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetLanguagePluginLibPathRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetLanguagePluginLibPathRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetLanguagePluginLibPathRequest result;
      
      private GetLanguagePluginLibPathRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetLanguagePluginLibPathRequest original = result;
          result = new GetLanguagePluginLibPathRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetLanguagePluginLibPathRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetLanguagePluginLibPathRequest.Descriptor; }
      }
      
      public override GetLanguagePluginLibPathRequest DefaultInstanceForType {
        get { return global::main.GetLanguagePluginLibPathRequest.DefaultInstance; }
      }
      
      public override GetLanguagePluginLibPathRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetLanguagePluginLibPathRequest) {
          return MergeFrom((GetLanguagePluginLibPathRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetLanguagePluginLibPathRequest other) {
        if (other == global::main.GetLanguagePluginLibPathRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLanguage) {
          Language = other.Language;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getLanguagePluginLibPathRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getLanguagePluginLibPathRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLanguage = input.ReadString(ref result.language_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLanguage {
        get { return result.hasLanguage; }
      }
      public string Language {
        get { return result.Language; }
        set { SetLanguage(value); }
      }
      public Builder SetLanguage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLanguage = true;
        result.language_ = value;
        return this;
      }
      public Builder ClearLanguage() {
        PrepareBuilder();
        result.hasLanguage = false;
        result.language_ = "";
        return this;
      }
    }
    static GetLanguagePluginLibPathRequest() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetLanguagePluginLibPathResponse : pb::GeneratedMessage<GetLanguagePluginLibPathResponse, GetLanguagePluginLibPathResponse.Builder> {
    private GetLanguagePluginLibPathResponse() { }
    private static readonly GetLanguagePluginLibPathResponse defaultInstance = new GetLanguagePluginLibPathResponse().MakeReadOnly();
    private static readonly string[] _getLanguagePluginLibPathResponseFieldNames = new string[] { "path" };
    private static readonly uint[] _getLanguagePluginLibPathResponseFieldTags = new uint[] { 10 };
    public static GetLanguagePluginLibPathResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetLanguagePluginLibPathResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetLanguagePluginLibPathResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_GetLanguagePluginLibPathResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetLanguagePluginLibPathResponse, GetLanguagePluginLibPathResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_GetLanguagePluginLibPathResponse__FieldAccessorTable; }
    }
    
    public const int PathFieldNumber = 1;
    private bool hasPath;
    private string path_ = "";
    public bool HasPath {
      get { return hasPath; }
    }
    public string Path {
      get { return path_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPath) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getLanguagePluginLibPathResponseFieldNames;
      if (hasPath) {
        output.WriteString(1, field_names[0], Path);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPath) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Path);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetLanguagePluginLibPathResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLanguagePluginLibPathResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetLanguagePluginLibPathResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetLanguagePluginLibPathResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetLanguagePluginLibPathResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetLanguagePluginLibPathResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetLanguagePluginLibPathResponse result;
      
      private GetLanguagePluginLibPathResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetLanguagePluginLibPathResponse original = result;
          result = new GetLanguagePluginLibPathResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetLanguagePluginLibPathResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.GetLanguagePluginLibPathResponse.Descriptor; }
      }
      
      public override GetLanguagePluginLibPathResponse DefaultInstanceForType {
        get { return global::main.GetLanguagePluginLibPathResponse.DefaultInstance; }
      }
      
      public override GetLanguagePluginLibPathResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetLanguagePluginLibPathResponse) {
          return MergeFrom((GetLanguagePluginLibPathResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetLanguagePluginLibPathResponse other) {
        if (other == global::main.GetLanguagePluginLibPathResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPath) {
          Path = other.Path;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getLanguagePluginLibPathResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getLanguagePluginLibPathResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasPath = input.ReadString(ref result.path_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPath {
        get { return result.hasPath; }
      }
      public string Path {
        get { return result.Path; }
        set { SetPath(value); }
      }
      public Builder SetPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPath = true;
        result.path_ = value;
        return this;
      }
      public Builder ClearPath() {
        PrepareBuilder();
        result.hasPath = false;
        result.path_ = "";
        return this;
      }
    }
    static GetLanguagePluginLibPathResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ErrorResponse : pb::GeneratedMessage<ErrorResponse, ErrorResponse.Builder> {
    private ErrorResponse() { }
    private static readonly ErrorResponse defaultInstance = new ErrorResponse().MakeReadOnly();
    private static readonly string[] _errorResponseFieldNames = new string[] { "error" };
    private static readonly uint[] _errorResponseFieldTags = new uint[] { 10 };
    public static ErrorResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ErrorResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ErrorResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_ErrorResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ErrorResponse, ErrorResponse.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_ErrorResponse__FieldAccessorTable; }
    }
    
    public const int ErrorFieldNumber = 1;
    private bool hasError;
    private string error_ = "";
    public bool HasError {
      get { return hasError; }
    }
    public string Error {
      get { return error_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasError) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _errorResponseFieldNames;
      if (hasError) {
        output.WriteString(1, field_names[0], Error);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasError) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Error);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ErrorResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ErrorResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ErrorResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ErrorResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ErrorResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ErrorResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ErrorResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ErrorResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ErrorResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ErrorResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ErrorResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ErrorResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ErrorResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ErrorResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ErrorResponse result;
      
      private ErrorResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ErrorResponse original = result;
          result = new ErrorResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ErrorResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ErrorResponse.Descriptor; }
      }
      
      public override ErrorResponse DefaultInstanceForType {
        get { return global::main.ErrorResponse.DefaultInstance; }
      }
      
      public override ErrorResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ErrorResponse) {
          return MergeFrom((ErrorResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ErrorResponse other) {
        if (other == global::main.ErrorResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasError) {
          Error = other.Error;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_errorResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _errorResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasError = input.ReadString(ref result.error_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasError {
        get { return result.hasError; }
      }
      public string Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = "";
        return this;
      }
    }
    static ErrorResponse() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class APIMessage : pb::GeneratedMessage<APIMessage, APIMessage.Builder> {
    private APIMessage() { }
    private static readonly APIMessage defaultInstance = new APIMessage().MakeReadOnly();
    private static readonly string[] _aPIMessageFieldNames = new string[] { "allSpecsRequest", "allSpecsResponse", "allStepsRequest", "allStepsResponse", "error", "installationRootRequest", "installationRootResponse", "libPathRequest", "libPathResponse", "messageId", "messageType", "projectRootRequest", "projectRootResponse", "stepValueRequest", "stepValueResponse" };
    private static readonly uint[] _aPIMessageFieldTags = new uint[] { 74, 82, 58, 66, 122, 42, 50, 106, 114, 16, 8, 26, 34, 90, 98 };
    public static APIMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override APIMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override APIMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Api.internal__static_main_APIMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<APIMessage, APIMessage.Builder> InternalFieldAccessors {
      get { return global::main.Api.internal__static_main_APIMessage__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum APIMessageType {
        GetProjectRootRequest = 1,
        GetProjectRootResponse = 2,
        GetInstallationRootRequest = 3,
        GetInstallationRootResponse = 4,
        GetAllStepsRequest = 5,
        GetAllStepResponse = 6,
        GetAllSpecsRequest = 7,
        GetAllSpecsResponse = 8,
        GetStepValueRequest = 9,
        GetStepValueResponse = 10,
        GetLanguagePluginLibPathRequest = 11,
        GetLanguagePluginLibPathResponse = 12,
        ErrorResponse = 13,
      }
      
    }
    #endregion
    
    public const int MessageTypeFieldNumber = 1;
    private bool hasMessageType;
    private global::main.APIMessage.Types.APIMessageType messageType_ = global::main.APIMessage.Types.APIMessageType.GetProjectRootRequest;
    public bool HasMessageType {
      get { return hasMessageType; }
    }
    public global::main.APIMessage.Types.APIMessageType MessageType {
      get { return messageType_; }
    }
    
    public const int MessageIdFieldNumber = 2;
    private bool hasMessageId;
    private long messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public long MessageId {
      get { return messageId_; }
    }
    
    public const int ProjectRootRequestFieldNumber = 3;
    private bool hasProjectRootRequest;
    private global::main.GetProjectRootRequest projectRootRequest_;
    public bool HasProjectRootRequest {
      get { return hasProjectRootRequest; }
    }
    public global::main.GetProjectRootRequest ProjectRootRequest {
      get { return projectRootRequest_ ?? global::main.GetProjectRootRequest.DefaultInstance; }
    }
    
    public const int ProjectRootResponseFieldNumber = 4;
    private bool hasProjectRootResponse;
    private global::main.GetProjectRootResponse projectRootResponse_;
    public bool HasProjectRootResponse {
      get { return hasProjectRootResponse; }
    }
    public global::main.GetProjectRootResponse ProjectRootResponse {
      get { return projectRootResponse_ ?? global::main.GetProjectRootResponse.DefaultInstance; }
    }
    
    public const int InstallationRootRequestFieldNumber = 5;
    private bool hasInstallationRootRequest;
    private global::main.GetInstallationRootRequest installationRootRequest_;
    public bool HasInstallationRootRequest {
      get { return hasInstallationRootRequest; }
    }
    public global::main.GetInstallationRootRequest InstallationRootRequest {
      get { return installationRootRequest_ ?? global::main.GetInstallationRootRequest.DefaultInstance; }
    }
    
    public const int InstallationRootResponseFieldNumber = 6;
    private bool hasInstallationRootResponse;
    private global::main.GetInstallationRootResponse installationRootResponse_;
    public bool HasInstallationRootResponse {
      get { return hasInstallationRootResponse; }
    }
    public global::main.GetInstallationRootResponse InstallationRootResponse {
      get { return installationRootResponse_ ?? global::main.GetInstallationRootResponse.DefaultInstance; }
    }
    
    public const int AllStepsRequestFieldNumber = 7;
    private bool hasAllStepsRequest;
    private global::main.GetAllStepsRequest allStepsRequest_;
    public bool HasAllStepsRequest {
      get { return hasAllStepsRequest; }
    }
    public global::main.GetAllStepsRequest AllStepsRequest {
      get { return allStepsRequest_ ?? global::main.GetAllStepsRequest.DefaultInstance; }
    }
    
    public const int AllStepsResponseFieldNumber = 8;
    private bool hasAllStepsResponse;
    private global::main.GetAllStepsResponse allStepsResponse_;
    public bool HasAllStepsResponse {
      get { return hasAllStepsResponse; }
    }
    public global::main.GetAllStepsResponse AllStepsResponse {
      get { return allStepsResponse_ ?? global::main.GetAllStepsResponse.DefaultInstance; }
    }
    
    public const int AllSpecsRequestFieldNumber = 9;
    private bool hasAllSpecsRequest;
    private global::main.GetAllSpecsRequest allSpecsRequest_;
    public bool HasAllSpecsRequest {
      get { return hasAllSpecsRequest; }
    }
    public global::main.GetAllSpecsRequest AllSpecsRequest {
      get { return allSpecsRequest_ ?? global::main.GetAllSpecsRequest.DefaultInstance; }
    }
    
    public const int AllSpecsResponseFieldNumber = 10;
    private bool hasAllSpecsResponse;
    private global::main.GetAllSpecsResponse allSpecsResponse_;
    public bool HasAllSpecsResponse {
      get { return hasAllSpecsResponse; }
    }
    public global::main.GetAllSpecsResponse AllSpecsResponse {
      get { return allSpecsResponse_ ?? global::main.GetAllSpecsResponse.DefaultInstance; }
    }
    
    public const int StepValueRequestFieldNumber = 11;
    private bool hasStepValueRequest;
    private global::main.GetStepValueRequest stepValueRequest_;
    public bool HasStepValueRequest {
      get { return hasStepValueRequest; }
    }
    public global::main.GetStepValueRequest StepValueRequest {
      get { return stepValueRequest_ ?? global::main.GetStepValueRequest.DefaultInstance; }
    }
    
    public const int StepValueResponseFieldNumber = 12;
    private bool hasStepValueResponse;
    private global::main.GetStepValueResponse stepValueResponse_;
    public bool HasStepValueResponse {
      get { return hasStepValueResponse; }
    }
    public global::main.GetStepValueResponse StepValueResponse {
      get { return stepValueResponse_ ?? global::main.GetStepValueResponse.DefaultInstance; }
    }
    
    public const int LibPathRequestFieldNumber = 13;
    private bool hasLibPathRequest;
    private global::main.GetLanguagePluginLibPathRequest libPathRequest_;
    public bool HasLibPathRequest {
      get { return hasLibPathRequest; }
    }
    public global::main.GetLanguagePluginLibPathRequest LibPathRequest {
      get { return libPathRequest_ ?? global::main.GetLanguagePluginLibPathRequest.DefaultInstance; }
    }
    
    public const int LibPathResponseFieldNumber = 14;
    private bool hasLibPathResponse;
    private global::main.GetLanguagePluginLibPathResponse libPathResponse_;
    public bool HasLibPathResponse {
      get { return hasLibPathResponse; }
    }
    public global::main.GetLanguagePluginLibPathResponse LibPathResponse {
      get { return libPathResponse_ ?? global::main.GetLanguagePluginLibPathResponse.DefaultInstance; }
    }
    
    public const int ErrorFieldNumber = 15;
    private bool hasError;
    private global::main.ErrorResponse error_;
    public bool HasError {
      get { return hasError; }
    }
    public global::main.ErrorResponse Error {
      get { return error_ ?? global::main.ErrorResponse.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageType) return false;
        if (!hasMessageId) return false;
        if (HasProjectRootResponse) {
          if (!ProjectRootResponse.IsInitialized) return false;
        }
        if (HasInstallationRootResponse) {
          if (!InstallationRootResponse.IsInitialized) return false;
        }
        if (HasAllStepsResponse) {
          if (!AllStepsResponse.IsInitialized) return false;
        }
        if (HasAllSpecsResponse) {
          if (!AllSpecsResponse.IsInitialized) return false;
        }
        if (HasStepValueRequest) {
          if (!StepValueRequest.IsInitialized) return false;
        }
        if (HasStepValueResponse) {
          if (!StepValueResponse.IsInitialized) return false;
        }
        if (HasLibPathRequest) {
          if (!LibPathRequest.IsInitialized) return false;
        }
        if (HasLibPathResponse) {
          if (!LibPathResponse.IsInitialized) return false;
        }
        if (HasError) {
          if (!Error.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _aPIMessageFieldNames;
      if (hasMessageType) {
        output.WriteEnum(1, field_names[10], (int) MessageType, MessageType);
      }
      if (hasMessageId) {
        output.WriteInt64(2, field_names[9], MessageId);
      }
      if (hasProjectRootRequest) {
        output.WriteMessage(3, field_names[11], ProjectRootRequest);
      }
      if (hasProjectRootResponse) {
        output.WriteMessage(4, field_names[12], ProjectRootResponse);
      }
      if (hasInstallationRootRequest) {
        output.WriteMessage(5, field_names[5], InstallationRootRequest);
      }
      if (hasInstallationRootResponse) {
        output.WriteMessage(6, field_names[6], InstallationRootResponse);
      }
      if (hasAllStepsRequest) {
        output.WriteMessage(7, field_names[2], AllStepsRequest);
      }
      if (hasAllStepsResponse) {
        output.WriteMessage(8, field_names[3], AllStepsResponse);
      }
      if (hasAllSpecsRequest) {
        output.WriteMessage(9, field_names[0], AllSpecsRequest);
      }
      if (hasAllSpecsResponse) {
        output.WriteMessage(10, field_names[1], AllSpecsResponse);
      }
      if (hasStepValueRequest) {
        output.WriteMessage(11, field_names[13], StepValueRequest);
      }
      if (hasStepValueResponse) {
        output.WriteMessage(12, field_names[14], StepValueResponse);
      }
      if (hasLibPathRequest) {
        output.WriteMessage(13, field_names[7], LibPathRequest);
      }
      if (hasLibPathResponse) {
        output.WriteMessage(14, field_names[8], LibPathResponse);
      }
      if (hasError) {
        output.WriteMessage(15, field_names[4], Error);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) MessageType);
        }
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, MessageId);
        }
        if (hasProjectRootRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ProjectRootRequest);
        }
        if (hasProjectRootResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ProjectRootResponse);
        }
        if (hasInstallationRootRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, InstallationRootRequest);
        }
        if (hasInstallationRootResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, InstallationRootResponse);
        }
        if (hasAllStepsRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, AllStepsRequest);
        }
        if (hasAllStepsResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, AllStepsResponse);
        }
        if (hasAllSpecsRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, AllSpecsRequest);
        }
        if (hasAllSpecsResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, AllSpecsResponse);
        }
        if (hasStepValueRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, StepValueRequest);
        }
        if (hasStepValueResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(12, StepValueResponse);
        }
        if (hasLibPathRequest) {
          size += pb::CodedOutputStream.ComputeMessageSize(13, LibPathRequest);
        }
        if (hasLibPathResponse) {
          size += pb::CodedOutputStream.ComputeMessageSize(14, LibPathResponse);
        }
        if (hasError) {
          size += pb::CodedOutputStream.ComputeMessageSize(15, Error);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static APIMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static APIMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static APIMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static APIMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static APIMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static APIMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static APIMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static APIMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static APIMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static APIMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private APIMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(APIMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<APIMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(APIMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private APIMessage result;
      
      private APIMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          APIMessage original = result;
          result = new APIMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override APIMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.APIMessage.Descriptor; }
      }
      
      public override APIMessage DefaultInstanceForType {
        get { return global::main.APIMessage.DefaultInstance; }
      }
      
      public override APIMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is APIMessage) {
          return MergeFrom((APIMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(APIMessage other) {
        if (other == global::main.APIMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageType) {
          MessageType = other.MessageType;
        }
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasProjectRootRequest) {
          MergeProjectRootRequest(other.ProjectRootRequest);
        }
        if (other.HasProjectRootResponse) {
          MergeProjectRootResponse(other.ProjectRootResponse);
        }
        if (other.HasInstallationRootRequest) {
          MergeInstallationRootRequest(other.InstallationRootRequest);
        }
        if (other.HasInstallationRootResponse) {
          MergeInstallationRootResponse(other.InstallationRootResponse);
        }
        if (other.HasAllStepsRequest) {
          MergeAllStepsRequest(other.AllStepsRequest);
        }
        if (other.HasAllStepsResponse) {
          MergeAllStepsResponse(other.AllStepsResponse);
        }
        if (other.HasAllSpecsRequest) {
          MergeAllSpecsRequest(other.AllSpecsRequest);
        }
        if (other.HasAllSpecsResponse) {
          MergeAllSpecsResponse(other.AllSpecsResponse);
        }
        if (other.HasStepValueRequest) {
          MergeStepValueRequest(other.StepValueRequest);
        }
        if (other.HasStepValueResponse) {
          MergeStepValueResponse(other.StepValueResponse);
        }
        if (other.HasLibPathRequest) {
          MergeLibPathRequest(other.LibPathRequest);
        }
        if (other.HasLibPathResponse) {
          MergeLibPathResponse(other.LibPathResponse);
        }
        if (other.HasError) {
          MergeError(other.Error);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_aPIMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _aPIMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.messageType_, out unknown)) {
                result.hasMessageType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasMessageId = input.ReadInt64(ref result.messageId_);
              break;
            }
            case 26: {
              global::main.GetProjectRootRequest.Builder subBuilder = global::main.GetProjectRootRequest.CreateBuilder();
              if (result.hasProjectRootRequest) {
                subBuilder.MergeFrom(ProjectRootRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ProjectRootRequest = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::main.GetProjectRootResponse.Builder subBuilder = global::main.GetProjectRootResponse.CreateBuilder();
              if (result.hasProjectRootResponse) {
                subBuilder.MergeFrom(ProjectRootResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ProjectRootResponse = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::main.GetInstallationRootRequest.Builder subBuilder = global::main.GetInstallationRootRequest.CreateBuilder();
              if (result.hasInstallationRootRequest) {
                subBuilder.MergeFrom(InstallationRootRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InstallationRootRequest = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::main.GetInstallationRootResponse.Builder subBuilder = global::main.GetInstallationRootResponse.CreateBuilder();
              if (result.hasInstallationRootResponse) {
                subBuilder.MergeFrom(InstallationRootResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InstallationRootResponse = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::main.GetAllStepsRequest.Builder subBuilder = global::main.GetAllStepsRequest.CreateBuilder();
              if (result.hasAllStepsRequest) {
                subBuilder.MergeFrom(AllStepsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AllStepsRequest = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::main.GetAllStepsResponse.Builder subBuilder = global::main.GetAllStepsResponse.CreateBuilder();
              if (result.hasAllStepsResponse) {
                subBuilder.MergeFrom(AllStepsResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AllStepsResponse = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::main.GetAllSpecsRequest.Builder subBuilder = global::main.GetAllSpecsRequest.CreateBuilder();
              if (result.hasAllSpecsRequest) {
                subBuilder.MergeFrom(AllSpecsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AllSpecsRequest = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::main.GetAllSpecsResponse.Builder subBuilder = global::main.GetAllSpecsResponse.CreateBuilder();
              if (result.hasAllSpecsResponse) {
                subBuilder.MergeFrom(AllSpecsResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AllSpecsResponse = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::main.GetStepValueRequest.Builder subBuilder = global::main.GetStepValueRequest.CreateBuilder();
              if (result.hasStepValueRequest) {
                subBuilder.MergeFrom(StepValueRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepValueRequest = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              global::main.GetStepValueResponse.Builder subBuilder = global::main.GetStepValueResponse.CreateBuilder();
              if (result.hasStepValueResponse) {
                subBuilder.MergeFrom(StepValueResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepValueResponse = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::main.GetLanguagePluginLibPathRequest.Builder subBuilder = global::main.GetLanguagePluginLibPathRequest.CreateBuilder();
              if (result.hasLibPathRequest) {
                subBuilder.MergeFrom(LibPathRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LibPathRequest = subBuilder.BuildPartial();
              break;
            }
            case 114: {
              global::main.GetLanguagePluginLibPathResponse.Builder subBuilder = global::main.GetLanguagePluginLibPathResponse.CreateBuilder();
              if (result.hasLibPathResponse) {
                subBuilder.MergeFrom(LibPathResponse);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LibPathResponse = subBuilder.BuildPartial();
              break;
            }
            case 122: {
              global::main.ErrorResponse.Builder subBuilder = global::main.ErrorResponse.CreateBuilder();
              if (result.hasError) {
                subBuilder.MergeFrom(Error);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Error = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageType {
       get { return result.hasMessageType; }
      }
      public global::main.APIMessage.Types.APIMessageType MessageType {
        get { return result.MessageType; }
        set { SetMessageType(value); }
      }
      public Builder SetMessageType(global::main.APIMessage.Types.APIMessageType value) {
        PrepareBuilder();
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder ClearMessageType() {
        PrepareBuilder();
        result.hasMessageType = false;
        result.messageType_ = global::main.APIMessage.Types.APIMessageType.GetProjectRootRequest;
        return this;
      }
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public long MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(long value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0L;
        return this;
      }
      
      public bool HasProjectRootRequest {
       get { return result.hasProjectRootRequest; }
      }
      public global::main.GetProjectRootRequest ProjectRootRequest {
        get { return result.ProjectRootRequest; }
        set { SetProjectRootRequest(value); }
      }
      public Builder SetProjectRootRequest(global::main.GetProjectRootRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProjectRootRequest = true;
        result.projectRootRequest_ = value;
        return this;
      }
      public Builder SetProjectRootRequest(global::main.GetProjectRootRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasProjectRootRequest = true;
        result.projectRootRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProjectRootRequest(global::main.GetProjectRootRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasProjectRootRequest &&
            result.projectRootRequest_ != global::main.GetProjectRootRequest.DefaultInstance) {
            result.projectRootRequest_ = global::main.GetProjectRootRequest.CreateBuilder(result.projectRootRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.projectRootRequest_ = value;
        }
        result.hasProjectRootRequest = true;
        return this;
      }
      public Builder ClearProjectRootRequest() {
        PrepareBuilder();
        result.hasProjectRootRequest = false;
        result.projectRootRequest_ = null;
        return this;
      }
      
      public bool HasProjectRootResponse {
       get { return result.hasProjectRootResponse; }
      }
      public global::main.GetProjectRootResponse ProjectRootResponse {
        get { return result.ProjectRootResponse; }
        set { SetProjectRootResponse(value); }
      }
      public Builder SetProjectRootResponse(global::main.GetProjectRootResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProjectRootResponse = true;
        result.projectRootResponse_ = value;
        return this;
      }
      public Builder SetProjectRootResponse(global::main.GetProjectRootResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasProjectRootResponse = true;
        result.projectRootResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProjectRootResponse(global::main.GetProjectRootResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasProjectRootResponse &&
            result.projectRootResponse_ != global::main.GetProjectRootResponse.DefaultInstance) {
            result.projectRootResponse_ = global::main.GetProjectRootResponse.CreateBuilder(result.projectRootResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.projectRootResponse_ = value;
        }
        result.hasProjectRootResponse = true;
        return this;
      }
      public Builder ClearProjectRootResponse() {
        PrepareBuilder();
        result.hasProjectRootResponse = false;
        result.projectRootResponse_ = null;
        return this;
      }
      
      public bool HasInstallationRootRequest {
       get { return result.hasInstallationRootRequest; }
      }
      public global::main.GetInstallationRootRequest InstallationRootRequest {
        get { return result.InstallationRootRequest; }
        set { SetInstallationRootRequest(value); }
      }
      public Builder SetInstallationRootRequest(global::main.GetInstallationRootRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInstallationRootRequest = true;
        result.installationRootRequest_ = value;
        return this;
      }
      public Builder SetInstallationRootRequest(global::main.GetInstallationRootRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInstallationRootRequest = true;
        result.installationRootRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInstallationRootRequest(global::main.GetInstallationRootRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInstallationRootRequest &&
            result.installationRootRequest_ != global::main.GetInstallationRootRequest.DefaultInstance) {
            result.installationRootRequest_ = global::main.GetInstallationRootRequest.CreateBuilder(result.installationRootRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.installationRootRequest_ = value;
        }
        result.hasInstallationRootRequest = true;
        return this;
      }
      public Builder ClearInstallationRootRequest() {
        PrepareBuilder();
        result.hasInstallationRootRequest = false;
        result.installationRootRequest_ = null;
        return this;
      }
      
      public bool HasInstallationRootResponse {
       get { return result.hasInstallationRootResponse; }
      }
      public global::main.GetInstallationRootResponse InstallationRootResponse {
        get { return result.InstallationRootResponse; }
        set { SetInstallationRootResponse(value); }
      }
      public Builder SetInstallationRootResponse(global::main.GetInstallationRootResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInstallationRootResponse = true;
        result.installationRootResponse_ = value;
        return this;
      }
      public Builder SetInstallationRootResponse(global::main.GetInstallationRootResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInstallationRootResponse = true;
        result.installationRootResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInstallationRootResponse(global::main.GetInstallationRootResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInstallationRootResponse &&
            result.installationRootResponse_ != global::main.GetInstallationRootResponse.DefaultInstance) {
            result.installationRootResponse_ = global::main.GetInstallationRootResponse.CreateBuilder(result.installationRootResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.installationRootResponse_ = value;
        }
        result.hasInstallationRootResponse = true;
        return this;
      }
      public Builder ClearInstallationRootResponse() {
        PrepareBuilder();
        result.hasInstallationRootResponse = false;
        result.installationRootResponse_ = null;
        return this;
      }
      
      public bool HasAllStepsRequest {
       get { return result.hasAllStepsRequest; }
      }
      public global::main.GetAllStepsRequest AllStepsRequest {
        get { return result.AllStepsRequest; }
        set { SetAllStepsRequest(value); }
      }
      public Builder SetAllStepsRequest(global::main.GetAllStepsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAllStepsRequest = true;
        result.allStepsRequest_ = value;
        return this;
      }
      public Builder SetAllStepsRequest(global::main.GetAllStepsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAllStepsRequest = true;
        result.allStepsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAllStepsRequest(global::main.GetAllStepsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAllStepsRequest &&
            result.allStepsRequest_ != global::main.GetAllStepsRequest.DefaultInstance) {
            result.allStepsRequest_ = global::main.GetAllStepsRequest.CreateBuilder(result.allStepsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.allStepsRequest_ = value;
        }
        result.hasAllStepsRequest = true;
        return this;
      }
      public Builder ClearAllStepsRequest() {
        PrepareBuilder();
        result.hasAllStepsRequest = false;
        result.allStepsRequest_ = null;
        return this;
      }
      
      public bool HasAllStepsResponse {
       get { return result.hasAllStepsResponse; }
      }
      public global::main.GetAllStepsResponse AllStepsResponse {
        get { return result.AllStepsResponse; }
        set { SetAllStepsResponse(value); }
      }
      public Builder SetAllStepsResponse(global::main.GetAllStepsResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAllStepsResponse = true;
        result.allStepsResponse_ = value;
        return this;
      }
      public Builder SetAllStepsResponse(global::main.GetAllStepsResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAllStepsResponse = true;
        result.allStepsResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAllStepsResponse(global::main.GetAllStepsResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAllStepsResponse &&
            result.allStepsResponse_ != global::main.GetAllStepsResponse.DefaultInstance) {
            result.allStepsResponse_ = global::main.GetAllStepsResponse.CreateBuilder(result.allStepsResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.allStepsResponse_ = value;
        }
        result.hasAllStepsResponse = true;
        return this;
      }
      public Builder ClearAllStepsResponse() {
        PrepareBuilder();
        result.hasAllStepsResponse = false;
        result.allStepsResponse_ = null;
        return this;
      }
      
      public bool HasAllSpecsRequest {
       get { return result.hasAllSpecsRequest; }
      }
      public global::main.GetAllSpecsRequest AllSpecsRequest {
        get { return result.AllSpecsRequest; }
        set { SetAllSpecsRequest(value); }
      }
      public Builder SetAllSpecsRequest(global::main.GetAllSpecsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAllSpecsRequest = true;
        result.allSpecsRequest_ = value;
        return this;
      }
      public Builder SetAllSpecsRequest(global::main.GetAllSpecsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAllSpecsRequest = true;
        result.allSpecsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAllSpecsRequest(global::main.GetAllSpecsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAllSpecsRequest &&
            result.allSpecsRequest_ != global::main.GetAllSpecsRequest.DefaultInstance) {
            result.allSpecsRequest_ = global::main.GetAllSpecsRequest.CreateBuilder(result.allSpecsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.allSpecsRequest_ = value;
        }
        result.hasAllSpecsRequest = true;
        return this;
      }
      public Builder ClearAllSpecsRequest() {
        PrepareBuilder();
        result.hasAllSpecsRequest = false;
        result.allSpecsRequest_ = null;
        return this;
      }
      
      public bool HasAllSpecsResponse {
       get { return result.hasAllSpecsResponse; }
      }
      public global::main.GetAllSpecsResponse AllSpecsResponse {
        get { return result.AllSpecsResponse; }
        set { SetAllSpecsResponse(value); }
      }
      public Builder SetAllSpecsResponse(global::main.GetAllSpecsResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAllSpecsResponse = true;
        result.allSpecsResponse_ = value;
        return this;
      }
      public Builder SetAllSpecsResponse(global::main.GetAllSpecsResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAllSpecsResponse = true;
        result.allSpecsResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAllSpecsResponse(global::main.GetAllSpecsResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAllSpecsResponse &&
            result.allSpecsResponse_ != global::main.GetAllSpecsResponse.DefaultInstance) {
            result.allSpecsResponse_ = global::main.GetAllSpecsResponse.CreateBuilder(result.allSpecsResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.allSpecsResponse_ = value;
        }
        result.hasAllSpecsResponse = true;
        return this;
      }
      public Builder ClearAllSpecsResponse() {
        PrepareBuilder();
        result.hasAllSpecsResponse = false;
        result.allSpecsResponse_ = null;
        return this;
      }
      
      public bool HasStepValueRequest {
       get { return result.hasStepValueRequest; }
      }
      public global::main.GetStepValueRequest StepValueRequest {
        get { return result.StepValueRequest; }
        set { SetStepValueRequest(value); }
      }
      public Builder SetStepValueRequest(global::main.GetStepValueRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValueRequest = true;
        result.stepValueRequest_ = value;
        return this;
      }
      public Builder SetStepValueRequest(global::main.GetStepValueRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepValueRequest = true;
        result.stepValueRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepValueRequest(global::main.GetStepValueRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepValueRequest &&
            result.stepValueRequest_ != global::main.GetStepValueRequest.DefaultInstance) {
            result.stepValueRequest_ = global::main.GetStepValueRequest.CreateBuilder(result.stepValueRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.stepValueRequest_ = value;
        }
        result.hasStepValueRequest = true;
        return this;
      }
      public Builder ClearStepValueRequest() {
        PrepareBuilder();
        result.hasStepValueRequest = false;
        result.stepValueRequest_ = null;
        return this;
      }
      
      public bool HasStepValueResponse {
       get { return result.hasStepValueResponse; }
      }
      public global::main.GetStepValueResponse StepValueResponse {
        get { return result.StepValueResponse; }
        set { SetStepValueResponse(value); }
      }
      public Builder SetStepValueResponse(global::main.GetStepValueResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValueResponse = true;
        result.stepValueResponse_ = value;
        return this;
      }
      public Builder SetStepValueResponse(global::main.GetStepValueResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepValueResponse = true;
        result.stepValueResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepValueResponse(global::main.GetStepValueResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepValueResponse &&
            result.stepValueResponse_ != global::main.GetStepValueResponse.DefaultInstance) {
            result.stepValueResponse_ = global::main.GetStepValueResponse.CreateBuilder(result.stepValueResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.stepValueResponse_ = value;
        }
        result.hasStepValueResponse = true;
        return this;
      }
      public Builder ClearStepValueResponse() {
        PrepareBuilder();
        result.hasStepValueResponse = false;
        result.stepValueResponse_ = null;
        return this;
      }
      
      public bool HasLibPathRequest {
       get { return result.hasLibPathRequest; }
      }
      public global::main.GetLanguagePluginLibPathRequest LibPathRequest {
        get { return result.LibPathRequest; }
        set { SetLibPathRequest(value); }
      }
      public Builder SetLibPathRequest(global::main.GetLanguagePluginLibPathRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLibPathRequest = true;
        result.libPathRequest_ = value;
        return this;
      }
      public Builder SetLibPathRequest(global::main.GetLanguagePluginLibPathRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLibPathRequest = true;
        result.libPathRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLibPathRequest(global::main.GetLanguagePluginLibPathRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLibPathRequest &&
            result.libPathRequest_ != global::main.GetLanguagePluginLibPathRequest.DefaultInstance) {
            result.libPathRequest_ = global::main.GetLanguagePluginLibPathRequest.CreateBuilder(result.libPathRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.libPathRequest_ = value;
        }
        result.hasLibPathRequest = true;
        return this;
      }
      public Builder ClearLibPathRequest() {
        PrepareBuilder();
        result.hasLibPathRequest = false;
        result.libPathRequest_ = null;
        return this;
      }
      
      public bool HasLibPathResponse {
       get { return result.hasLibPathResponse; }
      }
      public global::main.GetLanguagePluginLibPathResponse LibPathResponse {
        get { return result.LibPathResponse; }
        set { SetLibPathResponse(value); }
      }
      public Builder SetLibPathResponse(global::main.GetLanguagePluginLibPathResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLibPathResponse = true;
        result.libPathResponse_ = value;
        return this;
      }
      public Builder SetLibPathResponse(global::main.GetLanguagePluginLibPathResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLibPathResponse = true;
        result.libPathResponse_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLibPathResponse(global::main.GetLanguagePluginLibPathResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLibPathResponse &&
            result.libPathResponse_ != global::main.GetLanguagePluginLibPathResponse.DefaultInstance) {
            result.libPathResponse_ = global::main.GetLanguagePluginLibPathResponse.CreateBuilder(result.libPathResponse_).MergeFrom(value).BuildPartial();
        } else {
          result.libPathResponse_ = value;
        }
        result.hasLibPathResponse = true;
        return this;
      }
      public Builder ClearLibPathResponse() {
        PrepareBuilder();
        result.hasLibPathResponse = false;
        result.libPathResponse_ = null;
        return this;
      }
      
      public bool HasError {
       get { return result.hasError; }
      }
      public global::main.ErrorResponse Error {
        get { return result.Error; }
        set { SetError(value); }
      }
      public Builder SetError(global::main.ErrorResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = value;
        return this;
      }
      public Builder SetError(global::main.ErrorResponse.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasError = true;
        result.error_ = builderForValue.Build();
        return this;
      }
      public Builder MergeError(global::main.ErrorResponse value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasError &&
            result.error_ != global::main.ErrorResponse.DefaultInstance) {
            result.error_ = global::main.ErrorResponse.CreateBuilder(result.error_).MergeFrom(value).BuildPartial();
        } else {
          result.error_ = value;
        }
        result.hasError = true;
        return this;
      }
      public Builder ClearError() {
        PrepareBuilder();
        result.hasError = false;
        result.error_ = null;
        return this;
      }
    }
    static APIMessage() {
      object.ReferenceEquals(global::main.Api.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
