// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace main {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Spec {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_main_ProtoSpec__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoSpec, global::main.ProtoSpec.Builder> internal__static_main_ProtoSpec__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoItem, global::main.ProtoItem.Builder> internal__static_main_ProtoItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoScenario__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoScenario, global::main.ProtoScenario.Builder> internal__static_main_ProtoScenario__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoTableDrivenScenario__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoTableDrivenScenario, global::main.ProtoTableDrivenScenario.Builder> internal__static_main_ProtoTableDrivenScenario__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoStep__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoStep, global::main.ProtoStep.Builder> internal__static_main_ProtoStep__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoConcept__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoConcept, global::main.ProtoConcept.Builder> internal__static_main_ProtoConcept__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoTags__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoTags, global::main.ProtoTags.Builder> internal__static_main_ProtoTags__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_Fragment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.Fragment, global::main.Fragment.Builder> internal__static_main_Fragment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_Parameter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.Parameter, global::main.Parameter.Builder> internal__static_main_Parameter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoComment__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoComment, global::main.ProtoComment.Builder> internal__static_main_ProtoComment__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoTable__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoTable, global::main.ProtoTable.Builder> internal__static_main_ProtoTable__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoTableRow__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoTableRow, global::main.ProtoTableRow.Builder> internal__static_main_ProtoTableRow__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoStepExecutionResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoStepExecutionResult, global::main.ProtoStepExecutionResult.Builder> internal__static_main_ProtoStepExecutionResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoExecutionResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoExecutionResult, global::main.ProtoExecutionResult.Builder> internal__static_main_ProtoExecutionResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoHookFailure__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoHookFailure, global::main.ProtoHookFailure.Builder> internal__static_main_ProtoHookFailure__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoSuiteResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoSuiteResult, global::main.ProtoSuiteResult.Builder> internal__static_main_ProtoSuiteResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoSpecResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoSpecResult, global::main.ProtoSpecResult.Builder> internal__static_main_ProtoSpecResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_main_ProtoStepValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::main.ProtoStepValue, global::main.ProtoStepValue.Builder> internal__static_main_ProtoStepValue__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Spec() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CgpzcGVjLnByb3RvEgRtYWluItgBCglQcm90b1NwZWMSEwoLc3BlY0hlYWRp" + 
          "bmcYASACKAkSHgoFaXRlbXMYAiADKAsyDy5tYWluLlByb3RvSXRlbRIVCg1p" + 
          "c1RhYmxlRHJpdmVuGAMgAigIEi4KDnByZUhvb2tGYWlsdXJlGAQgASgLMhYu" + 
          "bWFpbi5Qcm90b0hvb2tGYWlsdXJlEi8KD3Bvc3RIb29rRmFpbHVyZRgFIAEo" + 
          "CzIWLm1haW4uUHJvdG9Ib29rRmFpbHVyZRIQCghmaWxlTmFtZRgGIAIoCRIM" + 
          "CgR0YWdzGAcgAygJIocDCglQcm90b0l0ZW0SKgoIaXRlbVR5cGUYASACKA4y" + 
          "GC5tYWluLlByb3RvSXRlbS5JdGVtVHlwZRIdCgRzdGVwGAIgASgLMg8ubWFp" + 
          "bi5Qcm90b1N0ZXASIwoHY29uY2VwdBgDIAEoCzISLm1haW4uUHJvdG9Db25j" + 
          "ZXB0EiUKCHNjZW5hcmlvGAQgASgLMhMubWFpbi5Qcm90b1NjZW5hcmlvEjsK" + 
          "E3RhYmxlRHJpdmVuU2NlbmFyaW8YBSABKAsyHi5tYWluLlByb3RvVGFibGVE" + 
          "cml2ZW5TY2VuYXJpbxIjCgdjb21tZW50GAYgASgLMhIubWFpbi5Qcm90b0Nv" + 
          "bW1lbnQSHwoFdGFibGUYByABKAsyEC5tYWluLlByb3RvVGFibGUiYAoISXRl" + 
          "bVR5cGUSCAoEU3RlcBABEgsKB0NvbW1lbnQQAhILCgdDb25jZXB0EAMSDAoI" + 
          "U2NlbmFyaW8QBBIXChNUYWJsZURyaXZlblNjZW5hcmlvEAUSCQoFVGFibGUQ" + 
          "BiKJAgoNUHJvdG9TY2VuYXJpbxIXCg9zY2VuYXJpb0hlYWRpbmcYASACKAkS" + 
          "DgoGZmFpbGVkGAIgAigIEiEKCGNvbnRleHRzGAMgAygLMg8ubWFpbi5Qcm90" + 
          "b0l0ZW0SJgoNc2NlbmFyaW9JdGVtcxgEIAMoCzIPLm1haW4uUHJvdG9JdGVt" + 
          "Ei4KDnByZUhvb2tGYWlsdXJlGAUgASgLMhYubWFpbi5Qcm90b0hvb2tGYWls" + 
          "dXJlEi8KD3Bvc3RIb29rRmFpbHVyZRgGIAEoCzIWLm1haW4uUHJvdG9Ib29r" + 
          "RmFpbHVyZRIMCgR0YWdzGAcgAygJEhUKDWV4ZWN1dGlvblRpbWUYCCABKAMi" + 
          "QgoYUHJvdG9UYWJsZURyaXZlblNjZW5hcmlvEiYKCXNjZW5hcmlvcxgBIAMo" + 
          "CzITLm1haW4uUHJvdG9TY2VuYXJpbyKTAQoJUHJvdG9TdGVwEhIKCmFjdHVh" + 
          "bFRleHQYASACKAkSEgoKcGFyc2VkVGV4dBgCIAIoCRIhCglmcmFnbWVudHMY" + 
          "AyADKAsyDi5tYWluLkZyYWdtZW50EjsKE3N0ZXBFeGVjdXRpb25SZXN1bHQY" + 
          "BCABKAsyHi5tYWluLlByb3RvU3RlcEV4ZWN1dGlvblJlc3VsdCKUAQoMUHJv" + 
          "dG9Db25jZXB0EiQKC2NvbmNlcHRTdGVwGAEgAigLMg8ubWFpbi5Qcm90b1N0" + 
          "ZXASHgoFc3RlcHMYAiADKAsyDy5tYWluLlByb3RvU3RlcBI+ChZjb25jZXB0" + 
          "RXhlY3V0aW9uUmVzdWx0GAMgASgLMh4ubWFpbi5Qcm90b1N0ZXBFeGVjdXRp" + 
          "b25SZXN1bHQiGQoJUHJvdG9UYWdzEgwKBHRhZ3MYASADKAkimAEKCEZyYWdt" + 
          "ZW50EjEKDGZyYWdtZW50VHlwZRgBIAIoDjIbLm1haW4uRnJhZ21lbnQuRnJh" + 
          "Z21lbnRUeXBlEgwKBHRleHQYAiABKAkSIgoJcGFyYW1ldGVyGAMgASgLMg8u" + 
          "bWFpbi5QYXJhbWV0ZXIiJwoMRnJhZ21lbnRUeXBlEggKBFRleHQQARINCglQ" + 
          "YXJhbWV0ZXIQAiLbAQoJUGFyYW1ldGVyEjQKDXBhcmFtZXRlclR5cGUYASAC" + 
          "KA4yHS5tYWluLlBhcmFtZXRlci5QYXJhbWV0ZXJUeXBlEg0KBXZhbHVlGAIg" + 
          "ASgJEgwKBG5hbWUYAyABKAkSHwoFdGFibGUYBCABKAsyEC5tYWluLlByb3Rv" + 
          "VGFibGUiWgoNUGFyYW1ldGVyVHlwZRIKCgZTdGF0aWMQARILCgdEeW5hbWlj" + 
          "EAISEgoOU3BlY2lhbF9TdHJpbmcQAxIRCg1TcGVjaWFsX1RhYmxlEAQSCQoF" + 
          "VGFibGUQBSIcCgxQcm90b0NvbW1lbnQSDAoEdGV4dBgBIAIoCSJVCgpQcm90" + 
          "b1RhYmxlEiQKB2hlYWRlcnMYASACKAsyEy5tYWluLlByb3RvVGFibGVSb3cS" + 
          "IQoEcm93cxgCIAMoCzITLm1haW4uUHJvdG9UYWJsZVJvdyIeCg1Qcm90b1Rh" + 
          "YmxlUm93Eg0KBWNlbGxzGAEgAygJIrABChhQcm90b1N0ZXBFeGVjdXRpb25S" + 
          "ZXN1bHQSMwoPZXhlY3V0aW9uUmVzdWx0GAEgAigLMhoubWFpbi5Qcm90b0V4" + 
          "ZWN1dGlvblJlc3VsdBIuCg5wcmVIb29rRmFpbHVyZRgCIAEoCzIWLm1haW4u" + 
          "UHJvdG9Ib29rRmFpbHVyZRIvCg9wb3N0SG9va0ZhaWx1cmUYAyABKAsyFi5t" + 
          "YWluLlByb3RvSG9va0ZhaWx1cmUilQEKFFByb3RvRXhlY3V0aW9uUmVzdWx0" + 
          "Eg4KBmZhaWxlZBgBIAIoCBIYChByZWNvdmVyYWJsZUVycm9yGAIgASgIEhQK" + 
          "DGVycm9yTWVzc2FnZRgDIAEoCRISCgpzdGFja1RyYWNlGAQgASgJEhIKCnNj" + 
          "cmVlblNob3QYBSABKAwSFQoNZXhlY3V0aW9uVGltZRgGIAIoAyJQChBQcm90" + 
          "b0hvb2tGYWlsdXJlEhIKCnN0YWNrVHJhY2UYASACKAkSFAoMZXJyb3JNZXNz" + 
          "YWdlGAIgAigJEhIKCnNjcmVlblNob3QYAyABKAwi9QEKEFByb3RvU3VpdGVS" + 
          "ZXN1bHQSKgoLc3BlY1Jlc3VsdHMYASADKAsyFS5tYWluLlByb3RvU3BlY1Jl" + 
          "c3VsdBIuCg5wcmVIb29rRmFpbHVyZRgCIAEoCzIWLm1haW4uUHJvdG9Ib29r" + 
          "RmFpbHVyZRIvCg9wb3N0SG9va0ZhaWx1cmUYAyABKAsyFi5tYWluLlByb3Rv" + 
          "SG9va0ZhaWx1cmUSDgoGZmFpbGVkGAQgAigIEhgKEHNwZWNzRmFpbGVkQ291" + 
          "bnQYBSACKAUSFQoNZXhlY3V0aW9uVGltZRgGIAEoAxITCgtzdWNjZXNzUmF0" + 
          "ZRgHIAIoAiKtAQoPUHJvdG9TcGVjUmVzdWx0EiIKCXByb3RvU3BlYxgBIAIo" + 
          "CzIPLm1haW4uUHJvdG9TcGVjEhUKDXNjZW5hcmlvQ291bnQYAiACKAUSGwoT" + 
          "c2NlbmFyaW9GYWlsZWRDb3VudBgDIAIoBRIOCgZmYWlsZWQYBCACKAgSGwoT" + 
          "ZmFpbGVkRGF0YVRhYmxlUm93cxgFIAMoBRIVCg1leGVjdXRpb25UaW1lGAYg" + 
          "ASgDIlcKDlByb3RvU3RlcFZhbHVlEhEKCXN0ZXBWYWx1ZRgBIAIoCRIeChZw" + 
          "YXJhbWV0ZXJpemVkU3RlcFZhbHVlGAIgAigJEhIKCnBhcmFtZXRlcnMYAyAD" + 
          "KAk=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_main_ProtoSpec__Descriptor = Descriptor.MessageTypes[0];
        internal__static_main_ProtoSpec__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoSpec, global::main.ProtoSpec.Builder>(internal__static_main_ProtoSpec__Descriptor,
                new string[] { "SpecHeading", "Items", "IsTableDriven", "PreHookFailure", "PostHookFailure", "FileName", "Tags", });
        internal__static_main_ProtoItem__Descriptor = Descriptor.MessageTypes[1];
        internal__static_main_ProtoItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoItem, global::main.ProtoItem.Builder>(internal__static_main_ProtoItem__Descriptor,
                new string[] { "ItemType", "Step", "Concept", "Scenario", "TableDrivenScenario", "Comment", "Table", });
        internal__static_main_ProtoScenario__Descriptor = Descriptor.MessageTypes[2];
        internal__static_main_ProtoScenario__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoScenario, global::main.ProtoScenario.Builder>(internal__static_main_ProtoScenario__Descriptor,
                new string[] { "ScenarioHeading", "Failed", "Contexts", "ScenarioItems", "PreHookFailure", "PostHookFailure", "Tags", "ExecutionTime", });
        internal__static_main_ProtoTableDrivenScenario__Descriptor = Descriptor.MessageTypes[3];
        internal__static_main_ProtoTableDrivenScenario__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoTableDrivenScenario, global::main.ProtoTableDrivenScenario.Builder>(internal__static_main_ProtoTableDrivenScenario__Descriptor,
                new string[] { "Scenarios", });
        internal__static_main_ProtoStep__Descriptor = Descriptor.MessageTypes[4];
        internal__static_main_ProtoStep__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoStep, global::main.ProtoStep.Builder>(internal__static_main_ProtoStep__Descriptor,
                new string[] { "ActualText", "ParsedText", "Fragments", "StepExecutionResult", });
        internal__static_main_ProtoConcept__Descriptor = Descriptor.MessageTypes[5];
        internal__static_main_ProtoConcept__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoConcept, global::main.ProtoConcept.Builder>(internal__static_main_ProtoConcept__Descriptor,
                new string[] { "ConceptStep", "Steps", "ConceptExecutionResult", });
        internal__static_main_ProtoTags__Descriptor = Descriptor.MessageTypes[6];
        internal__static_main_ProtoTags__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoTags, global::main.ProtoTags.Builder>(internal__static_main_ProtoTags__Descriptor,
                new string[] { "Tags", });
        internal__static_main_Fragment__Descriptor = Descriptor.MessageTypes[7];
        internal__static_main_Fragment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.Fragment, global::main.Fragment.Builder>(internal__static_main_Fragment__Descriptor,
                new string[] { "FragmentType", "Text", "Parameter", });
        internal__static_main_Parameter__Descriptor = Descriptor.MessageTypes[8];
        internal__static_main_Parameter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.Parameter, global::main.Parameter.Builder>(internal__static_main_Parameter__Descriptor,
                new string[] { "ParameterType", "Value", "Name", "Table", });
        internal__static_main_ProtoComment__Descriptor = Descriptor.MessageTypes[9];
        internal__static_main_ProtoComment__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoComment, global::main.ProtoComment.Builder>(internal__static_main_ProtoComment__Descriptor,
                new string[] { "Text", });
        internal__static_main_ProtoTable__Descriptor = Descriptor.MessageTypes[10];
        internal__static_main_ProtoTable__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoTable, global::main.ProtoTable.Builder>(internal__static_main_ProtoTable__Descriptor,
                new string[] { "Headers", "Rows", });
        internal__static_main_ProtoTableRow__Descriptor = Descriptor.MessageTypes[11];
        internal__static_main_ProtoTableRow__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoTableRow, global::main.ProtoTableRow.Builder>(internal__static_main_ProtoTableRow__Descriptor,
                new string[] { "Cells", });
        internal__static_main_ProtoStepExecutionResult__Descriptor = Descriptor.MessageTypes[12];
        internal__static_main_ProtoStepExecutionResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoStepExecutionResult, global::main.ProtoStepExecutionResult.Builder>(internal__static_main_ProtoStepExecutionResult__Descriptor,
                new string[] { "ExecutionResult", "PreHookFailure", "PostHookFailure", });
        internal__static_main_ProtoExecutionResult__Descriptor = Descriptor.MessageTypes[13];
        internal__static_main_ProtoExecutionResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoExecutionResult, global::main.ProtoExecutionResult.Builder>(internal__static_main_ProtoExecutionResult__Descriptor,
                new string[] { "Failed", "RecoverableError", "ErrorMessage", "StackTrace", "ScreenShot", "ExecutionTime", });
        internal__static_main_ProtoHookFailure__Descriptor = Descriptor.MessageTypes[14];
        internal__static_main_ProtoHookFailure__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoHookFailure, global::main.ProtoHookFailure.Builder>(internal__static_main_ProtoHookFailure__Descriptor,
                new string[] { "StackTrace", "ErrorMessage", "ScreenShot", });
        internal__static_main_ProtoSuiteResult__Descriptor = Descriptor.MessageTypes[15];
        internal__static_main_ProtoSuiteResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoSuiteResult, global::main.ProtoSuiteResult.Builder>(internal__static_main_ProtoSuiteResult__Descriptor,
                new string[] { "SpecResults", "PreHookFailure", "PostHookFailure", "Failed", "SpecsFailedCount", "ExecutionTime", "SuccessRate", });
        internal__static_main_ProtoSpecResult__Descriptor = Descriptor.MessageTypes[16];
        internal__static_main_ProtoSpecResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoSpecResult, global::main.ProtoSpecResult.Builder>(internal__static_main_ProtoSpecResult__Descriptor,
                new string[] { "ProtoSpec", "ScenarioCount", "ScenarioFailedCount", "Failed", "FailedDataTableRows", "ExecutionTime", });
        internal__static_main_ProtoStepValue__Descriptor = Descriptor.MessageTypes[17];
        internal__static_main_ProtoStepValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::main.ProtoStepValue, global::main.ProtoStepValue.Builder>(internal__static_main_ProtoStepValue__Descriptor,
                new string[] { "StepValue", "ParameterizedStepValue", "Parameters", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoSpec : pb::GeneratedMessage<ProtoSpec, ProtoSpec.Builder> {
    private ProtoSpec() { }
    private static readonly ProtoSpec defaultInstance = new ProtoSpec().MakeReadOnly();
    private static readonly string[] _protoSpecFieldNames = new string[] { "fileName", "isTableDriven", "items", "postHookFailure", "preHookFailure", "specHeading", "tags" };
    private static readonly uint[] _protoSpecFieldTags = new uint[] { 50, 24, 18, 42, 34, 10, 58 };
    public static ProtoSpec DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoSpec DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoSpec ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoSpec__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoSpec, ProtoSpec.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoSpec__FieldAccessorTable; }
    }
    
    public const int SpecHeadingFieldNumber = 1;
    private bool hasSpecHeading;
    private string specHeading_ = "";
    public bool HasSpecHeading {
      get { return hasSpecHeading; }
    }
    public string SpecHeading {
      get { return specHeading_; }
    }
    
    public const int ItemsFieldNumber = 2;
    private pbc::PopsicleList<global::main.ProtoItem> items_ = new pbc::PopsicleList<global::main.ProtoItem>();
    public scg::IList<global::main.ProtoItem> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::main.ProtoItem GetItems(int index) {
      return items_[index];
    }
    
    public const int IsTableDrivenFieldNumber = 3;
    private bool hasIsTableDriven;
    private bool isTableDriven_;
    public bool HasIsTableDriven {
      get { return hasIsTableDriven; }
    }
    public bool IsTableDriven {
      get { return isTableDriven_; }
    }
    
    public const int PreHookFailureFieldNumber = 4;
    private bool hasPreHookFailure;
    private global::main.ProtoHookFailure preHookFailure_;
    public bool HasPreHookFailure {
      get { return hasPreHookFailure; }
    }
    public global::main.ProtoHookFailure PreHookFailure {
      get { return preHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int PostHookFailureFieldNumber = 5;
    private bool hasPostHookFailure;
    private global::main.ProtoHookFailure postHookFailure_;
    public bool HasPostHookFailure {
      get { return hasPostHookFailure; }
    }
    public global::main.ProtoHookFailure PostHookFailure {
      get { return postHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int FileNameFieldNumber = 6;
    private bool hasFileName;
    private string fileName_ = "";
    public bool HasFileName {
      get { return hasFileName; }
    }
    public string FileName {
      get { return fileName_; }
    }
    
    public const int TagsFieldNumber = 7;
    private pbc::PopsicleList<string> tags_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TagsList {
      get { return pbc::Lists.AsReadOnly(tags_); }
    }
    public int TagsCount {
      get { return tags_.Count; }
    }
    public string GetTags(int index) {
      return tags_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSpecHeading) return false;
        if (!hasIsTableDriven) return false;
        if (!hasFileName) return false;
        foreach (global::main.ProtoItem element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasPreHookFailure) {
          if (!PreHookFailure.IsInitialized) return false;
        }
        if (HasPostHookFailure) {
          if (!PostHookFailure.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoSpecFieldNames;
      if (hasSpecHeading) {
        output.WriteString(1, field_names[5], SpecHeading);
      }
      if (items_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], items_);
      }
      if (hasIsTableDriven) {
        output.WriteBool(3, field_names[1], IsTableDriven);
      }
      if (hasPreHookFailure) {
        output.WriteMessage(4, field_names[4], PreHookFailure);
      }
      if (hasPostHookFailure) {
        output.WriteMessage(5, field_names[3], PostHookFailure);
      }
      if (hasFileName) {
        output.WriteString(6, field_names[0], FileName);
      }
      if (tags_.Count > 0) {
        output.WriteStringArray(7, field_names[6], tags_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSpecHeading) {
          size += pb::CodedOutputStream.ComputeStringSize(1, SpecHeading);
        }
        foreach (global::main.ProtoItem element in ItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasIsTableDriven) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsTableDriven);
        }
        if (hasPreHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, PreHookFailure);
        }
        if (hasPostHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, PostHookFailure);
        }
        if (hasFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(6, FileName);
        }
        {
          int dataSize = 0;
          foreach (string element in TagsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tags_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoSpec ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoSpec ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoSpec ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoSpec ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoSpec ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoSpec ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoSpec ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoSpec ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoSpec ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoSpec ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoSpec MakeReadOnly() {
      items_.MakeReadOnly();
      tags_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoSpec prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoSpec, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoSpec cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoSpec result;
      
      private ProtoSpec PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoSpec original = result;
          result = new ProtoSpec();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoSpec MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoSpec.Descriptor; }
      }
      
      public override ProtoSpec DefaultInstanceForType {
        get { return global::main.ProtoSpec.DefaultInstance; }
      }
      
      public override ProtoSpec BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoSpec) {
          return MergeFrom((ProtoSpec) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoSpec other) {
        if (other == global::main.ProtoSpec.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSpecHeading) {
          SpecHeading = other.SpecHeading;
        }
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        if (other.HasIsTableDriven) {
          IsTableDriven = other.IsTableDriven;
        }
        if (other.HasPreHookFailure) {
          MergePreHookFailure(other.PreHookFailure);
        }
        if (other.HasPostHookFailure) {
          MergePostHookFailure(other.PostHookFailure);
        }
        if (other.HasFileName) {
          FileName = other.FileName;
        }
        if (other.tags_.Count != 0) {
          result.tags_.Add(other.tags_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoSpecFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoSpecFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSpecHeading = input.ReadString(ref result.specHeading_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.items_, global::main.ProtoItem.DefaultInstance, extensionRegistry);
              break;
            }
            case 24: {
              result.hasIsTableDriven = input.ReadBool(ref result.isTableDriven_);
              break;
            }
            case 34: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPreHookFailure) {
                subBuilder.MergeFrom(PreHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PreHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPostHookFailure) {
                subBuilder.MergeFrom(PostHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PostHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              result.hasFileName = input.ReadString(ref result.fileName_);
              break;
            }
            case 58: {
              input.ReadStringArray(tag, field_name, result.tags_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSpecHeading {
        get { return result.hasSpecHeading; }
      }
      public string SpecHeading {
        get { return result.SpecHeading; }
        set { SetSpecHeading(value); }
      }
      public Builder SetSpecHeading(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSpecHeading = true;
        result.specHeading_ = value;
        return this;
      }
      public Builder ClearSpecHeading() {
        PrepareBuilder();
        result.hasSpecHeading = false;
        result.specHeading_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::main.ProtoItem> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::main.ProtoItem GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::main.ProtoItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::main.ProtoItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::main.ProtoItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::main.ProtoItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::main.ProtoItem> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
      
      public bool HasIsTableDriven {
        get { return result.hasIsTableDriven; }
      }
      public bool IsTableDriven {
        get { return result.IsTableDriven; }
        set { SetIsTableDriven(value); }
      }
      public Builder SetIsTableDriven(bool value) {
        PrepareBuilder();
        result.hasIsTableDriven = true;
        result.isTableDriven_ = value;
        return this;
      }
      public Builder ClearIsTableDriven() {
        PrepareBuilder();
        result.hasIsTableDriven = false;
        result.isTableDriven_ = false;
        return this;
      }
      
      public bool HasPreHookFailure {
       get { return result.hasPreHookFailure; }
      }
      public global::main.ProtoHookFailure PreHookFailure {
        get { return result.PreHookFailure; }
        set { SetPreHookFailure(value); }
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = value;
        return this;
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPreHookFailure &&
            result.preHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.preHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.preHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.preHookFailure_ = value;
        }
        result.hasPreHookFailure = true;
        return this;
      }
      public Builder ClearPreHookFailure() {
        PrepareBuilder();
        result.hasPreHookFailure = false;
        result.preHookFailure_ = null;
        return this;
      }
      
      public bool HasPostHookFailure {
       get { return result.hasPostHookFailure; }
      }
      public global::main.ProtoHookFailure PostHookFailure {
        get { return result.PostHookFailure; }
        set { SetPostHookFailure(value); }
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = value;
        return this;
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPostHookFailure &&
            result.postHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.postHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.postHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.postHookFailure_ = value;
        }
        result.hasPostHookFailure = true;
        return this;
      }
      public Builder ClearPostHookFailure() {
        PrepareBuilder();
        result.hasPostHookFailure = false;
        result.postHookFailure_ = null;
        return this;
      }
      
      public bool HasFileName {
        get { return result.hasFileName; }
      }
      public string FileName {
        get { return result.FileName; }
        set { SetFileName(value); }
      }
      public Builder SetFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileName = true;
        result.fileName_ = value;
        return this;
      }
      public Builder ClearFileName() {
        PrepareBuilder();
        result.hasFileName = false;
        result.fileName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> TagsList {
        get { return PrepareBuilder().tags_; }
      }
      public int TagsCount {
        get { return result.TagsCount; }
      }
      public string GetTags(int index) {
        return result.GetTags(index);
      }
      public Builder SetTags(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_[index] = value;
        return this;
      }
      public Builder AddTags(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_.Add(value);
        return this;
      }
      public Builder AddRangeTags(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tags_.Add(values);
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.tags_.Clear();
        return this;
      }
    }
    static ProtoSpec() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoItem : pb::GeneratedMessage<ProtoItem, ProtoItem.Builder> {
    private ProtoItem() { }
    private static readonly ProtoItem defaultInstance = new ProtoItem().MakeReadOnly();
    private static readonly string[] _protoItemFieldNames = new string[] { "comment", "concept", "itemType", "scenario", "step", "table", "tableDrivenScenario" };
    private static readonly uint[] _protoItemFieldTags = new uint[] { 50, 26, 8, 34, 18, 58, 42 };
    public static ProtoItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoItem, ProtoItem.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoItem__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ItemType {
        Step = 1,
        Comment = 2,
        Concept = 3,
        Scenario = 4,
        TableDrivenScenario = 5,
        Table = 6,
      }
      
    }
    #endregion
    
    public const int ItemTypeFieldNumber = 1;
    private bool hasItemType;
    private global::main.ProtoItem.Types.ItemType itemType_ = global::main.ProtoItem.Types.ItemType.Step;
    public bool HasItemType {
      get { return hasItemType; }
    }
    public global::main.ProtoItem.Types.ItemType ItemType {
      get { return itemType_; }
    }
    
    public const int StepFieldNumber = 2;
    private bool hasStep;
    private global::main.ProtoStep step_;
    public bool HasStep {
      get { return hasStep; }
    }
    public global::main.ProtoStep Step {
      get { return step_ ?? global::main.ProtoStep.DefaultInstance; }
    }
    
    public const int ConceptFieldNumber = 3;
    private bool hasConcept;
    private global::main.ProtoConcept concept_;
    public bool HasConcept {
      get { return hasConcept; }
    }
    public global::main.ProtoConcept Concept {
      get { return concept_ ?? global::main.ProtoConcept.DefaultInstance; }
    }
    
    public const int ScenarioFieldNumber = 4;
    private bool hasScenario;
    private global::main.ProtoScenario scenario_;
    public bool HasScenario {
      get { return hasScenario; }
    }
    public global::main.ProtoScenario Scenario {
      get { return scenario_ ?? global::main.ProtoScenario.DefaultInstance; }
    }
    
    public const int TableDrivenScenarioFieldNumber = 5;
    private bool hasTableDrivenScenario;
    private global::main.ProtoTableDrivenScenario tableDrivenScenario_;
    public bool HasTableDrivenScenario {
      get { return hasTableDrivenScenario; }
    }
    public global::main.ProtoTableDrivenScenario TableDrivenScenario {
      get { return tableDrivenScenario_ ?? global::main.ProtoTableDrivenScenario.DefaultInstance; }
    }
    
    public const int CommentFieldNumber = 6;
    private bool hasComment;
    private global::main.ProtoComment comment_;
    public bool HasComment {
      get { return hasComment; }
    }
    public global::main.ProtoComment Comment {
      get { return comment_ ?? global::main.ProtoComment.DefaultInstance; }
    }
    
    public const int TableFieldNumber = 7;
    private bool hasTable;
    private global::main.ProtoTable table_;
    public bool HasTable {
      get { return hasTable; }
    }
    public global::main.ProtoTable Table {
      get { return table_ ?? global::main.ProtoTable.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasItemType) return false;
        if (HasStep) {
          if (!Step.IsInitialized) return false;
        }
        if (HasConcept) {
          if (!Concept.IsInitialized) return false;
        }
        if (HasScenario) {
          if (!Scenario.IsInitialized) return false;
        }
        if (HasTableDrivenScenario) {
          if (!TableDrivenScenario.IsInitialized) return false;
        }
        if (HasComment) {
          if (!Comment.IsInitialized) return false;
        }
        if (HasTable) {
          if (!Table.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoItemFieldNames;
      if (hasItemType) {
        output.WriteEnum(1, field_names[2], (int) ItemType, ItemType);
      }
      if (hasStep) {
        output.WriteMessage(2, field_names[4], Step);
      }
      if (hasConcept) {
        output.WriteMessage(3, field_names[1], Concept);
      }
      if (hasScenario) {
        output.WriteMessage(4, field_names[3], Scenario);
      }
      if (hasTableDrivenScenario) {
        output.WriteMessage(5, field_names[6], TableDrivenScenario);
      }
      if (hasComment) {
        output.WriteMessage(6, field_names[0], Comment);
      }
      if (hasTable) {
        output.WriteMessage(7, field_names[5], Table);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasItemType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ItemType);
        }
        if (hasStep) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Step);
        }
        if (hasConcept) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Concept);
        }
        if (hasScenario) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Scenario);
        }
        if (hasTableDrivenScenario) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, TableDrivenScenario);
        }
        if (hasComment) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, Comment);
        }
        if (hasTable) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, Table);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoItem result;
      
      private ProtoItem PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoItem original = result;
          result = new ProtoItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoItem.Descriptor; }
      }
      
      public override ProtoItem DefaultInstanceForType {
        get { return global::main.ProtoItem.DefaultInstance; }
      }
      
      public override ProtoItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoItem) {
          return MergeFrom((ProtoItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoItem other) {
        if (other == global::main.ProtoItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasItemType) {
          ItemType = other.ItemType;
        }
        if (other.HasStep) {
          MergeStep(other.Step);
        }
        if (other.HasConcept) {
          MergeConcept(other.Concept);
        }
        if (other.HasScenario) {
          MergeScenario(other.Scenario);
        }
        if (other.HasTableDrivenScenario) {
          MergeTableDrivenScenario(other.TableDrivenScenario);
        }
        if (other.HasComment) {
          MergeComment(other.Comment);
        }
        if (other.HasTable) {
          MergeTable(other.Table);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.itemType_, out unknown)) {
                result.hasItemType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              global::main.ProtoStep.Builder subBuilder = global::main.ProtoStep.CreateBuilder();
              if (result.hasStep) {
                subBuilder.MergeFrom(Step);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Step = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::main.ProtoConcept.Builder subBuilder = global::main.ProtoConcept.CreateBuilder();
              if (result.hasConcept) {
                subBuilder.MergeFrom(Concept);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Concept = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::main.ProtoScenario.Builder subBuilder = global::main.ProtoScenario.CreateBuilder();
              if (result.hasScenario) {
                subBuilder.MergeFrom(Scenario);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Scenario = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::main.ProtoTableDrivenScenario.Builder subBuilder = global::main.ProtoTableDrivenScenario.CreateBuilder();
              if (result.hasTableDrivenScenario) {
                subBuilder.MergeFrom(TableDrivenScenario);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TableDrivenScenario = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::main.ProtoComment.Builder subBuilder = global::main.ProtoComment.CreateBuilder();
              if (result.hasComment) {
                subBuilder.MergeFrom(Comment);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Comment = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::main.ProtoTable.Builder subBuilder = global::main.ProtoTable.CreateBuilder();
              if (result.hasTable) {
                subBuilder.MergeFrom(Table);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Table = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasItemType {
       get { return result.hasItemType; }
      }
      public global::main.ProtoItem.Types.ItemType ItemType {
        get { return result.ItemType; }
        set { SetItemType(value); }
      }
      public Builder SetItemType(global::main.ProtoItem.Types.ItemType value) {
        PrepareBuilder();
        result.hasItemType = true;
        result.itemType_ = value;
        return this;
      }
      public Builder ClearItemType() {
        PrepareBuilder();
        result.hasItemType = false;
        result.itemType_ = global::main.ProtoItem.Types.ItemType.Step;
        return this;
      }
      
      public bool HasStep {
       get { return result.hasStep; }
      }
      public global::main.ProtoStep Step {
        get { return result.Step; }
        set { SetStep(value); }
      }
      public Builder SetStep(global::main.ProtoStep value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = value;
        return this;
      }
      public Builder SetStep(global::main.ProtoStep.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStep = true;
        result.step_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStep(global::main.ProtoStep value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStep &&
            result.step_ != global::main.ProtoStep.DefaultInstance) {
            result.step_ = global::main.ProtoStep.CreateBuilder(result.step_).MergeFrom(value).BuildPartial();
        } else {
          result.step_ = value;
        }
        result.hasStep = true;
        return this;
      }
      public Builder ClearStep() {
        PrepareBuilder();
        result.hasStep = false;
        result.step_ = null;
        return this;
      }
      
      public bool HasConcept {
       get { return result.hasConcept; }
      }
      public global::main.ProtoConcept Concept {
        get { return result.Concept; }
        set { SetConcept(value); }
      }
      public Builder SetConcept(global::main.ProtoConcept value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConcept = true;
        result.concept_ = value;
        return this;
      }
      public Builder SetConcept(global::main.ProtoConcept.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConcept = true;
        result.concept_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConcept(global::main.ProtoConcept value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConcept &&
            result.concept_ != global::main.ProtoConcept.DefaultInstance) {
            result.concept_ = global::main.ProtoConcept.CreateBuilder(result.concept_).MergeFrom(value).BuildPartial();
        } else {
          result.concept_ = value;
        }
        result.hasConcept = true;
        return this;
      }
      public Builder ClearConcept() {
        PrepareBuilder();
        result.hasConcept = false;
        result.concept_ = null;
        return this;
      }
      
      public bool HasScenario {
       get { return result.hasScenario; }
      }
      public global::main.ProtoScenario Scenario {
        get { return result.Scenario; }
        set { SetScenario(value); }
      }
      public Builder SetScenario(global::main.ProtoScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenario = true;
        result.scenario_ = value;
        return this;
      }
      public Builder SetScenario(global::main.ProtoScenario.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScenario = true;
        result.scenario_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScenario(global::main.ProtoScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScenario &&
            result.scenario_ != global::main.ProtoScenario.DefaultInstance) {
            result.scenario_ = global::main.ProtoScenario.CreateBuilder(result.scenario_).MergeFrom(value).BuildPartial();
        } else {
          result.scenario_ = value;
        }
        result.hasScenario = true;
        return this;
      }
      public Builder ClearScenario() {
        PrepareBuilder();
        result.hasScenario = false;
        result.scenario_ = null;
        return this;
      }
      
      public bool HasTableDrivenScenario {
       get { return result.hasTableDrivenScenario; }
      }
      public global::main.ProtoTableDrivenScenario TableDrivenScenario {
        get { return result.TableDrivenScenario; }
        set { SetTableDrivenScenario(value); }
      }
      public Builder SetTableDrivenScenario(global::main.ProtoTableDrivenScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTableDrivenScenario = true;
        result.tableDrivenScenario_ = value;
        return this;
      }
      public Builder SetTableDrivenScenario(global::main.ProtoTableDrivenScenario.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTableDrivenScenario = true;
        result.tableDrivenScenario_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTableDrivenScenario(global::main.ProtoTableDrivenScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTableDrivenScenario &&
            result.tableDrivenScenario_ != global::main.ProtoTableDrivenScenario.DefaultInstance) {
            result.tableDrivenScenario_ = global::main.ProtoTableDrivenScenario.CreateBuilder(result.tableDrivenScenario_).MergeFrom(value).BuildPartial();
        } else {
          result.tableDrivenScenario_ = value;
        }
        result.hasTableDrivenScenario = true;
        return this;
      }
      public Builder ClearTableDrivenScenario() {
        PrepareBuilder();
        result.hasTableDrivenScenario = false;
        result.tableDrivenScenario_ = null;
        return this;
      }
      
      public bool HasComment {
       get { return result.hasComment; }
      }
      public global::main.ProtoComment Comment {
        get { return result.Comment; }
        set { SetComment(value); }
      }
      public Builder SetComment(global::main.ProtoComment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasComment = true;
        result.comment_ = value;
        return this;
      }
      public Builder SetComment(global::main.ProtoComment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasComment = true;
        result.comment_ = builderForValue.Build();
        return this;
      }
      public Builder MergeComment(global::main.ProtoComment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasComment &&
            result.comment_ != global::main.ProtoComment.DefaultInstance) {
            result.comment_ = global::main.ProtoComment.CreateBuilder(result.comment_).MergeFrom(value).BuildPartial();
        } else {
          result.comment_ = value;
        }
        result.hasComment = true;
        return this;
      }
      public Builder ClearComment() {
        PrepareBuilder();
        result.hasComment = false;
        result.comment_ = null;
        return this;
      }
      
      public bool HasTable {
       get { return result.hasTable; }
      }
      public global::main.ProtoTable Table {
        get { return result.Table; }
        set { SetTable(value); }
      }
      public Builder SetTable(global::main.ProtoTable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTable = true;
        result.table_ = value;
        return this;
      }
      public Builder SetTable(global::main.ProtoTable.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTable = true;
        result.table_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTable(global::main.ProtoTable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTable &&
            result.table_ != global::main.ProtoTable.DefaultInstance) {
            result.table_ = global::main.ProtoTable.CreateBuilder(result.table_).MergeFrom(value).BuildPartial();
        } else {
          result.table_ = value;
        }
        result.hasTable = true;
        return this;
      }
      public Builder ClearTable() {
        PrepareBuilder();
        result.hasTable = false;
        result.table_ = null;
        return this;
      }
    }
    static ProtoItem() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoScenario : pb::GeneratedMessage<ProtoScenario, ProtoScenario.Builder> {
    private ProtoScenario() { }
    private static readonly ProtoScenario defaultInstance = new ProtoScenario().MakeReadOnly();
    private static readonly string[] _protoScenarioFieldNames = new string[] { "contexts", "executionTime", "failed", "postHookFailure", "preHookFailure", "scenarioHeading", "scenarioItems", "tags" };
    private static readonly uint[] _protoScenarioFieldTags = new uint[] { 26, 64, 16, 50, 42, 10, 34, 58 };
    public static ProtoScenario DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoScenario DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoScenario ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoScenario__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoScenario, ProtoScenario.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoScenario__FieldAccessorTable; }
    }
    
    public const int ScenarioHeadingFieldNumber = 1;
    private bool hasScenarioHeading;
    private string scenarioHeading_ = "";
    public bool HasScenarioHeading {
      get { return hasScenarioHeading; }
    }
    public string ScenarioHeading {
      get { return scenarioHeading_; }
    }
    
    public const int FailedFieldNumber = 2;
    private bool hasFailed;
    private bool failed_;
    public bool HasFailed {
      get { return hasFailed; }
    }
    public bool Failed {
      get { return failed_; }
    }
    
    public const int ContextsFieldNumber = 3;
    private pbc::PopsicleList<global::main.ProtoItem> contexts_ = new pbc::PopsicleList<global::main.ProtoItem>();
    public scg::IList<global::main.ProtoItem> ContextsList {
      get { return contexts_; }
    }
    public int ContextsCount {
      get { return contexts_.Count; }
    }
    public global::main.ProtoItem GetContexts(int index) {
      return contexts_[index];
    }
    
    public const int ScenarioItemsFieldNumber = 4;
    private pbc::PopsicleList<global::main.ProtoItem> scenarioItems_ = new pbc::PopsicleList<global::main.ProtoItem>();
    public scg::IList<global::main.ProtoItem> ScenarioItemsList {
      get { return scenarioItems_; }
    }
    public int ScenarioItemsCount {
      get { return scenarioItems_.Count; }
    }
    public global::main.ProtoItem GetScenarioItems(int index) {
      return scenarioItems_[index];
    }
    
    public const int PreHookFailureFieldNumber = 5;
    private bool hasPreHookFailure;
    private global::main.ProtoHookFailure preHookFailure_;
    public bool HasPreHookFailure {
      get { return hasPreHookFailure; }
    }
    public global::main.ProtoHookFailure PreHookFailure {
      get { return preHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int PostHookFailureFieldNumber = 6;
    private bool hasPostHookFailure;
    private global::main.ProtoHookFailure postHookFailure_;
    public bool HasPostHookFailure {
      get { return hasPostHookFailure; }
    }
    public global::main.ProtoHookFailure PostHookFailure {
      get { return postHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int TagsFieldNumber = 7;
    private pbc::PopsicleList<string> tags_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TagsList {
      get { return pbc::Lists.AsReadOnly(tags_); }
    }
    public int TagsCount {
      get { return tags_.Count; }
    }
    public string GetTags(int index) {
      return tags_[index];
    }
    
    public const int ExecutionTimeFieldNumber = 8;
    private bool hasExecutionTime;
    private long executionTime_;
    public bool HasExecutionTime {
      get { return hasExecutionTime; }
    }
    public long ExecutionTime {
      get { return executionTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasScenarioHeading) return false;
        if (!hasFailed) return false;
        foreach (global::main.ProtoItem element in ContextsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::main.ProtoItem element in ScenarioItemsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasPreHookFailure) {
          if (!PreHookFailure.IsInitialized) return false;
        }
        if (HasPostHookFailure) {
          if (!PostHookFailure.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoScenarioFieldNames;
      if (hasScenarioHeading) {
        output.WriteString(1, field_names[5], ScenarioHeading);
      }
      if (hasFailed) {
        output.WriteBool(2, field_names[2], Failed);
      }
      if (contexts_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], contexts_);
      }
      if (scenarioItems_.Count > 0) {
        output.WriteMessageArray(4, field_names[6], scenarioItems_);
      }
      if (hasPreHookFailure) {
        output.WriteMessage(5, field_names[4], PreHookFailure);
      }
      if (hasPostHookFailure) {
        output.WriteMessage(6, field_names[3], PostHookFailure);
      }
      if (tags_.Count > 0) {
        output.WriteStringArray(7, field_names[7], tags_);
      }
      if (hasExecutionTime) {
        output.WriteInt64(8, field_names[1], ExecutionTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasScenarioHeading) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ScenarioHeading);
        }
        if (hasFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Failed);
        }
        foreach (global::main.ProtoItem element in ContextsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::main.ProtoItem element in ScenarioItemsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        if (hasPreHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, PreHookFailure);
        }
        if (hasPostHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, PostHookFailure);
        }
        {
          int dataSize = 0;
          foreach (string element in TagsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tags_.Count;
        }
        if (hasExecutionTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(8, ExecutionTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoScenario ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoScenario ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoScenario ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoScenario ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoScenario ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoScenario ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoScenario ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoScenario ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoScenario ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoScenario ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoScenario MakeReadOnly() {
      contexts_.MakeReadOnly();
      scenarioItems_.MakeReadOnly();
      tags_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoScenario prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoScenario, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoScenario cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoScenario result;
      
      private ProtoScenario PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoScenario original = result;
          result = new ProtoScenario();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoScenario MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoScenario.Descriptor; }
      }
      
      public override ProtoScenario DefaultInstanceForType {
        get { return global::main.ProtoScenario.DefaultInstance; }
      }
      
      public override ProtoScenario BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoScenario) {
          return MergeFrom((ProtoScenario) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoScenario other) {
        if (other == global::main.ProtoScenario.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasScenarioHeading) {
          ScenarioHeading = other.ScenarioHeading;
        }
        if (other.HasFailed) {
          Failed = other.Failed;
        }
        if (other.contexts_.Count != 0) {
          result.contexts_.Add(other.contexts_);
        }
        if (other.scenarioItems_.Count != 0) {
          result.scenarioItems_.Add(other.scenarioItems_);
        }
        if (other.HasPreHookFailure) {
          MergePreHookFailure(other.PreHookFailure);
        }
        if (other.HasPostHookFailure) {
          MergePostHookFailure(other.PostHookFailure);
        }
        if (other.tags_.Count != 0) {
          result.tags_.Add(other.tags_);
        }
        if (other.HasExecutionTime) {
          ExecutionTime = other.ExecutionTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoScenarioFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoScenarioFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasScenarioHeading = input.ReadString(ref result.scenarioHeading_);
              break;
            }
            case 16: {
              result.hasFailed = input.ReadBool(ref result.failed_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.contexts_, global::main.ProtoItem.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.scenarioItems_, global::main.ProtoItem.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPreHookFailure) {
                subBuilder.MergeFrom(PreHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PreHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPostHookFailure) {
                subBuilder.MergeFrom(PostHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PostHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              input.ReadStringArray(tag, field_name, result.tags_);
              break;
            }
            case 64: {
              result.hasExecutionTime = input.ReadInt64(ref result.executionTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasScenarioHeading {
        get { return result.hasScenarioHeading; }
      }
      public string ScenarioHeading {
        get { return result.ScenarioHeading; }
        set { SetScenarioHeading(value); }
      }
      public Builder SetScenarioHeading(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenarioHeading = true;
        result.scenarioHeading_ = value;
        return this;
      }
      public Builder ClearScenarioHeading() {
        PrepareBuilder();
        result.hasScenarioHeading = false;
        result.scenarioHeading_ = "";
        return this;
      }
      
      public bool HasFailed {
        get { return result.hasFailed; }
      }
      public bool Failed {
        get { return result.Failed; }
        set { SetFailed(value); }
      }
      public Builder SetFailed(bool value) {
        PrepareBuilder();
        result.hasFailed = true;
        result.failed_ = value;
        return this;
      }
      public Builder ClearFailed() {
        PrepareBuilder();
        result.hasFailed = false;
        result.failed_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::main.ProtoItem> ContextsList {
        get { return PrepareBuilder().contexts_; }
      }
      public int ContextsCount {
        get { return result.ContextsCount; }
      }
      public global::main.ProtoItem GetContexts(int index) {
        return result.GetContexts(index);
      }
      public Builder SetContexts(int index, global::main.ProtoItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contexts_[index] = value;
        return this;
      }
      public Builder SetContexts(int index, global::main.ProtoItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contexts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContexts(global::main.ProtoItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contexts_.Add(value);
        return this;
      }
      public Builder AddContexts(global::main.ProtoItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contexts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContexts(scg::IEnumerable<global::main.ProtoItem> values) {
        PrepareBuilder();
        result.contexts_.Add(values);
        return this;
      }
      public Builder ClearContexts() {
        PrepareBuilder();
        result.contexts_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::main.ProtoItem> ScenarioItemsList {
        get { return PrepareBuilder().scenarioItems_; }
      }
      public int ScenarioItemsCount {
        get { return result.ScenarioItemsCount; }
      }
      public global::main.ProtoItem GetScenarioItems(int index) {
        return result.GetScenarioItems(index);
      }
      public Builder SetScenarioItems(int index, global::main.ProtoItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.scenarioItems_[index] = value;
        return this;
      }
      public Builder SetScenarioItems(int index, global::main.ProtoItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.scenarioItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddScenarioItems(global::main.ProtoItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.scenarioItems_.Add(value);
        return this;
      }
      public Builder AddScenarioItems(global::main.ProtoItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.scenarioItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeScenarioItems(scg::IEnumerable<global::main.ProtoItem> values) {
        PrepareBuilder();
        result.scenarioItems_.Add(values);
        return this;
      }
      public Builder ClearScenarioItems() {
        PrepareBuilder();
        result.scenarioItems_.Clear();
        return this;
      }
      
      public bool HasPreHookFailure {
       get { return result.hasPreHookFailure; }
      }
      public global::main.ProtoHookFailure PreHookFailure {
        get { return result.PreHookFailure; }
        set { SetPreHookFailure(value); }
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = value;
        return this;
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPreHookFailure &&
            result.preHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.preHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.preHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.preHookFailure_ = value;
        }
        result.hasPreHookFailure = true;
        return this;
      }
      public Builder ClearPreHookFailure() {
        PrepareBuilder();
        result.hasPreHookFailure = false;
        result.preHookFailure_ = null;
        return this;
      }
      
      public bool HasPostHookFailure {
       get { return result.hasPostHookFailure; }
      }
      public global::main.ProtoHookFailure PostHookFailure {
        get { return result.PostHookFailure; }
        set { SetPostHookFailure(value); }
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = value;
        return this;
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPostHookFailure &&
            result.postHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.postHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.postHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.postHookFailure_ = value;
        }
        result.hasPostHookFailure = true;
        return this;
      }
      public Builder ClearPostHookFailure() {
        PrepareBuilder();
        result.hasPostHookFailure = false;
        result.postHookFailure_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<string> TagsList {
        get { return PrepareBuilder().tags_; }
      }
      public int TagsCount {
        get { return result.TagsCount; }
      }
      public string GetTags(int index) {
        return result.GetTags(index);
      }
      public Builder SetTags(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_[index] = value;
        return this;
      }
      public Builder AddTags(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_.Add(value);
        return this;
      }
      public Builder AddRangeTags(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tags_.Add(values);
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.tags_.Clear();
        return this;
      }
      
      public bool HasExecutionTime {
        get { return result.hasExecutionTime; }
      }
      public long ExecutionTime {
        get { return result.ExecutionTime; }
        set { SetExecutionTime(value); }
      }
      public Builder SetExecutionTime(long value) {
        PrepareBuilder();
        result.hasExecutionTime = true;
        result.executionTime_ = value;
        return this;
      }
      public Builder ClearExecutionTime() {
        PrepareBuilder();
        result.hasExecutionTime = false;
        result.executionTime_ = 0L;
        return this;
      }
    }
    static ProtoScenario() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoTableDrivenScenario : pb::GeneratedMessage<ProtoTableDrivenScenario, ProtoTableDrivenScenario.Builder> {
    private ProtoTableDrivenScenario() { }
    private static readonly ProtoTableDrivenScenario defaultInstance = new ProtoTableDrivenScenario().MakeReadOnly();
    private static readonly string[] _protoTableDrivenScenarioFieldNames = new string[] { "scenarios" };
    private static readonly uint[] _protoTableDrivenScenarioFieldTags = new uint[] { 10 };
    public static ProtoTableDrivenScenario DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTableDrivenScenario DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTableDrivenScenario ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoTableDrivenScenario__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTableDrivenScenario, ProtoTableDrivenScenario.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoTableDrivenScenario__FieldAccessorTable; }
    }
    
    public const int ScenariosFieldNumber = 1;
    private pbc::PopsicleList<global::main.ProtoScenario> scenarios_ = new pbc::PopsicleList<global::main.ProtoScenario>();
    public scg::IList<global::main.ProtoScenario> ScenariosList {
      get { return scenarios_; }
    }
    public int ScenariosCount {
      get { return scenarios_.Count; }
    }
    public global::main.ProtoScenario GetScenarios(int index) {
      return scenarios_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::main.ProtoScenario element in ScenariosList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTableDrivenScenarioFieldNames;
      if (scenarios_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], scenarios_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::main.ProtoScenario element in ScenariosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTableDrivenScenario ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTableDrivenScenario ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTableDrivenScenario MakeReadOnly() {
      scenarios_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTableDrivenScenario prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoTableDrivenScenario, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTableDrivenScenario cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTableDrivenScenario result;
      
      private ProtoTableDrivenScenario PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTableDrivenScenario original = result;
          result = new ProtoTableDrivenScenario();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTableDrivenScenario MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoTableDrivenScenario.Descriptor; }
      }
      
      public override ProtoTableDrivenScenario DefaultInstanceForType {
        get { return global::main.ProtoTableDrivenScenario.DefaultInstance; }
      }
      
      public override ProtoTableDrivenScenario BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTableDrivenScenario) {
          return MergeFrom((ProtoTableDrivenScenario) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTableDrivenScenario other) {
        if (other == global::main.ProtoTableDrivenScenario.DefaultInstance) return this;
        PrepareBuilder();
        if (other.scenarios_.Count != 0) {
          result.scenarios_.Add(other.scenarios_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTableDrivenScenarioFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTableDrivenScenarioFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.scenarios_, global::main.ProtoScenario.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::main.ProtoScenario> ScenariosList {
        get { return PrepareBuilder().scenarios_; }
      }
      public int ScenariosCount {
        get { return result.ScenariosCount; }
      }
      public global::main.ProtoScenario GetScenarios(int index) {
        return result.GetScenarios(index);
      }
      public Builder SetScenarios(int index, global::main.ProtoScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.scenarios_[index] = value;
        return this;
      }
      public Builder SetScenarios(int index, global::main.ProtoScenario.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.scenarios_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddScenarios(global::main.ProtoScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.scenarios_.Add(value);
        return this;
      }
      public Builder AddScenarios(global::main.ProtoScenario.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.scenarios_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeScenarios(scg::IEnumerable<global::main.ProtoScenario> values) {
        PrepareBuilder();
        result.scenarios_.Add(values);
        return this;
      }
      public Builder ClearScenarios() {
        PrepareBuilder();
        result.scenarios_.Clear();
        return this;
      }
    }
    static ProtoTableDrivenScenario() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoStep : pb::GeneratedMessage<ProtoStep, ProtoStep.Builder> {
    private ProtoStep() { }
    private static readonly ProtoStep defaultInstance = new ProtoStep().MakeReadOnly();
    private static readonly string[] _protoStepFieldNames = new string[] { "actualText", "fragments", "parsedText", "stepExecutionResult" };
    private static readonly uint[] _protoStepFieldTags = new uint[] { 10, 26, 18, 34 };
    public static ProtoStep DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoStep DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoStep ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoStep__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoStep, ProtoStep.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoStep__FieldAccessorTable; }
    }
    
    public const int ActualTextFieldNumber = 1;
    private bool hasActualText;
    private string actualText_ = "";
    public bool HasActualText {
      get { return hasActualText; }
    }
    public string ActualText {
      get { return actualText_; }
    }
    
    public const int ParsedTextFieldNumber = 2;
    private bool hasParsedText;
    private string parsedText_ = "";
    public bool HasParsedText {
      get { return hasParsedText; }
    }
    public string ParsedText {
      get { return parsedText_; }
    }
    
    public const int FragmentsFieldNumber = 3;
    private pbc::PopsicleList<global::main.Fragment> fragments_ = new pbc::PopsicleList<global::main.Fragment>();
    public scg::IList<global::main.Fragment> FragmentsList {
      get { return fragments_; }
    }
    public int FragmentsCount {
      get { return fragments_.Count; }
    }
    public global::main.Fragment GetFragments(int index) {
      return fragments_[index];
    }
    
    public const int StepExecutionResultFieldNumber = 4;
    private bool hasStepExecutionResult;
    private global::main.ProtoStepExecutionResult stepExecutionResult_;
    public bool HasStepExecutionResult {
      get { return hasStepExecutionResult; }
    }
    public global::main.ProtoStepExecutionResult StepExecutionResult {
      get { return stepExecutionResult_ ?? global::main.ProtoStepExecutionResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasActualText) return false;
        if (!hasParsedText) return false;
        foreach (global::main.Fragment element in FragmentsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasStepExecutionResult) {
          if (!StepExecutionResult.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoStepFieldNames;
      if (hasActualText) {
        output.WriteString(1, field_names[0], ActualText);
      }
      if (hasParsedText) {
        output.WriteString(2, field_names[2], ParsedText);
      }
      if (fragments_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], fragments_);
      }
      if (hasStepExecutionResult) {
        output.WriteMessage(4, field_names[3], StepExecutionResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasActualText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, ActualText);
        }
        if (hasParsedText) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ParsedText);
        }
        foreach (global::main.Fragment element in FragmentsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasStepExecutionResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, StepExecutionResult);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoStep ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoStep ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoStep ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoStep ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoStep ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoStep ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoStep ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoStep ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoStep ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoStep ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoStep MakeReadOnly() {
      fragments_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoStep prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoStep, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoStep cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoStep result;
      
      private ProtoStep PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoStep original = result;
          result = new ProtoStep();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoStep MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoStep.Descriptor; }
      }
      
      public override ProtoStep DefaultInstanceForType {
        get { return global::main.ProtoStep.DefaultInstance; }
      }
      
      public override ProtoStep BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoStep) {
          return MergeFrom((ProtoStep) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoStep other) {
        if (other == global::main.ProtoStep.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasActualText) {
          ActualText = other.ActualText;
        }
        if (other.HasParsedText) {
          ParsedText = other.ParsedText;
        }
        if (other.fragments_.Count != 0) {
          result.fragments_.Add(other.fragments_);
        }
        if (other.HasStepExecutionResult) {
          MergeStepExecutionResult(other.StepExecutionResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoStepFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoStepFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasActualText = input.ReadString(ref result.actualText_);
              break;
            }
            case 18: {
              result.hasParsedText = input.ReadString(ref result.parsedText_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.fragments_, global::main.Fragment.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              global::main.ProtoStepExecutionResult.Builder subBuilder = global::main.ProtoStepExecutionResult.CreateBuilder();
              if (result.hasStepExecutionResult) {
                subBuilder.MergeFrom(StepExecutionResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              StepExecutionResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasActualText {
        get { return result.hasActualText; }
      }
      public string ActualText {
        get { return result.ActualText; }
        set { SetActualText(value); }
      }
      public Builder SetActualText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasActualText = true;
        result.actualText_ = value;
        return this;
      }
      public Builder ClearActualText() {
        PrepareBuilder();
        result.hasActualText = false;
        result.actualText_ = "";
        return this;
      }
      
      public bool HasParsedText {
        get { return result.hasParsedText; }
      }
      public string ParsedText {
        get { return result.ParsedText; }
        set { SetParsedText(value); }
      }
      public Builder SetParsedText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParsedText = true;
        result.parsedText_ = value;
        return this;
      }
      public Builder ClearParsedText() {
        PrepareBuilder();
        result.hasParsedText = false;
        result.parsedText_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::main.Fragment> FragmentsList {
        get { return PrepareBuilder().fragments_; }
      }
      public int FragmentsCount {
        get { return result.FragmentsCount; }
      }
      public global::main.Fragment GetFragments(int index) {
        return result.GetFragments(index);
      }
      public Builder SetFragments(int index, global::main.Fragment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fragments_[index] = value;
        return this;
      }
      public Builder SetFragments(int index, global::main.Fragment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fragments_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFragments(global::main.Fragment value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fragments_.Add(value);
        return this;
      }
      public Builder AddFragments(global::main.Fragment.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fragments_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFragments(scg::IEnumerable<global::main.Fragment> values) {
        PrepareBuilder();
        result.fragments_.Add(values);
        return this;
      }
      public Builder ClearFragments() {
        PrepareBuilder();
        result.fragments_.Clear();
        return this;
      }
      
      public bool HasStepExecutionResult {
       get { return result.hasStepExecutionResult; }
      }
      public global::main.ProtoStepExecutionResult StepExecutionResult {
        get { return result.StepExecutionResult; }
        set { SetStepExecutionResult(value); }
      }
      public Builder SetStepExecutionResult(global::main.ProtoStepExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepExecutionResult = true;
        result.stepExecutionResult_ = value;
        return this;
      }
      public Builder SetStepExecutionResult(global::main.ProtoStepExecutionResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStepExecutionResult = true;
        result.stepExecutionResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStepExecutionResult(global::main.ProtoStepExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStepExecutionResult &&
            result.stepExecutionResult_ != global::main.ProtoStepExecutionResult.DefaultInstance) {
            result.stepExecutionResult_ = global::main.ProtoStepExecutionResult.CreateBuilder(result.stepExecutionResult_).MergeFrom(value).BuildPartial();
        } else {
          result.stepExecutionResult_ = value;
        }
        result.hasStepExecutionResult = true;
        return this;
      }
      public Builder ClearStepExecutionResult() {
        PrepareBuilder();
        result.hasStepExecutionResult = false;
        result.stepExecutionResult_ = null;
        return this;
      }
    }
    static ProtoStep() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoConcept : pb::GeneratedMessage<ProtoConcept, ProtoConcept.Builder> {
    private ProtoConcept() { }
    private static readonly ProtoConcept defaultInstance = new ProtoConcept().MakeReadOnly();
    private static readonly string[] _protoConceptFieldNames = new string[] { "conceptExecutionResult", "conceptStep", "steps" };
    private static readonly uint[] _protoConceptFieldTags = new uint[] { 26, 10, 18 };
    public static ProtoConcept DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoConcept DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoConcept ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoConcept__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoConcept, ProtoConcept.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoConcept__FieldAccessorTable; }
    }
    
    public const int ConceptStepFieldNumber = 1;
    private bool hasConceptStep;
    private global::main.ProtoStep conceptStep_;
    public bool HasConceptStep {
      get { return hasConceptStep; }
    }
    public global::main.ProtoStep ConceptStep {
      get { return conceptStep_ ?? global::main.ProtoStep.DefaultInstance; }
    }
    
    public const int StepsFieldNumber = 2;
    private pbc::PopsicleList<global::main.ProtoStep> steps_ = new pbc::PopsicleList<global::main.ProtoStep>();
    public scg::IList<global::main.ProtoStep> StepsList {
      get { return steps_; }
    }
    public int StepsCount {
      get { return steps_.Count; }
    }
    public global::main.ProtoStep GetSteps(int index) {
      return steps_[index];
    }
    
    public const int ConceptExecutionResultFieldNumber = 3;
    private bool hasConceptExecutionResult;
    private global::main.ProtoStepExecutionResult conceptExecutionResult_;
    public bool HasConceptExecutionResult {
      get { return hasConceptExecutionResult; }
    }
    public global::main.ProtoStepExecutionResult ConceptExecutionResult {
      get { return conceptExecutionResult_ ?? global::main.ProtoStepExecutionResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConceptStep) return false;
        if (!ConceptStep.IsInitialized) return false;
        foreach (global::main.ProtoStep element in StepsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasConceptExecutionResult) {
          if (!ConceptExecutionResult.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoConceptFieldNames;
      if (hasConceptStep) {
        output.WriteMessage(1, field_names[1], ConceptStep);
      }
      if (steps_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], steps_);
      }
      if (hasConceptExecutionResult) {
        output.WriteMessage(3, field_names[0], ConceptExecutionResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasConceptStep) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ConceptStep);
        }
        foreach (global::main.ProtoStep element in StepsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        if (hasConceptExecutionResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, ConceptExecutionResult);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoConcept ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoConcept ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoConcept ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoConcept ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoConcept ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoConcept ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoConcept ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoConcept ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoConcept ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoConcept ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoConcept MakeReadOnly() {
      steps_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoConcept prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoConcept, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoConcept cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoConcept result;
      
      private ProtoConcept PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoConcept original = result;
          result = new ProtoConcept();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoConcept MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoConcept.Descriptor; }
      }
      
      public override ProtoConcept DefaultInstanceForType {
        get { return global::main.ProtoConcept.DefaultInstance; }
      }
      
      public override ProtoConcept BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoConcept) {
          return MergeFrom((ProtoConcept) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoConcept other) {
        if (other == global::main.ProtoConcept.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConceptStep) {
          MergeConceptStep(other.ConceptStep);
        }
        if (other.steps_.Count != 0) {
          result.steps_.Add(other.steps_);
        }
        if (other.HasConceptExecutionResult) {
          MergeConceptExecutionResult(other.ConceptExecutionResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoConceptFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoConceptFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::main.ProtoStep.Builder subBuilder = global::main.ProtoStep.CreateBuilder();
              if (result.hasConceptStep) {
                subBuilder.MergeFrom(ConceptStep);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConceptStep = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.steps_, global::main.ProtoStep.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              global::main.ProtoStepExecutionResult.Builder subBuilder = global::main.ProtoStepExecutionResult.CreateBuilder();
              if (result.hasConceptExecutionResult) {
                subBuilder.MergeFrom(ConceptExecutionResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ConceptExecutionResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConceptStep {
       get { return result.hasConceptStep; }
      }
      public global::main.ProtoStep ConceptStep {
        get { return result.ConceptStep; }
        set { SetConceptStep(value); }
      }
      public Builder SetConceptStep(global::main.ProtoStep value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConceptStep = true;
        result.conceptStep_ = value;
        return this;
      }
      public Builder SetConceptStep(global::main.ProtoStep.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConceptStep = true;
        result.conceptStep_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConceptStep(global::main.ProtoStep value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConceptStep &&
            result.conceptStep_ != global::main.ProtoStep.DefaultInstance) {
            result.conceptStep_ = global::main.ProtoStep.CreateBuilder(result.conceptStep_).MergeFrom(value).BuildPartial();
        } else {
          result.conceptStep_ = value;
        }
        result.hasConceptStep = true;
        return this;
      }
      public Builder ClearConceptStep() {
        PrepareBuilder();
        result.hasConceptStep = false;
        result.conceptStep_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::main.ProtoStep> StepsList {
        get { return PrepareBuilder().steps_; }
      }
      public int StepsCount {
        get { return result.StepsCount; }
      }
      public global::main.ProtoStep GetSteps(int index) {
        return result.GetSteps(index);
      }
      public Builder SetSteps(int index, global::main.ProtoStep value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.steps_[index] = value;
        return this;
      }
      public Builder SetSteps(int index, global::main.ProtoStep.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.steps_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSteps(global::main.ProtoStep value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.steps_.Add(value);
        return this;
      }
      public Builder AddSteps(global::main.ProtoStep.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.steps_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSteps(scg::IEnumerable<global::main.ProtoStep> values) {
        PrepareBuilder();
        result.steps_.Add(values);
        return this;
      }
      public Builder ClearSteps() {
        PrepareBuilder();
        result.steps_.Clear();
        return this;
      }
      
      public bool HasConceptExecutionResult {
       get { return result.hasConceptExecutionResult; }
      }
      public global::main.ProtoStepExecutionResult ConceptExecutionResult {
        get { return result.ConceptExecutionResult; }
        set { SetConceptExecutionResult(value); }
      }
      public Builder SetConceptExecutionResult(global::main.ProtoStepExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConceptExecutionResult = true;
        result.conceptExecutionResult_ = value;
        return this;
      }
      public Builder SetConceptExecutionResult(global::main.ProtoStepExecutionResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasConceptExecutionResult = true;
        result.conceptExecutionResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeConceptExecutionResult(global::main.ProtoStepExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasConceptExecutionResult &&
            result.conceptExecutionResult_ != global::main.ProtoStepExecutionResult.DefaultInstance) {
            result.conceptExecutionResult_ = global::main.ProtoStepExecutionResult.CreateBuilder(result.conceptExecutionResult_).MergeFrom(value).BuildPartial();
        } else {
          result.conceptExecutionResult_ = value;
        }
        result.hasConceptExecutionResult = true;
        return this;
      }
      public Builder ClearConceptExecutionResult() {
        PrepareBuilder();
        result.hasConceptExecutionResult = false;
        result.conceptExecutionResult_ = null;
        return this;
      }
    }
    static ProtoConcept() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoTags : pb::GeneratedMessage<ProtoTags, ProtoTags.Builder> {
    private ProtoTags() { }
    private static readonly ProtoTags defaultInstance = new ProtoTags().MakeReadOnly();
    private static readonly string[] _protoTagsFieldNames = new string[] { "tags" };
    private static readonly uint[] _protoTagsFieldTags = new uint[] { 10 };
    public static ProtoTags DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTags DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTags ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoTags__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTags, ProtoTags.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoTags__FieldAccessorTable; }
    }
    
    public const int TagsFieldNumber = 1;
    private pbc::PopsicleList<string> tags_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TagsList {
      get { return pbc::Lists.AsReadOnly(tags_); }
    }
    public int TagsCount {
      get { return tags_.Count; }
    }
    public string GetTags(int index) {
      return tags_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTagsFieldNames;
      if (tags_.Count > 0) {
        output.WriteStringArray(1, field_names[0], tags_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in TagsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * tags_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTags ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTags ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTags ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTags ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTags ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTags ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTags ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTags ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTags ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTags ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTags MakeReadOnly() {
      tags_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTags prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoTags, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTags cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTags result;
      
      private ProtoTags PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTags original = result;
          result = new ProtoTags();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTags MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoTags.Descriptor; }
      }
      
      public override ProtoTags DefaultInstanceForType {
        get { return global::main.ProtoTags.DefaultInstance; }
      }
      
      public override ProtoTags BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTags) {
          return MergeFrom((ProtoTags) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTags other) {
        if (other == global::main.ProtoTags.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tags_.Count != 0) {
          result.tags_.Add(other.tags_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTagsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTagsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.tags_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> TagsList {
        get { return PrepareBuilder().tags_; }
      }
      public int TagsCount {
        get { return result.TagsCount; }
      }
      public string GetTags(int index) {
        return result.GetTags(index);
      }
      public Builder SetTags(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_[index] = value;
        return this;
      }
      public Builder AddTags(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tags_.Add(value);
        return this;
      }
      public Builder AddRangeTags(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tags_.Add(values);
        return this;
      }
      public Builder ClearTags() {
        PrepareBuilder();
        result.tags_.Clear();
        return this;
      }
    }
    static ProtoTags() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Fragment : pb::GeneratedMessage<Fragment, Fragment.Builder> {
    private Fragment() { }
    private static readonly Fragment defaultInstance = new Fragment().MakeReadOnly();
    private static readonly string[] _fragmentFieldNames = new string[] { "fragmentType", "parameter", "text" };
    private static readonly uint[] _fragmentFieldTags = new uint[] { 8, 26, 18 };
    public static Fragment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Fragment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Fragment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_Fragment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Fragment, Fragment.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_Fragment__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum FragmentType {
        Text = 1,
        Parameter = 2,
      }
      
    }
    #endregion
    
    public const int FragmentTypeFieldNumber = 1;
    private bool hasFragmentType;
    private global::main.Fragment.Types.FragmentType fragmentType_ = global::main.Fragment.Types.FragmentType.Text;
    public bool HasFragmentType {
      get { return hasFragmentType; }
    }
    public global::main.Fragment.Types.FragmentType FragmentType {
      get { return fragmentType_; }
    }
    
    public const int TextFieldNumber = 2;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int ParameterFieldNumber = 3;
    private bool hasParameter;
    private global::main.Parameter parameter_;
    public bool HasParameter {
      get { return hasParameter; }
    }
    public global::main.Parameter Parameter {
      get { return parameter_ ?? global::main.Parameter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFragmentType) return false;
        if (HasParameter) {
          if (!Parameter.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _fragmentFieldNames;
      if (hasFragmentType) {
        output.WriteEnum(1, field_names[0], (int) FragmentType, FragmentType);
      }
      if (hasText) {
        output.WriteString(2, field_names[2], Text);
      }
      if (hasParameter) {
        output.WriteMessage(3, field_names[1], Parameter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFragmentType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) FragmentType);
        }
        if (hasText) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Text);
        }
        if (hasParameter) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Parameter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Fragment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Fragment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Fragment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Fragment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Fragment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Fragment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Fragment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Fragment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Fragment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Fragment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Fragment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Fragment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Fragment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Fragment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Fragment result;
      
      private Fragment PrepareBuilder() {
        if (resultIsReadOnly) {
          Fragment original = result;
          result = new Fragment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Fragment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.Fragment.Descriptor; }
      }
      
      public override Fragment DefaultInstanceForType {
        get { return global::main.Fragment.DefaultInstance; }
      }
      
      public override Fragment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Fragment) {
          return MergeFrom((Fragment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Fragment other) {
        if (other == global::main.Fragment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFragmentType) {
          FragmentType = other.FragmentType;
        }
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.HasParameter) {
          MergeParameter(other.Parameter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fragmentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fragmentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.fragmentType_, out unknown)) {
                result.hasFragmentType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 26: {
              global::main.Parameter.Builder subBuilder = global::main.Parameter.CreateBuilder();
              if (result.hasParameter) {
                subBuilder.MergeFrom(Parameter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Parameter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFragmentType {
       get { return result.hasFragmentType; }
      }
      public global::main.Fragment.Types.FragmentType FragmentType {
        get { return result.FragmentType; }
        set { SetFragmentType(value); }
      }
      public Builder SetFragmentType(global::main.Fragment.Types.FragmentType value) {
        PrepareBuilder();
        result.hasFragmentType = true;
        result.fragmentType_ = value;
        return this;
      }
      public Builder ClearFragmentType() {
        PrepareBuilder();
        result.hasFragmentType = false;
        result.fragmentType_ = global::main.Fragment.Types.FragmentType.Text;
        return this;
      }
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasParameter {
       get { return result.hasParameter; }
      }
      public global::main.Parameter Parameter {
        get { return result.Parameter; }
        set { SetParameter(value); }
      }
      public Builder SetParameter(global::main.Parameter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParameter = true;
        result.parameter_ = value;
        return this;
      }
      public Builder SetParameter(global::main.Parameter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasParameter = true;
        result.parameter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeParameter(global::main.Parameter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasParameter &&
            result.parameter_ != global::main.Parameter.DefaultInstance) {
            result.parameter_ = global::main.Parameter.CreateBuilder(result.parameter_).MergeFrom(value).BuildPartial();
        } else {
          result.parameter_ = value;
        }
        result.hasParameter = true;
        return this;
      }
      public Builder ClearParameter() {
        PrepareBuilder();
        result.hasParameter = false;
        result.parameter_ = null;
        return this;
      }
    }
    static Fragment() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Parameter : pb::GeneratedMessage<Parameter, Parameter.Builder> {
    private Parameter() { }
    private static readonly Parameter defaultInstance = new Parameter().MakeReadOnly();
    private static readonly string[] _parameterFieldNames = new string[] { "name", "parameterType", "table", "value" };
    private static readonly uint[] _parameterFieldTags = new uint[] { 26, 8, 34, 18 };
    public static Parameter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Parameter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Parameter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_Parameter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Parameter, Parameter.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_Parameter__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ParameterType {
        Static = 1,
        Dynamic = 2,
        Special_String = 3,
        Special_Table = 4,
        Table = 5,
      }
      
    }
    #endregion
    
    public const int ParameterTypeFieldNumber = 1;
    private bool hasParameterType;
    private global::main.Parameter.Types.ParameterType parameterType_ = global::main.Parameter.Types.ParameterType.Static;
    public bool HasParameterType {
      get { return hasParameterType; }
    }
    public global::main.Parameter.Types.ParameterType ParameterType {
      get { return parameterType_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TableFieldNumber = 4;
    private bool hasTable;
    private global::main.ProtoTable table_;
    public bool HasTable {
      get { return hasTable; }
    }
    public global::main.ProtoTable Table {
      get { return table_ ?? global::main.ProtoTable.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasParameterType) return false;
        if (HasTable) {
          if (!Table.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _parameterFieldNames;
      if (hasParameterType) {
        output.WriteEnum(1, field_names[1], (int) ParameterType, ParameterType);
      }
      if (hasValue) {
        output.WriteString(2, field_names[3], Value);
      }
      if (hasName) {
        output.WriteString(3, field_names[0], Name);
      }
      if (hasTable) {
        output.WriteMessage(4, field_names[2], Table);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasParameterType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ParameterType);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Value);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Name);
        }
        if (hasTable) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, Table);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Parameter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Parameter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Parameter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Parameter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Parameter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Parameter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Parameter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Parameter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Parameter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Parameter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Parameter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Parameter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Parameter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Parameter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Parameter result;
      
      private Parameter PrepareBuilder() {
        if (resultIsReadOnly) {
          Parameter original = result;
          result = new Parameter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Parameter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.Parameter.Descriptor; }
      }
      
      public override Parameter DefaultInstanceForType {
        get { return global::main.Parameter.DefaultInstance; }
      }
      
      public override Parameter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Parameter) {
          return MergeFrom((Parameter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Parameter other) {
        if (other == global::main.Parameter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasParameterType) {
          ParameterType = other.ParameterType;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasTable) {
          MergeTable(other.Table);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_parameterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _parameterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.parameterType_, out unknown)) {
                result.hasParameterType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              global::main.ProtoTable.Builder subBuilder = global::main.ProtoTable.CreateBuilder();
              if (result.hasTable) {
                subBuilder.MergeFrom(Table);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Table = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasParameterType {
       get { return result.hasParameterType; }
      }
      public global::main.Parameter.Types.ParameterType ParameterType {
        get { return result.ParameterType; }
        set { SetParameterType(value); }
      }
      public Builder SetParameterType(global::main.Parameter.Types.ParameterType value) {
        PrepareBuilder();
        result.hasParameterType = true;
        result.parameterType_ = value;
        return this;
      }
      public Builder ClearParameterType() {
        PrepareBuilder();
        result.hasParameterType = false;
        result.parameterType_ = global::main.Parameter.Types.ParameterType.Static;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasTable {
       get { return result.hasTable; }
      }
      public global::main.ProtoTable Table {
        get { return result.Table; }
        set { SetTable(value); }
      }
      public Builder SetTable(global::main.ProtoTable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTable = true;
        result.table_ = value;
        return this;
      }
      public Builder SetTable(global::main.ProtoTable.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTable = true;
        result.table_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTable(global::main.ProtoTable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTable &&
            result.table_ != global::main.ProtoTable.DefaultInstance) {
            result.table_ = global::main.ProtoTable.CreateBuilder(result.table_).MergeFrom(value).BuildPartial();
        } else {
          result.table_ = value;
        }
        result.hasTable = true;
        return this;
      }
      public Builder ClearTable() {
        PrepareBuilder();
        result.hasTable = false;
        result.table_ = null;
        return this;
      }
    }
    static Parameter() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoComment : pb::GeneratedMessage<ProtoComment, ProtoComment.Builder> {
    private ProtoComment() { }
    private static readonly ProtoComment defaultInstance = new ProtoComment().MakeReadOnly();
    private static readonly string[] _protoCommentFieldNames = new string[] { "text" };
    private static readonly uint[] _protoCommentFieldTags = new uint[] { 10 };
    public static ProtoComment DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoComment DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoComment ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoComment__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoComment, ProtoComment.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoComment__FieldAccessorTable; }
    }
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasText) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoCommentFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[0], Text);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Text);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoComment ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoComment ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoComment ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoComment ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoComment ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoComment ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoComment ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoComment ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoComment ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoComment ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoComment MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoComment prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoComment, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoComment cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoComment result;
      
      private ProtoComment PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoComment original = result;
          result = new ProtoComment();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoComment MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoComment.Descriptor; }
      }
      
      public override ProtoComment DefaultInstanceForType {
        get { return global::main.ProtoComment.DefaultInstance; }
      }
      
      public override ProtoComment BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoComment) {
          return MergeFrom((ProtoComment) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoComment other) {
        if (other == global::main.ProtoComment.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoCommentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoCommentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
    }
    static ProtoComment() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoTable : pb::GeneratedMessage<ProtoTable, ProtoTable.Builder> {
    private ProtoTable() { }
    private static readonly ProtoTable defaultInstance = new ProtoTable().MakeReadOnly();
    private static readonly string[] _protoTableFieldNames = new string[] { "headers", "rows" };
    private static readonly uint[] _protoTableFieldTags = new uint[] { 10, 18 };
    public static ProtoTable DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTable DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTable ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoTable__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTable, ProtoTable.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoTable__FieldAccessorTable; }
    }
    
    public const int HeadersFieldNumber = 1;
    private bool hasHeaders;
    private global::main.ProtoTableRow headers_;
    public bool HasHeaders {
      get { return hasHeaders; }
    }
    public global::main.ProtoTableRow Headers {
      get { return headers_ ?? global::main.ProtoTableRow.DefaultInstance; }
    }
    
    public const int RowsFieldNumber = 2;
    private pbc::PopsicleList<global::main.ProtoTableRow> rows_ = new pbc::PopsicleList<global::main.ProtoTableRow>();
    public scg::IList<global::main.ProtoTableRow> RowsList {
      get { return rows_; }
    }
    public int RowsCount {
      get { return rows_.Count; }
    }
    public global::main.ProtoTableRow GetRows(int index) {
      return rows_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHeaders) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTableFieldNames;
      if (hasHeaders) {
        output.WriteMessage(1, field_names[0], Headers);
      }
      if (rows_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], rows_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHeaders) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Headers);
        }
        foreach (global::main.ProtoTableRow element in RowsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTable ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTable ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTable ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTable ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTable ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTable ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTable ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTable ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTable ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTable ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTable MakeReadOnly() {
      rows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTable prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoTable, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTable cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTable result;
      
      private ProtoTable PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTable original = result;
          result = new ProtoTable();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTable MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoTable.Descriptor; }
      }
      
      public override ProtoTable DefaultInstanceForType {
        get { return global::main.ProtoTable.DefaultInstance; }
      }
      
      public override ProtoTable BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTable) {
          return MergeFrom((ProtoTable) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTable other) {
        if (other == global::main.ProtoTable.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHeaders) {
          MergeHeaders(other.Headers);
        }
        if (other.rows_.Count != 0) {
          result.rows_.Add(other.rows_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTableFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTableFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::main.ProtoTableRow.Builder subBuilder = global::main.ProtoTableRow.CreateBuilder();
              if (result.hasHeaders) {
                subBuilder.MergeFrom(Headers);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Headers = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.rows_, global::main.ProtoTableRow.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHeaders {
       get { return result.hasHeaders; }
      }
      public global::main.ProtoTableRow Headers {
        get { return result.Headers; }
        set { SetHeaders(value); }
      }
      public Builder SetHeaders(global::main.ProtoTableRow value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHeaders = true;
        result.headers_ = value;
        return this;
      }
      public Builder SetHeaders(global::main.ProtoTableRow.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHeaders = true;
        result.headers_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHeaders(global::main.ProtoTableRow value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHeaders &&
            result.headers_ != global::main.ProtoTableRow.DefaultInstance) {
            result.headers_ = global::main.ProtoTableRow.CreateBuilder(result.headers_).MergeFrom(value).BuildPartial();
        } else {
          result.headers_ = value;
        }
        result.hasHeaders = true;
        return this;
      }
      public Builder ClearHeaders() {
        PrepareBuilder();
        result.hasHeaders = false;
        result.headers_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::main.ProtoTableRow> RowsList {
        get { return PrepareBuilder().rows_; }
      }
      public int RowsCount {
        get { return result.RowsCount; }
      }
      public global::main.ProtoTableRow GetRows(int index) {
        return result.GetRows(index);
      }
      public Builder SetRows(int index, global::main.ProtoTableRow value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_[index] = value;
        return this;
      }
      public Builder SetRows(int index, global::main.ProtoTableRow.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRows(global::main.ProtoTableRow value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.rows_.Add(value);
        return this;
      }
      public Builder AddRows(global::main.ProtoTableRow.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.rows_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRows(scg::IEnumerable<global::main.ProtoTableRow> values) {
        PrepareBuilder();
        result.rows_.Add(values);
        return this;
      }
      public Builder ClearRows() {
        PrepareBuilder();
        result.rows_.Clear();
        return this;
      }
    }
    static ProtoTable() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoTableRow : pb::GeneratedMessage<ProtoTableRow, ProtoTableRow.Builder> {
    private ProtoTableRow() { }
    private static readonly ProtoTableRow defaultInstance = new ProtoTableRow().MakeReadOnly();
    private static readonly string[] _protoTableRowFieldNames = new string[] { "cells" };
    private static readonly uint[] _protoTableRowFieldTags = new uint[] { 10 };
    public static ProtoTableRow DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoTableRow DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoTableRow ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoTableRow__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoTableRow, ProtoTableRow.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoTableRow__FieldAccessorTable; }
    }
    
    public const int CellsFieldNumber = 1;
    private pbc::PopsicleList<string> cells_ = new pbc::PopsicleList<string>();
    public scg::IList<string> CellsList {
      get { return pbc::Lists.AsReadOnly(cells_); }
    }
    public int CellsCount {
      get { return cells_.Count; }
    }
    public string GetCells(int index) {
      return cells_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoTableRowFieldNames;
      if (cells_.Count > 0) {
        output.WriteStringArray(1, field_names[0], cells_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in CellsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * cells_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoTableRow ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoTableRow ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoTableRow ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoTableRow ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoTableRow MakeReadOnly() {
      cells_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoTableRow prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoTableRow, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoTableRow cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoTableRow result;
      
      private ProtoTableRow PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoTableRow original = result;
          result = new ProtoTableRow();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoTableRow MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoTableRow.Descriptor; }
      }
      
      public override ProtoTableRow DefaultInstanceForType {
        get { return global::main.ProtoTableRow.DefaultInstance; }
      }
      
      public override ProtoTableRow BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoTableRow) {
          return MergeFrom((ProtoTableRow) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoTableRow other) {
        if (other == global::main.ProtoTableRow.DefaultInstance) return this;
        PrepareBuilder();
        if (other.cells_.Count != 0) {
          result.cells_.Add(other.cells_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoTableRowFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoTableRowFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.cells_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> CellsList {
        get { return PrepareBuilder().cells_; }
      }
      public int CellsCount {
        get { return result.CellsCount; }
      }
      public string GetCells(int index) {
        return result.GetCells(index);
      }
      public Builder SetCells(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_[index] = value;
        return this;
      }
      public Builder AddCells(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.cells_.Add(value);
        return this;
      }
      public Builder AddRangeCells(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.cells_.Add(values);
        return this;
      }
      public Builder ClearCells() {
        PrepareBuilder();
        result.cells_.Clear();
        return this;
      }
    }
    static ProtoTableRow() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoStepExecutionResult : pb::GeneratedMessage<ProtoStepExecutionResult, ProtoStepExecutionResult.Builder> {
    private ProtoStepExecutionResult() { }
    private static readonly ProtoStepExecutionResult defaultInstance = new ProtoStepExecutionResult().MakeReadOnly();
    private static readonly string[] _protoStepExecutionResultFieldNames = new string[] { "executionResult", "postHookFailure", "preHookFailure" };
    private static readonly uint[] _protoStepExecutionResultFieldTags = new uint[] { 10, 26, 18 };
    public static ProtoStepExecutionResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoStepExecutionResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoStepExecutionResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoStepExecutionResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoStepExecutionResult, ProtoStepExecutionResult.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoStepExecutionResult__FieldAccessorTable; }
    }
    
    public const int ExecutionResultFieldNumber = 1;
    private bool hasExecutionResult;
    private global::main.ProtoExecutionResult executionResult_;
    public bool HasExecutionResult {
      get { return hasExecutionResult; }
    }
    public global::main.ProtoExecutionResult ExecutionResult {
      get { return executionResult_ ?? global::main.ProtoExecutionResult.DefaultInstance; }
    }
    
    public const int PreHookFailureFieldNumber = 2;
    private bool hasPreHookFailure;
    private global::main.ProtoHookFailure preHookFailure_;
    public bool HasPreHookFailure {
      get { return hasPreHookFailure; }
    }
    public global::main.ProtoHookFailure PreHookFailure {
      get { return preHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int PostHookFailureFieldNumber = 3;
    private bool hasPostHookFailure;
    private global::main.ProtoHookFailure postHookFailure_;
    public bool HasPostHookFailure {
      get { return hasPostHookFailure; }
    }
    public global::main.ProtoHookFailure PostHookFailure {
      get { return postHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasExecutionResult) return false;
        if (!ExecutionResult.IsInitialized) return false;
        if (HasPreHookFailure) {
          if (!PreHookFailure.IsInitialized) return false;
        }
        if (HasPostHookFailure) {
          if (!PostHookFailure.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoStepExecutionResultFieldNames;
      if (hasExecutionResult) {
        output.WriteMessage(1, field_names[0], ExecutionResult);
      }
      if (hasPreHookFailure) {
        output.WriteMessage(2, field_names[2], PreHookFailure);
      }
      if (hasPostHookFailure) {
        output.WriteMessage(3, field_names[1], PostHookFailure);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasExecutionResult) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ExecutionResult);
        }
        if (hasPreHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PreHookFailure);
        }
        if (hasPostHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, PostHookFailure);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoStepExecutionResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoStepExecutionResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoStepExecutionResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoStepExecutionResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoStepExecutionResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoStepExecutionResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoStepExecutionResult result;
      
      private ProtoStepExecutionResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoStepExecutionResult original = result;
          result = new ProtoStepExecutionResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoStepExecutionResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoStepExecutionResult.Descriptor; }
      }
      
      public override ProtoStepExecutionResult DefaultInstanceForType {
        get { return global::main.ProtoStepExecutionResult.DefaultInstance; }
      }
      
      public override ProtoStepExecutionResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoStepExecutionResult) {
          return MergeFrom((ProtoStepExecutionResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoStepExecutionResult other) {
        if (other == global::main.ProtoStepExecutionResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasExecutionResult) {
          MergeExecutionResult(other.ExecutionResult);
        }
        if (other.HasPreHookFailure) {
          MergePreHookFailure(other.PreHookFailure);
        }
        if (other.HasPostHookFailure) {
          MergePostHookFailure(other.PostHookFailure);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoStepExecutionResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoStepExecutionResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::main.ProtoExecutionResult.Builder subBuilder = global::main.ProtoExecutionResult.CreateBuilder();
              if (result.hasExecutionResult) {
                subBuilder.MergeFrom(ExecutionResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ExecutionResult = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPreHookFailure) {
                subBuilder.MergeFrom(PreHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PreHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPostHookFailure) {
                subBuilder.MergeFrom(PostHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PostHookFailure = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasExecutionResult {
       get { return result.hasExecutionResult; }
      }
      public global::main.ProtoExecutionResult ExecutionResult {
        get { return result.ExecutionResult; }
        set { SetExecutionResult(value); }
      }
      public Builder SetExecutionResult(global::main.ProtoExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecutionResult = true;
        result.executionResult_ = value;
        return this;
      }
      public Builder SetExecutionResult(global::main.ProtoExecutionResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExecutionResult = true;
        result.executionResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExecutionResult(global::main.ProtoExecutionResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExecutionResult &&
            result.executionResult_ != global::main.ProtoExecutionResult.DefaultInstance) {
            result.executionResult_ = global::main.ProtoExecutionResult.CreateBuilder(result.executionResult_).MergeFrom(value).BuildPartial();
        } else {
          result.executionResult_ = value;
        }
        result.hasExecutionResult = true;
        return this;
      }
      public Builder ClearExecutionResult() {
        PrepareBuilder();
        result.hasExecutionResult = false;
        result.executionResult_ = null;
        return this;
      }
      
      public bool HasPreHookFailure {
       get { return result.hasPreHookFailure; }
      }
      public global::main.ProtoHookFailure PreHookFailure {
        get { return result.PreHookFailure; }
        set { SetPreHookFailure(value); }
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = value;
        return this;
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPreHookFailure &&
            result.preHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.preHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.preHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.preHookFailure_ = value;
        }
        result.hasPreHookFailure = true;
        return this;
      }
      public Builder ClearPreHookFailure() {
        PrepareBuilder();
        result.hasPreHookFailure = false;
        result.preHookFailure_ = null;
        return this;
      }
      
      public bool HasPostHookFailure {
       get { return result.hasPostHookFailure; }
      }
      public global::main.ProtoHookFailure PostHookFailure {
        get { return result.PostHookFailure; }
        set { SetPostHookFailure(value); }
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = value;
        return this;
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPostHookFailure &&
            result.postHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.postHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.postHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.postHookFailure_ = value;
        }
        result.hasPostHookFailure = true;
        return this;
      }
      public Builder ClearPostHookFailure() {
        PrepareBuilder();
        result.hasPostHookFailure = false;
        result.postHookFailure_ = null;
        return this;
      }
    }
    static ProtoStepExecutionResult() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoExecutionResult : pb::GeneratedMessage<ProtoExecutionResult, ProtoExecutionResult.Builder> {
    private ProtoExecutionResult() { }
    private static readonly ProtoExecutionResult defaultInstance = new ProtoExecutionResult().MakeReadOnly();
    private static readonly string[] _protoExecutionResultFieldNames = new string[] { "errorMessage", "executionTime", "failed", "recoverableError", "screenShot", "stackTrace" };
    private static readonly uint[] _protoExecutionResultFieldTags = new uint[] { 26, 48, 8, 16, 42, 34 };
    public static ProtoExecutionResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoExecutionResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoExecutionResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoExecutionResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoExecutionResult, ProtoExecutionResult.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoExecutionResult__FieldAccessorTable; }
    }
    
    public const int FailedFieldNumber = 1;
    private bool hasFailed;
    private bool failed_;
    public bool HasFailed {
      get { return hasFailed; }
    }
    public bool Failed {
      get { return failed_; }
    }
    
    public const int RecoverableErrorFieldNumber = 2;
    private bool hasRecoverableError;
    private bool recoverableError_;
    public bool HasRecoverableError {
      get { return hasRecoverableError; }
    }
    public bool RecoverableError {
      get { return recoverableError_; }
    }
    
    public const int ErrorMessageFieldNumber = 3;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public const int StackTraceFieldNumber = 4;
    private bool hasStackTrace;
    private string stackTrace_ = "";
    public bool HasStackTrace {
      get { return hasStackTrace; }
    }
    public string StackTrace {
      get { return stackTrace_; }
    }
    
    public const int ScreenShotFieldNumber = 5;
    private bool hasScreenShot;
    private pb::ByteString screenShot_ = pb::ByteString.Empty;
    public bool HasScreenShot {
      get { return hasScreenShot; }
    }
    public pb::ByteString ScreenShot {
      get { return screenShot_; }
    }
    
    public const int ExecutionTimeFieldNumber = 6;
    private bool hasExecutionTime;
    private long executionTime_;
    public bool HasExecutionTime {
      get { return hasExecutionTime; }
    }
    public long ExecutionTime {
      get { return executionTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFailed) return false;
        if (!hasExecutionTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoExecutionResultFieldNames;
      if (hasFailed) {
        output.WriteBool(1, field_names[2], Failed);
      }
      if (hasRecoverableError) {
        output.WriteBool(2, field_names[3], RecoverableError);
      }
      if (hasErrorMessage) {
        output.WriteString(3, field_names[0], ErrorMessage);
      }
      if (hasStackTrace) {
        output.WriteString(4, field_names[5], StackTrace);
      }
      if (hasScreenShot) {
        output.WriteBytes(5, field_names[4], ScreenShot);
      }
      if (hasExecutionTime) {
        output.WriteInt64(6, field_names[1], ExecutionTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Failed);
        }
        if (hasRecoverableError) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, RecoverableError);
        }
        if (hasErrorMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(3, ErrorMessage);
        }
        if (hasStackTrace) {
          size += pb::CodedOutputStream.ComputeStringSize(4, StackTrace);
        }
        if (hasScreenShot) {
          size += pb::CodedOutputStream.ComputeBytesSize(5, ScreenShot);
        }
        if (hasExecutionTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(6, ExecutionTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoExecutionResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoExecutionResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoExecutionResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoExecutionResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoExecutionResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoExecutionResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoExecutionResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoExecutionResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoExecutionResult result;
      
      private ProtoExecutionResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoExecutionResult original = result;
          result = new ProtoExecutionResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoExecutionResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoExecutionResult.Descriptor; }
      }
      
      public override ProtoExecutionResult DefaultInstanceForType {
        get { return global::main.ProtoExecutionResult.DefaultInstance; }
      }
      
      public override ProtoExecutionResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoExecutionResult) {
          return MergeFrom((ProtoExecutionResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoExecutionResult other) {
        if (other == global::main.ProtoExecutionResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFailed) {
          Failed = other.Failed;
        }
        if (other.HasRecoverableError) {
          RecoverableError = other.RecoverableError;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        if (other.HasStackTrace) {
          StackTrace = other.StackTrace;
        }
        if (other.HasScreenShot) {
          ScreenShot = other.ScreenShot;
        }
        if (other.HasExecutionTime) {
          ExecutionTime = other.ExecutionTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoExecutionResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoExecutionResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFailed = input.ReadBool(ref result.failed_);
              break;
            }
            case 16: {
              result.hasRecoverableError = input.ReadBool(ref result.recoverableError_);
              break;
            }
            case 26: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
            case 34: {
              result.hasStackTrace = input.ReadString(ref result.stackTrace_);
              break;
            }
            case 42: {
              result.hasScreenShot = input.ReadBytes(ref result.screenShot_);
              break;
            }
            case 48: {
              result.hasExecutionTime = input.ReadInt64(ref result.executionTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFailed {
        get { return result.hasFailed; }
      }
      public bool Failed {
        get { return result.Failed; }
        set { SetFailed(value); }
      }
      public Builder SetFailed(bool value) {
        PrepareBuilder();
        result.hasFailed = true;
        result.failed_ = value;
        return this;
      }
      public Builder ClearFailed() {
        PrepareBuilder();
        result.hasFailed = false;
        result.failed_ = false;
        return this;
      }
      
      public bool HasRecoverableError {
        get { return result.hasRecoverableError; }
      }
      public bool RecoverableError {
        get { return result.RecoverableError; }
        set { SetRecoverableError(value); }
      }
      public Builder SetRecoverableError(bool value) {
        PrepareBuilder();
        result.hasRecoverableError = true;
        result.recoverableError_ = value;
        return this;
      }
      public Builder ClearRecoverableError() {
        PrepareBuilder();
        result.hasRecoverableError = false;
        result.recoverableError_ = false;
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
      
      public bool HasStackTrace {
        get { return result.hasStackTrace; }
      }
      public string StackTrace {
        get { return result.StackTrace; }
        set { SetStackTrace(value); }
      }
      public Builder SetStackTrace(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStackTrace = true;
        result.stackTrace_ = value;
        return this;
      }
      public Builder ClearStackTrace() {
        PrepareBuilder();
        result.hasStackTrace = false;
        result.stackTrace_ = "";
        return this;
      }
      
      public bool HasScreenShot {
        get { return result.hasScreenShot; }
      }
      public pb::ByteString ScreenShot {
        get { return result.ScreenShot; }
        set { SetScreenShot(value); }
      }
      public Builder SetScreenShot(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScreenShot = true;
        result.screenShot_ = value;
        return this;
      }
      public Builder ClearScreenShot() {
        PrepareBuilder();
        result.hasScreenShot = false;
        result.screenShot_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasExecutionTime {
        get { return result.hasExecutionTime; }
      }
      public long ExecutionTime {
        get { return result.ExecutionTime; }
        set { SetExecutionTime(value); }
      }
      public Builder SetExecutionTime(long value) {
        PrepareBuilder();
        result.hasExecutionTime = true;
        result.executionTime_ = value;
        return this;
      }
      public Builder ClearExecutionTime() {
        PrepareBuilder();
        result.hasExecutionTime = false;
        result.executionTime_ = 0L;
        return this;
      }
    }
    static ProtoExecutionResult() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoHookFailure : pb::GeneratedMessage<ProtoHookFailure, ProtoHookFailure.Builder> {
    private ProtoHookFailure() { }
    private static readonly ProtoHookFailure defaultInstance = new ProtoHookFailure().MakeReadOnly();
    private static readonly string[] _protoHookFailureFieldNames = new string[] { "errorMessage", "screenShot", "stackTrace" };
    private static readonly uint[] _protoHookFailureFieldTags = new uint[] { 18, 26, 10 };
    public static ProtoHookFailure DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoHookFailure DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoHookFailure ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoHookFailure__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoHookFailure, ProtoHookFailure.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoHookFailure__FieldAccessorTable; }
    }
    
    public const int StackTraceFieldNumber = 1;
    private bool hasStackTrace;
    private string stackTrace_ = "";
    public bool HasStackTrace {
      get { return hasStackTrace; }
    }
    public string StackTrace {
      get { return stackTrace_; }
    }
    
    public const int ErrorMessageFieldNumber = 2;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public const int ScreenShotFieldNumber = 3;
    private bool hasScreenShot;
    private pb::ByteString screenShot_ = pb::ByteString.Empty;
    public bool HasScreenShot {
      get { return hasScreenShot; }
    }
    public pb::ByteString ScreenShot {
      get { return screenShot_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStackTrace) return false;
        if (!hasErrorMessage) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoHookFailureFieldNames;
      if (hasStackTrace) {
        output.WriteString(1, field_names[2], StackTrace);
      }
      if (hasErrorMessage) {
        output.WriteString(2, field_names[0], ErrorMessage);
      }
      if (hasScreenShot) {
        output.WriteBytes(3, field_names[1], ScreenShot);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStackTrace) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StackTrace);
        }
        if (hasErrorMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ErrorMessage);
        }
        if (hasScreenShot) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, ScreenShot);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoHookFailure ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoHookFailure ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoHookFailure ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoHookFailure ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoHookFailure MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoHookFailure prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoHookFailure, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoHookFailure cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoHookFailure result;
      
      private ProtoHookFailure PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoHookFailure original = result;
          result = new ProtoHookFailure();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoHookFailure MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoHookFailure.Descriptor; }
      }
      
      public override ProtoHookFailure DefaultInstanceForType {
        get { return global::main.ProtoHookFailure.DefaultInstance; }
      }
      
      public override ProtoHookFailure BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoHookFailure) {
          return MergeFrom((ProtoHookFailure) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoHookFailure other) {
        if (other == global::main.ProtoHookFailure.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStackTrace) {
          StackTrace = other.StackTrace;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        if (other.HasScreenShot) {
          ScreenShot = other.ScreenShot;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoHookFailureFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoHookFailureFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStackTrace = input.ReadString(ref result.stackTrace_);
              break;
            }
            case 18: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
            case 26: {
              result.hasScreenShot = input.ReadBytes(ref result.screenShot_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStackTrace {
        get { return result.hasStackTrace; }
      }
      public string StackTrace {
        get { return result.StackTrace; }
        set { SetStackTrace(value); }
      }
      public Builder SetStackTrace(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStackTrace = true;
        result.stackTrace_ = value;
        return this;
      }
      public Builder ClearStackTrace() {
        PrepareBuilder();
        result.hasStackTrace = false;
        result.stackTrace_ = "";
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
      
      public bool HasScreenShot {
        get { return result.hasScreenShot; }
      }
      public pb::ByteString ScreenShot {
        get { return result.ScreenShot; }
        set { SetScreenShot(value); }
      }
      public Builder SetScreenShot(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScreenShot = true;
        result.screenShot_ = value;
        return this;
      }
      public Builder ClearScreenShot() {
        PrepareBuilder();
        result.hasScreenShot = false;
        result.screenShot_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ProtoHookFailure() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoSuiteResult : pb::GeneratedMessage<ProtoSuiteResult, ProtoSuiteResult.Builder> {
    private ProtoSuiteResult() { }
    private static readonly ProtoSuiteResult defaultInstance = new ProtoSuiteResult().MakeReadOnly();
    private static readonly string[] _protoSuiteResultFieldNames = new string[] { "executionTime", "failed", "postHookFailure", "preHookFailure", "specResults", "specsFailedCount", "successRate" };
    private static readonly uint[] _protoSuiteResultFieldTags = new uint[] { 48, 32, 26, 18, 10, 40, 61 };
    public static ProtoSuiteResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoSuiteResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoSuiteResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoSuiteResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoSuiteResult, ProtoSuiteResult.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoSuiteResult__FieldAccessorTable; }
    }
    
    public const int SpecResultsFieldNumber = 1;
    private pbc::PopsicleList<global::main.ProtoSpecResult> specResults_ = new pbc::PopsicleList<global::main.ProtoSpecResult>();
    public scg::IList<global::main.ProtoSpecResult> SpecResultsList {
      get { return specResults_; }
    }
    public int SpecResultsCount {
      get { return specResults_.Count; }
    }
    public global::main.ProtoSpecResult GetSpecResults(int index) {
      return specResults_[index];
    }
    
    public const int PreHookFailureFieldNumber = 2;
    private bool hasPreHookFailure;
    private global::main.ProtoHookFailure preHookFailure_;
    public bool HasPreHookFailure {
      get { return hasPreHookFailure; }
    }
    public global::main.ProtoHookFailure PreHookFailure {
      get { return preHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int PostHookFailureFieldNumber = 3;
    private bool hasPostHookFailure;
    private global::main.ProtoHookFailure postHookFailure_;
    public bool HasPostHookFailure {
      get { return hasPostHookFailure; }
    }
    public global::main.ProtoHookFailure PostHookFailure {
      get { return postHookFailure_ ?? global::main.ProtoHookFailure.DefaultInstance; }
    }
    
    public const int FailedFieldNumber = 4;
    private bool hasFailed;
    private bool failed_;
    public bool HasFailed {
      get { return hasFailed; }
    }
    public bool Failed {
      get { return failed_; }
    }
    
    public const int SpecsFailedCountFieldNumber = 5;
    private bool hasSpecsFailedCount;
    private int specsFailedCount_;
    public bool HasSpecsFailedCount {
      get { return hasSpecsFailedCount; }
    }
    public int SpecsFailedCount {
      get { return specsFailedCount_; }
    }
    
    public const int ExecutionTimeFieldNumber = 6;
    private bool hasExecutionTime;
    private long executionTime_;
    public bool HasExecutionTime {
      get { return hasExecutionTime; }
    }
    public long ExecutionTime {
      get { return executionTime_; }
    }
    
    public const int SuccessRateFieldNumber = 7;
    private bool hasSuccessRate;
    private float successRate_;
    public bool HasSuccessRate {
      get { return hasSuccessRate; }
    }
    public float SuccessRate {
      get { return successRate_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFailed) return false;
        if (!hasSpecsFailedCount) return false;
        if (!hasSuccessRate) return false;
        foreach (global::main.ProtoSpecResult element in SpecResultsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasPreHookFailure) {
          if (!PreHookFailure.IsInitialized) return false;
        }
        if (HasPostHookFailure) {
          if (!PostHookFailure.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoSuiteResultFieldNames;
      if (specResults_.Count > 0) {
        output.WriteMessageArray(1, field_names[4], specResults_);
      }
      if (hasPreHookFailure) {
        output.WriteMessage(2, field_names[3], PreHookFailure);
      }
      if (hasPostHookFailure) {
        output.WriteMessage(3, field_names[2], PostHookFailure);
      }
      if (hasFailed) {
        output.WriteBool(4, field_names[1], Failed);
      }
      if (hasSpecsFailedCount) {
        output.WriteInt32(5, field_names[5], SpecsFailedCount);
      }
      if (hasExecutionTime) {
        output.WriteInt64(6, field_names[0], ExecutionTime);
      }
      if (hasSuccessRate) {
        output.WriteFloat(7, field_names[6], SuccessRate);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::main.ProtoSpecResult element in SpecResultsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasPreHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PreHookFailure);
        }
        if (hasPostHookFailure) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, PostHookFailure);
        }
        if (hasFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, Failed);
        }
        if (hasSpecsFailedCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, SpecsFailedCount);
        }
        if (hasExecutionTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(6, ExecutionTime);
        }
        if (hasSuccessRate) {
          size += pb::CodedOutputStream.ComputeFloatSize(7, SuccessRate);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoSuiteResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoSuiteResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoSuiteResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoSuiteResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoSuiteResult MakeReadOnly() {
      specResults_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoSuiteResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoSuiteResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoSuiteResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoSuiteResult result;
      
      private ProtoSuiteResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoSuiteResult original = result;
          result = new ProtoSuiteResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoSuiteResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoSuiteResult.Descriptor; }
      }
      
      public override ProtoSuiteResult DefaultInstanceForType {
        get { return global::main.ProtoSuiteResult.DefaultInstance; }
      }
      
      public override ProtoSuiteResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoSuiteResult) {
          return MergeFrom((ProtoSuiteResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoSuiteResult other) {
        if (other == global::main.ProtoSuiteResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.specResults_.Count != 0) {
          result.specResults_.Add(other.specResults_);
        }
        if (other.HasPreHookFailure) {
          MergePreHookFailure(other.PreHookFailure);
        }
        if (other.HasPostHookFailure) {
          MergePostHookFailure(other.PostHookFailure);
        }
        if (other.HasFailed) {
          Failed = other.Failed;
        }
        if (other.HasSpecsFailedCount) {
          SpecsFailedCount = other.SpecsFailedCount;
        }
        if (other.HasExecutionTime) {
          ExecutionTime = other.ExecutionTime;
        }
        if (other.HasSuccessRate) {
          SuccessRate = other.SuccessRate;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoSuiteResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoSuiteResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.specResults_, global::main.ProtoSpecResult.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPreHookFailure) {
                subBuilder.MergeFrom(PreHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PreHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::main.ProtoHookFailure.Builder subBuilder = global::main.ProtoHookFailure.CreateBuilder();
              if (result.hasPostHookFailure) {
                subBuilder.MergeFrom(PostHookFailure);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PostHookFailure = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasFailed = input.ReadBool(ref result.failed_);
              break;
            }
            case 40: {
              result.hasSpecsFailedCount = input.ReadInt32(ref result.specsFailedCount_);
              break;
            }
            case 48: {
              result.hasExecutionTime = input.ReadInt64(ref result.executionTime_);
              break;
            }
            case 61: {
              result.hasSuccessRate = input.ReadFloat(ref result.successRate_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::main.ProtoSpecResult> SpecResultsList {
        get { return PrepareBuilder().specResults_; }
      }
      public int SpecResultsCount {
        get { return result.SpecResultsCount; }
      }
      public global::main.ProtoSpecResult GetSpecResults(int index) {
        return result.GetSpecResults(index);
      }
      public Builder SetSpecResults(int index, global::main.ProtoSpecResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.specResults_[index] = value;
        return this;
      }
      public Builder SetSpecResults(int index, global::main.ProtoSpecResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.specResults_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSpecResults(global::main.ProtoSpecResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.specResults_.Add(value);
        return this;
      }
      public Builder AddSpecResults(global::main.ProtoSpecResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.specResults_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSpecResults(scg::IEnumerable<global::main.ProtoSpecResult> values) {
        PrepareBuilder();
        result.specResults_.Add(values);
        return this;
      }
      public Builder ClearSpecResults() {
        PrepareBuilder();
        result.specResults_.Clear();
        return this;
      }
      
      public bool HasPreHookFailure {
       get { return result.hasPreHookFailure; }
      }
      public global::main.ProtoHookFailure PreHookFailure {
        get { return result.PreHookFailure; }
        set { SetPreHookFailure(value); }
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = value;
        return this;
      }
      public Builder SetPreHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPreHookFailure = true;
        result.preHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePreHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPreHookFailure &&
            result.preHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.preHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.preHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.preHookFailure_ = value;
        }
        result.hasPreHookFailure = true;
        return this;
      }
      public Builder ClearPreHookFailure() {
        PrepareBuilder();
        result.hasPreHookFailure = false;
        result.preHookFailure_ = null;
        return this;
      }
      
      public bool HasPostHookFailure {
       get { return result.hasPostHookFailure; }
      }
      public global::main.ProtoHookFailure PostHookFailure {
        get { return result.PostHookFailure; }
        set { SetPostHookFailure(value); }
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = value;
        return this;
      }
      public Builder SetPostHookFailure(global::main.ProtoHookFailure.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPostHookFailure = true;
        result.postHookFailure_ = builderForValue.Build();
        return this;
      }
      public Builder MergePostHookFailure(global::main.ProtoHookFailure value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPostHookFailure &&
            result.postHookFailure_ != global::main.ProtoHookFailure.DefaultInstance) {
            result.postHookFailure_ = global::main.ProtoHookFailure.CreateBuilder(result.postHookFailure_).MergeFrom(value).BuildPartial();
        } else {
          result.postHookFailure_ = value;
        }
        result.hasPostHookFailure = true;
        return this;
      }
      public Builder ClearPostHookFailure() {
        PrepareBuilder();
        result.hasPostHookFailure = false;
        result.postHookFailure_ = null;
        return this;
      }
      
      public bool HasFailed {
        get { return result.hasFailed; }
      }
      public bool Failed {
        get { return result.Failed; }
        set { SetFailed(value); }
      }
      public Builder SetFailed(bool value) {
        PrepareBuilder();
        result.hasFailed = true;
        result.failed_ = value;
        return this;
      }
      public Builder ClearFailed() {
        PrepareBuilder();
        result.hasFailed = false;
        result.failed_ = false;
        return this;
      }
      
      public bool HasSpecsFailedCount {
        get { return result.hasSpecsFailedCount; }
      }
      public int SpecsFailedCount {
        get { return result.SpecsFailedCount; }
        set { SetSpecsFailedCount(value); }
      }
      public Builder SetSpecsFailedCount(int value) {
        PrepareBuilder();
        result.hasSpecsFailedCount = true;
        result.specsFailedCount_ = value;
        return this;
      }
      public Builder ClearSpecsFailedCount() {
        PrepareBuilder();
        result.hasSpecsFailedCount = false;
        result.specsFailedCount_ = 0;
        return this;
      }
      
      public bool HasExecutionTime {
        get { return result.hasExecutionTime; }
      }
      public long ExecutionTime {
        get { return result.ExecutionTime; }
        set { SetExecutionTime(value); }
      }
      public Builder SetExecutionTime(long value) {
        PrepareBuilder();
        result.hasExecutionTime = true;
        result.executionTime_ = value;
        return this;
      }
      public Builder ClearExecutionTime() {
        PrepareBuilder();
        result.hasExecutionTime = false;
        result.executionTime_ = 0L;
        return this;
      }
      
      public bool HasSuccessRate {
        get { return result.hasSuccessRate; }
      }
      public float SuccessRate {
        get { return result.SuccessRate; }
        set { SetSuccessRate(value); }
      }
      public Builder SetSuccessRate(float value) {
        PrepareBuilder();
        result.hasSuccessRate = true;
        result.successRate_ = value;
        return this;
      }
      public Builder ClearSuccessRate() {
        PrepareBuilder();
        result.hasSuccessRate = false;
        result.successRate_ = 0F;
        return this;
      }
    }
    static ProtoSuiteResult() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoSpecResult : pb::GeneratedMessage<ProtoSpecResult, ProtoSpecResult.Builder> {
    private ProtoSpecResult() { }
    private static readonly ProtoSpecResult defaultInstance = new ProtoSpecResult().MakeReadOnly();
    private static readonly string[] _protoSpecResultFieldNames = new string[] { "executionTime", "failed", "failedDataTableRows", "protoSpec", "scenarioCount", "scenarioFailedCount" };
    private static readonly uint[] _protoSpecResultFieldTags = new uint[] { 48, 32, 40, 10, 16, 24 };
    public static ProtoSpecResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoSpecResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoSpecResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoSpecResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoSpecResult, ProtoSpecResult.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoSpecResult__FieldAccessorTable; }
    }
    
    public const int ProtoSpecFieldNumber = 1;
    private bool hasProtoSpec;
    private global::main.ProtoSpec protoSpec_;
    public bool HasProtoSpec {
      get { return hasProtoSpec; }
    }
    public global::main.ProtoSpec ProtoSpec {
      get { return protoSpec_ ?? global::main.ProtoSpec.DefaultInstance; }
    }
    
    public const int ScenarioCountFieldNumber = 2;
    private bool hasScenarioCount;
    private int scenarioCount_;
    public bool HasScenarioCount {
      get { return hasScenarioCount; }
    }
    public int ScenarioCount {
      get { return scenarioCount_; }
    }
    
    public const int ScenarioFailedCountFieldNumber = 3;
    private bool hasScenarioFailedCount;
    private int scenarioFailedCount_;
    public bool HasScenarioFailedCount {
      get { return hasScenarioFailedCount; }
    }
    public int ScenarioFailedCount {
      get { return scenarioFailedCount_; }
    }
    
    public const int FailedFieldNumber = 4;
    private bool hasFailed;
    private bool failed_;
    public bool HasFailed {
      get { return hasFailed; }
    }
    public bool Failed {
      get { return failed_; }
    }
    
    public const int FailedDataTableRowsFieldNumber = 5;
    private pbc::PopsicleList<int> failedDataTableRows_ = new pbc::PopsicleList<int>();
    public scg::IList<int> FailedDataTableRowsList {
      get { return pbc::Lists.AsReadOnly(failedDataTableRows_); }
    }
    public int FailedDataTableRowsCount {
      get { return failedDataTableRows_.Count; }
    }
    public int GetFailedDataTableRows(int index) {
      return failedDataTableRows_[index];
    }
    
    public const int ExecutionTimeFieldNumber = 6;
    private bool hasExecutionTime;
    private long executionTime_;
    public bool HasExecutionTime {
      get { return hasExecutionTime; }
    }
    public long ExecutionTime {
      get { return executionTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtoSpec) return false;
        if (!hasScenarioCount) return false;
        if (!hasScenarioFailedCount) return false;
        if (!hasFailed) return false;
        if (!ProtoSpec.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoSpecResultFieldNames;
      if (hasProtoSpec) {
        output.WriteMessage(1, field_names[3], ProtoSpec);
      }
      if (hasScenarioCount) {
        output.WriteInt32(2, field_names[4], ScenarioCount);
      }
      if (hasScenarioFailedCount) {
        output.WriteInt32(3, field_names[5], ScenarioFailedCount);
      }
      if (hasFailed) {
        output.WriteBool(4, field_names[1], Failed);
      }
      if (failedDataTableRows_.Count > 0) {
        output.WriteInt32Array(5, field_names[2], failedDataTableRows_);
      }
      if (hasExecutionTime) {
        output.WriteInt64(6, field_names[0], ExecutionTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProtoSpec) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ProtoSpec);
        }
        if (hasScenarioCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ScenarioCount);
        }
        if (hasScenarioFailedCount) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, ScenarioFailedCount);
        }
        if (hasFailed) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, Failed);
        }
        {
          int dataSize = 0;
          foreach (int element in FailedDataTableRowsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * failedDataTableRows_.Count;
        }
        if (hasExecutionTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(6, ExecutionTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoSpecResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoSpecResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoSpecResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoSpecResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoSpecResult MakeReadOnly() {
      failedDataTableRows_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoSpecResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoSpecResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoSpecResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoSpecResult result;
      
      private ProtoSpecResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoSpecResult original = result;
          result = new ProtoSpecResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoSpecResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoSpecResult.Descriptor; }
      }
      
      public override ProtoSpecResult DefaultInstanceForType {
        get { return global::main.ProtoSpecResult.DefaultInstance; }
      }
      
      public override ProtoSpecResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoSpecResult) {
          return MergeFrom((ProtoSpecResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoSpecResult other) {
        if (other == global::main.ProtoSpecResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtoSpec) {
          MergeProtoSpec(other.ProtoSpec);
        }
        if (other.HasScenarioCount) {
          ScenarioCount = other.ScenarioCount;
        }
        if (other.HasScenarioFailedCount) {
          ScenarioFailedCount = other.ScenarioFailedCount;
        }
        if (other.HasFailed) {
          Failed = other.Failed;
        }
        if (other.failedDataTableRows_.Count != 0) {
          result.failedDataTableRows_.Add(other.failedDataTableRows_);
        }
        if (other.HasExecutionTime) {
          ExecutionTime = other.ExecutionTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoSpecResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoSpecResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::main.ProtoSpec.Builder subBuilder = global::main.ProtoSpec.CreateBuilder();
              if (result.hasProtoSpec) {
                subBuilder.MergeFrom(ProtoSpec);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ProtoSpec = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasScenarioCount = input.ReadInt32(ref result.scenarioCount_);
              break;
            }
            case 24: {
              result.hasScenarioFailedCount = input.ReadInt32(ref result.scenarioFailedCount_);
              break;
            }
            case 32: {
              result.hasFailed = input.ReadBool(ref result.failed_);
              break;
            }
            case 42:
            case 40: {
              input.ReadInt32Array(tag, field_name, result.failedDataTableRows_);
              break;
            }
            case 48: {
              result.hasExecutionTime = input.ReadInt64(ref result.executionTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtoSpec {
       get { return result.hasProtoSpec; }
      }
      public global::main.ProtoSpec ProtoSpec {
        get { return result.ProtoSpec; }
        set { SetProtoSpec(value); }
      }
      public Builder SetProtoSpec(global::main.ProtoSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProtoSpec = true;
        result.protoSpec_ = value;
        return this;
      }
      public Builder SetProtoSpec(global::main.ProtoSpec.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasProtoSpec = true;
        result.protoSpec_ = builderForValue.Build();
        return this;
      }
      public Builder MergeProtoSpec(global::main.ProtoSpec value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasProtoSpec &&
            result.protoSpec_ != global::main.ProtoSpec.DefaultInstance) {
            result.protoSpec_ = global::main.ProtoSpec.CreateBuilder(result.protoSpec_).MergeFrom(value).BuildPartial();
        } else {
          result.protoSpec_ = value;
        }
        result.hasProtoSpec = true;
        return this;
      }
      public Builder ClearProtoSpec() {
        PrepareBuilder();
        result.hasProtoSpec = false;
        result.protoSpec_ = null;
        return this;
      }
      
      public bool HasScenarioCount {
        get { return result.hasScenarioCount; }
      }
      public int ScenarioCount {
        get { return result.ScenarioCount; }
        set { SetScenarioCount(value); }
      }
      public Builder SetScenarioCount(int value) {
        PrepareBuilder();
        result.hasScenarioCount = true;
        result.scenarioCount_ = value;
        return this;
      }
      public Builder ClearScenarioCount() {
        PrepareBuilder();
        result.hasScenarioCount = false;
        result.scenarioCount_ = 0;
        return this;
      }
      
      public bool HasScenarioFailedCount {
        get { return result.hasScenarioFailedCount; }
      }
      public int ScenarioFailedCount {
        get { return result.ScenarioFailedCount; }
        set { SetScenarioFailedCount(value); }
      }
      public Builder SetScenarioFailedCount(int value) {
        PrepareBuilder();
        result.hasScenarioFailedCount = true;
        result.scenarioFailedCount_ = value;
        return this;
      }
      public Builder ClearScenarioFailedCount() {
        PrepareBuilder();
        result.hasScenarioFailedCount = false;
        result.scenarioFailedCount_ = 0;
        return this;
      }
      
      public bool HasFailed {
        get { return result.hasFailed; }
      }
      public bool Failed {
        get { return result.Failed; }
        set { SetFailed(value); }
      }
      public Builder SetFailed(bool value) {
        PrepareBuilder();
        result.hasFailed = true;
        result.failed_ = value;
        return this;
      }
      public Builder ClearFailed() {
        PrepareBuilder();
        result.hasFailed = false;
        result.failed_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<int> FailedDataTableRowsList {
        get { return PrepareBuilder().failedDataTableRows_; }
      }
      public int FailedDataTableRowsCount {
        get { return result.FailedDataTableRowsCount; }
      }
      public int GetFailedDataTableRows(int index) {
        return result.GetFailedDataTableRows(index);
      }
      public Builder SetFailedDataTableRows(int index, int value) {
        PrepareBuilder();
        result.failedDataTableRows_[index] = value;
        return this;
      }
      public Builder AddFailedDataTableRows(int value) {
        PrepareBuilder();
        result.failedDataTableRows_.Add(value);
        return this;
      }
      public Builder AddRangeFailedDataTableRows(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.failedDataTableRows_.Add(values);
        return this;
      }
      public Builder ClearFailedDataTableRows() {
        PrepareBuilder();
        result.failedDataTableRows_.Clear();
        return this;
      }
      
      public bool HasExecutionTime {
        get { return result.hasExecutionTime; }
      }
      public long ExecutionTime {
        get { return result.ExecutionTime; }
        set { SetExecutionTime(value); }
      }
      public Builder SetExecutionTime(long value) {
        PrepareBuilder();
        result.hasExecutionTime = true;
        result.executionTime_ = value;
        return this;
      }
      public Builder ClearExecutionTime() {
        PrepareBuilder();
        result.hasExecutionTime = false;
        result.executionTime_ = 0L;
        return this;
      }
    }
    static ProtoSpecResult() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ProtoStepValue : pb::GeneratedMessage<ProtoStepValue, ProtoStepValue.Builder> {
    private ProtoStepValue() { }
    private static readonly ProtoStepValue defaultInstance = new ProtoStepValue().MakeReadOnly();
    private static readonly string[] _protoStepValueFieldNames = new string[] { "parameterizedStepValue", "parameters", "stepValue" };
    private static readonly uint[] _protoStepValueFieldTags = new uint[] { 18, 26, 10 };
    public static ProtoStepValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ProtoStepValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ProtoStepValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::main.Spec.internal__static_main_ProtoStepValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ProtoStepValue, ProtoStepValue.Builder> InternalFieldAccessors {
      get { return global::main.Spec.internal__static_main_ProtoStepValue__FieldAccessorTable; }
    }
    
    public const int StepValueFieldNumber = 1;
    private bool hasStepValue;
    private string stepValue_ = "";
    public bool HasStepValue {
      get { return hasStepValue; }
    }
    public string StepValue {
      get { return stepValue_; }
    }
    
    public const int ParameterizedStepValueFieldNumber = 2;
    private bool hasParameterizedStepValue;
    private string parameterizedStepValue_ = "";
    public bool HasParameterizedStepValue {
      get { return hasParameterizedStepValue; }
    }
    public string ParameterizedStepValue {
      get { return parameterizedStepValue_; }
    }
    
    public const int ParametersFieldNumber = 3;
    private pbc::PopsicleList<string> parameters_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ParametersList {
      get { return pbc::Lists.AsReadOnly(parameters_); }
    }
    public int ParametersCount {
      get { return parameters_.Count; }
    }
    public string GetParameters(int index) {
      return parameters_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStepValue) return false;
        if (!hasParameterizedStepValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _protoStepValueFieldNames;
      if (hasStepValue) {
        output.WriteString(1, field_names[2], StepValue);
      }
      if (hasParameterizedStepValue) {
        output.WriteString(2, field_names[0], ParameterizedStepValue);
      }
      if (parameters_.Count > 0) {
        output.WriteStringArray(3, field_names[1], parameters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStepValue) {
          size += pb::CodedOutputStream.ComputeStringSize(1, StepValue);
        }
        if (hasParameterizedStepValue) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ParameterizedStepValue);
        }
        {
          int dataSize = 0;
          foreach (string element in ParametersList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * parameters_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ProtoStepValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ProtoStepValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ProtoStepValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ProtoStepValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ProtoStepValue MakeReadOnly() {
      parameters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ProtoStepValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ProtoStepValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ProtoStepValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ProtoStepValue result;
      
      private ProtoStepValue PrepareBuilder() {
        if (resultIsReadOnly) {
          ProtoStepValue original = result;
          result = new ProtoStepValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ProtoStepValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::main.ProtoStepValue.Descriptor; }
      }
      
      public override ProtoStepValue DefaultInstanceForType {
        get { return global::main.ProtoStepValue.DefaultInstance; }
      }
      
      public override ProtoStepValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ProtoStepValue) {
          return MergeFrom((ProtoStepValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ProtoStepValue other) {
        if (other == global::main.ProtoStepValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStepValue) {
          StepValue = other.StepValue;
        }
        if (other.HasParameterizedStepValue) {
          ParameterizedStepValue = other.ParameterizedStepValue;
        }
        if (other.parameters_.Count != 0) {
          result.parameters_.Add(other.parameters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_protoStepValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _protoStepValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasStepValue = input.ReadString(ref result.stepValue_);
              break;
            }
            case 18: {
              result.hasParameterizedStepValue = input.ReadString(ref result.parameterizedStepValue_);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.parameters_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStepValue {
        get { return result.hasStepValue; }
      }
      public string StepValue {
        get { return result.StepValue; }
        set { SetStepValue(value); }
      }
      public Builder SetStepValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStepValue = true;
        result.stepValue_ = value;
        return this;
      }
      public Builder ClearStepValue() {
        PrepareBuilder();
        result.hasStepValue = false;
        result.stepValue_ = "";
        return this;
      }
      
      public bool HasParameterizedStepValue {
        get { return result.hasParameterizedStepValue; }
      }
      public string ParameterizedStepValue {
        get { return result.ParameterizedStepValue; }
        set { SetParameterizedStepValue(value); }
      }
      public Builder SetParameterizedStepValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParameterizedStepValue = true;
        result.parameterizedStepValue_ = value;
        return this;
      }
      public Builder ClearParameterizedStepValue() {
        PrepareBuilder();
        result.hasParameterizedStepValue = false;
        result.parameterizedStepValue_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> ParametersList {
        get { return PrepareBuilder().parameters_; }
      }
      public int ParametersCount {
        get { return result.ParametersCount; }
      }
      public string GetParameters(int index) {
        return result.GetParameters(index);
      }
      public Builder SetParameters(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.parameters_[index] = value;
        return this;
      }
      public Builder AddParameters(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.parameters_.Add(value);
        return this;
      }
      public Builder AddRangeParameters(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.parameters_.Add(values);
        return this;
      }
      public Builder ClearParameters() {
        PrepareBuilder();
        result.parameters_.Clear();
        return this;
      }
    }
    static ProtoStepValue() {
      object.ReferenceEquals(global::main.Spec.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
